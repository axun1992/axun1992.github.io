(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?t(exports):typeof define==="function"&&define.amd?define(["exports"],t):(e=typeof globalThis!=="undefined"?globalThis:e||self,t(e.THREE={}))})(this,function(e){"use strict";const t="127";const n={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const ce=0;const le=1;const ue=2;const r=3;const s=0;const c=1;const o=2;const R=3;const L=0;const he=1;const de=2;const a=1;const l=2;const fe=0;const pe=1;const me=2;const ge=3;const ye=4;const ve=5;const xe=100;const _e=101;const be=102;const Me=103;const we=104;const Ee=200;const Te=201;const Se=202;const Ae=203;const Re=204;const Le=205;const Ce=206;const Pe=207;const Ie=208;const De=209;const Ne=210;const Fe=0;const Oe=1;const Be=2;const Ue=3;const He=4;const ze=5;const Ge=6;const ke=7;const u=0;const h=1;const d=2;const Ve=0;const f=1;const p=2;const m=3;const g=4;const y=5;const v=300;const x=301;const _=302;const b=303;const M=304;const C=306;const P=307;const $=1e3;const ee=1001;const te=1002;const ne=1003;const ie=1004;const w=1004;const re=1005;const E=1005;const se=1006;const oe=1007;const T=1007;const ae=1008;const S=1008;const We=1009;const A=1010;const I=1011;const je=1012;const D=1013;const Xe=1014;const qe=1015;const Ye=1016;const N=1017;const F=1018;const O=1019;const Ze=1020;const B=1021;const Je=1022;const Ke=1023;const U=1024;const H=1025;const z=Ke;const Qe=1026;const $e=1027;const G=1028;const k=1029;const V=1030;const W=1031;const j=1032;const X=1033;const q=33776;const Y=33777;const Z=33778;const J=33779;const K=35840;const Q=35841;const et=35842;const tt=35843;const nt=36196;const it=37492;const rt=37496;const st=37808;const ot=37809;const at=37810;const ct=37811;const lt=37812;const ut=37813;const ht=37814;const dt=37815;const ft=37816;const pt=37817;const mt=37818;const gt=37819;const yt=37820;const vt=37821;const xt=36492;const _t=37840;const bt=37841;const Mt=37842;const wt=37843;const Et=37844;const Tt=37845;const St=37846;const At=37847;const Rt=37848;const Lt=37849;const Ct=37850;const Pt=37851;const It=37852;const Dt=37853;const Nt=2200;const Ft=2201;const Ot=2202;const Bt=2300;const Ut=2301;const Ht=2302;const zt=2400;const Gt=2401;const kt=2402;const Vt=2500;const Wt=2501;const jt=0;const Xt=1;const qt=2;const Yt=3e3;const Zt=3001;const Jt=3007;const Kt=3002;const Qt=3003;const $t=3004;const en=3005;const tn=3006;const nn=3200;const rn=3201;const sn=0;const on=1;const an=0;const cn=7680;const ln=7681;const un=7682;const hn=7683;const dn=34055;const fn=34056;const pn=5386;const mn=512;const gn=513;const yn=514;const vn=515;const xn=516;const _n=517;const bn=518;const Mn=519;const wn=35044;const En=35048;const Tn=35040;const Sn=35045;const An=35049;const Rn=35041;const Ln=35046;const Cn=35050;const Pn=35042;const In="100";const Dn="300 es";function Nn(){}Object.assign(Nn.prototype,{addEventListener:function(e,t){if(this._listeners===undefined)this._listeners={};const n=this._listeners;if(n[e]===undefined){n[e]=[]}if(n[e].indexOf(t)===-1){n[e].push(t)}},hasEventListener:function(e,t){if(this._listeners===undefined)return false;const n=this._listeners;return n[e]!==undefined&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===undefined)return;const n=this._listeners;const i=n[e];if(i!==undefined){const r=i.indexOf(t);if(r!==-1){i.splice(r,1)}}},dispatchEvent:function(n){if(this._listeners===undefined)return;const e=this._listeners;const t=e[n.type];if(t!==undefined){n.target=this;const i=t.slice(0);for(let e=0,t=i.length;e<t;e++){i[e].call(this,n)}n.target=null}}});const Fn=[];for(let e=0;e<256;e++){Fn[e]=(e<16?"0":"")+e.toString(16)}let On=1234567;const Bn={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0;const t=Math.random()*4294967295|0;const n=Math.random()*4294967295|0;const i=Math.random()*4294967295|0;const r=Fn[e&255]+Fn[e>>8&255]+Fn[e>>16&255]+Fn[e>>24&255]+"-"+Fn[t&255]+Fn[t>>8&255]+"-"+Fn[t>>16&15|64]+Fn[t>>24&255]+"-"+Fn[n&63|128]+Fn[n>>8&255]+"-"+Fn[n>>16&255]+Fn[n>>24&255]+Fn[i&255]+Fn[i>>8&255]+Fn[i>>16&255]+Fn[i>>24&255];return r.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){if(e!==t){return(n-e)/(t-e)}else{return 0}},lerp:function(e,t,n){return(1-n)*e+n*t},damp:function(e,t,n,i){return Bn.lerp(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(Bn.euclideanModulo(e,t*2)-t)},smoothstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*(3-2*e)},smootherstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*e*(e*(e*6-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){if(e!==undefined)On=e%2147483647;On=On*16807%2147483647;return(On-1)/2147483646},degToRad:function(e){return e*Bn.DEG2RAD},radToDeg:function(e){return e*Bn.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos;const o=Math.sin;const a=s(n/2);const c=o(n/2);const l=s((t+i)/2);const u=o((t+i)/2);const h=s((t-i)/2);const d=o((t-i)/2);const f=s((i-t)/2);const p=o((i-t)/2);switch(r){case"XYX":e.set(a*u,c*h,c*d,a*l);break;case"YZY":e.set(c*d,a*u,c*h,a*l);break;case"ZXZ":e.set(c*h,c*d,a*u,a*l);break;case"XZX":e.set(a*u,c*p,c*f,a*l);break;case"YXY":e.set(c*f,a*u,c*p,a*l);break;case"ZYZ":e.set(c*p,c*f,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Un{constructor(e=0,t=0){this.x=e;this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){this.x=e;this.y=t;return this}setScalar(e){this.x=e;this.y=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){this.x=e.x;this.y=e.y;return this}add(e,t){if(t!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;return this}addScalar(e){this.x+=e;this.y+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;return this}sub(e,t){if(t!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;return this}subScalar(e){this.x-=e;this.y-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this}multiply(e){this.x*=e.x;this.y*=e.y;return this}multiplyScalar(e){this.x*=e;this.y*=e;return this}divide(e){this.x/=e.x;this.y/=e.y;return this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y;const i=e.elements;this.x=i[0]*t+i[3]*n+i[6];this.y=i[1]*t+i[4]*n+i[7];return this}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this}negate(){this.x=-this.x;this.y=-this.y;return this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;return this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;return e}fromBufferAttribute(e,t,n){if(n!==undefined){console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);return this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t);const r=this.x-e.x;const s=this.y-e.y;this.x=r*n-s*i+e.x;this.y=r*i+s*n+e.y;return this}random(){this.x=Math.random();this.y=Math.random();return this}}Un.prototype.isVector2=true;class Hn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}}set(e,t,n,i,r,s,o,a,c){const l=this.elements;l[0]=e;l[1]=i;l[2]=o;l[3]=t;l[4]=r;l[5]=a;l[6]=n;l[7]=s;l[8]=c;return this}identity(){this.set(1,0,0,0,1,0,0,0,1);return this}copy(e){const t=this.elements;const n=e.elements;t[0]=n[0];t[1]=n[1];t[2]=n[2];t[3]=n[3];t[4]=n[4];t[5]=n[5];t[6]=n[6];t[7]=n[7];t[8]=n[8];return this}extractBasis(e,t,n){e.setFromMatrix3Column(this,0);t.setFromMatrix3Column(this,1);n.setFromMatrix3Column(this,2);return this}setFromMatrix4(e){const t=e.elements;this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]);return this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements;const i=t.elements;const r=this.elements;const s=n[0],o=n[3],a=n[6];const c=n[1],l=n[4],u=n[7];const h=n[2],d=n[5],f=n[8];const p=i[0],m=i[3],g=i[6];const y=i[1],v=i[4],x=i[7];const _=i[2],b=i[5],M=i[8];r[0]=s*p+o*y+a*_;r[3]=s*m+o*v+a*b;r[6]=s*g+o*x+a*M;r[1]=c*p+l*y+u*_;r[4]=c*m+l*v+u*b;r[7]=c*g+l*x+u*M;r[2]=h*p+d*y+f*_;r[5]=h*m+d*v+f*b;r[8]=h*g+d*x+f*M;return this}multiplyScalar(e){const t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this}determinant(){const e=this.elements;const t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*s*l-t*o*c-n*r*l+n*o*a+i*r*c-i*s*a}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],a=e[6],c=e[7],l=e[8],u=l*s-o*c,h=o*a-l*r,d=c*r-s*a,f=t*u+n*h+i*d;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/f;e[0]=u*p;e[1]=(i*c-l*n)*p;e[2]=(o*n-i*s)*p;e[3]=h*p;e[4]=(l*t-i*a)*p;e[5]=(i*r-o*t)*p;e[6]=d*p;e[7]=(n*a-c*t)*p;e[8]=(s*t-n*r)*p;return this}transpose(){let e;const t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this}setUvTransform(e,t,n,i,r,s,o){const a=Math.cos(r);const c=Math.sin(r);this.set(n*a,n*c,-n*(a*s+c*o)+s+e,-i*c,i*a,-i*(-c*s+a*o)+o+t,0,0,1);return this}scale(e,t){const n=this.elements;n[0]*=e;n[3]*=e;n[6]*=e;n[1]*=t;n[4]*=t;n[7]*=t;return this}rotate(e){const t=Math.cos(e);const n=Math.sin(e);const i=this.elements;const r=i[0],s=i[3],o=i[6];const a=i[1],c=i[4],l=i[7];i[0]=t*r+n*a;i[3]=t*s+n*c;i[6]=t*o+n*l;i[1]=-n*r+t*a;i[4]=-n*s+t*c;i[7]=-n*o+t*l;return this}translate(e,t){const n=this.elements;n[0]+=e*n[2];n[3]+=e*n[5];n[6]+=e*n[8];n[1]+=t*n[2];n[4]+=t*n[5];n[7]+=t*n[8];return this}equals(e){const t=this.elements;const n=e.elements;for(let e=0;e<9;e++){if(t[e]!==n[e])return false}return true}fromArray(t,n=0){for(let e=0;e<9;e++){this.elements[e]=t[e+n]}return this}toArray(e=[],t=0){const n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];return e}clone(){return(new this.constructor).fromArray(this.elements)}}Hn.prototype.isMatrix3=true;let zn;const Gn={getDataURL:function(e){if(/^data:/i.test(e.src)){return e.src}if(typeof HTMLCanvasElement=="undefined"){return e.src}let t;if(e instanceof HTMLCanvasElement){t=e}else{if(zn===undefined)zn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");zn.width=e.width;zn.height=e.height;const n=zn.getContext("2d");if(e instanceof ImageData){n.putImageData(e,0,0)}else{n.drawImage(e,0,0,e.width,e.height)}t=zn}if(t.width>2048||t.height>2048){console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e);return t.toDataURL("image/jpeg",.6)}else{return t.toDataURL("image/png")}}};let kn=0;class Vn extends Nn{constructor(e=Vn.DEFAULT_IMAGE,t=Vn.DEFAULT_MAPPING,n=ee,i=ee,r=se,s=ae,o=Ke,a=We,c=1,l=Yt){super();Object.defineProperty(this,"id",{value:kn++});this.uuid=Bn.generateUUID();this.name="";this.image=e;this.mipmaps=[];this.mapping=t;this.wrapS=n;this.wrapT=i;this.magFilter=r;this.minFilter=s;this.anisotropy=c;this.format=o;this.internalFormat=null;this.type=a;this.offset=new Un(0,0);this.repeat=new Un(1,1);this.center=new Un(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Hn;this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.encoding=l;this.version=0;this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name;this.image=e.image;this.mipmaps=e.mipmaps.slice(0);this.mapping=e.mapping;this.wrapS=e.wrapS;this.wrapT=e.wrapT;this.magFilter=e.magFilter;this.minFilter=e.minFilter;this.anisotropy=e.anisotropy;this.format=e.format;this.internalFormat=e.internalFormat;this.type=e.type;this.offset.copy(e.offset);this.repeat.copy(e.repeat);this.center.copy(e.center);this.rotation=e.rotation;this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrix.copy(e.matrix);this.generateMipmaps=e.generateMipmaps;this.premultiplyAlpha=e.premultiplyAlpha;this.flipY=e.flipY;this.unpackAlignment=e.unpackAlignment;this.encoding=e.encoding;return this}toJSON(e){const t=e===undefined||typeof e==="string";if(!t&&e.textures[this.uuid]!==undefined){return e.textures[this.uuid]}const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){const i=this.image;if(i.uuid===undefined){i.uuid=Bn.generateUUID()}if(!t&&e.images[i.uuid]===undefined){let n;if(Array.isArray(i)){n=[];for(let e=0,t=i.length;e<t;e++){if(i[e].isDataTexture){n.push(Wn(i[e].image))}else{n.push(Wn(i[e]))}}}else{n=Wn(i)}e.images[i.uuid]={uuid:i.uuid,url:n}}n.image=i.uuid}if(!t){e.textures[this.uuid]=n}return n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==v)return e;e.applyMatrix3(this.matrix);if(e.x<0||e.x>1){switch(this.wrapS){case $:e.x=e.x-Math.floor(e.x);break;case ee:e.x=e.x<0?0:1;break;case te:if(Math.abs(Math.floor(e.x)%2)===1){e.x=Math.ceil(e.x)-e.x}else{e.x=e.x-Math.floor(e.x)}break}}if(e.y<0||e.y>1){switch(this.wrapT){case $:e.y=e.y-Math.floor(e.y);break;case ee:e.y=e.y<0?0:1;break;case te:if(Math.abs(Math.floor(e.y)%2)===1){e.y=Math.ceil(e.y)-e.y}else{e.y=e.y-Math.floor(e.y)}break}}if(this.flipY){e.y=1-e.y}return e}set needsUpdate(e){if(e===true)this.version++}}Vn.DEFAULT_IMAGE=undefined;Vn.DEFAULT_MAPPING=v;Vn.prototype.isTexture=true;function Wn(e){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){return Gn.getDataURL(e)}else{if(e.data){return{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}}else{console.warn("THREE.Texture: Unable to serialize Texture.");return{}}}}class jn{constructor(e=0,t=0,n=0,i=1){this.x=e;this.y=t;this.z=n;this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){this.x=e;this.y=t;this.z=n;this.w=i;return this}setScalar(e){this.x=e;this.y=e;this.z=e;this.w=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setZ(e){this.z=e;return this}setW(e){this.w=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=e.w!==undefined?e.w:1;return this}add(e,t){if(t!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this}addScalar(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;this.w+=e.w*t;return this}sub(e,t){if(t!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this}subScalar(e){this.x-=e;this.y-=e;this.z-=e;this.w-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this}multiply(e){this.x*=e.x;this.y*=e.y;this.z*=e.z;this.w*=e.w;return this}multiplyScalar(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w;const s=e.elements;this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r;this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r;this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r;this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r;return this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);if(t<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=e.x/t;this.y=e.y/t;this.z=e.z/t}return this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const s=.01,o=.1,a=e.elements,c=a[0],l=a[4],u=a[8],h=a[1],d=a[5],f=a[9],p=a[2],m=a[6],g=a[10];if(Math.abs(l-h)<s&&Math.abs(u-p)<s&&Math.abs(f-m)<s){if(Math.abs(l+h)<o&&Math.abs(u+p)<o&&Math.abs(f+m)<o&&Math.abs(c+d+g-3)<o){this.set(1,0,0,0);return this}t=Math.PI;const v=(c+1)/2;const x=(d+1)/2;const _=(g+1)/2;const b=(l+h)/4;const M=(u+p)/4;const w=(f+m)/4;if(v>x&&v>_){if(v<s){n=0;i=.707106781;r=.707106781}else{n=Math.sqrt(v);i=b/n;r=M/n}}else if(x>_){if(x<s){n=.707106781;i=0;r=.707106781}else{i=Math.sqrt(x);n=b/i;r=w/i}}else{if(_<s){n=.707106781;i=.707106781;r=0}else{r=Math.sqrt(_);n=M/r;i=w/r}}this.set(n,i,r,t);return this}let y=Math.sqrt((m-f)*(m-f)+(u-p)*(u-p)+(h-l)*(h-l));if(Math.abs(y)<.001)y=1;this.x=(m-f)/y;this.y=(u-p)/y;this.z=(h-l)/y;this.w=Math.acos((c+d+g-1)/2);return this}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);this.w=Math.min(this.w,e.w);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);this.w=Math.max(this.w,e.w);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));this.w=Math.max(e.w,Math.min(t.w,this.w));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));this.w=Math.max(e,Math.min(t,this.w));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;this.z=e.z+(t.z-e.z)*n;this.w=e.w+(t.w-e.w)*n;return this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];this.z=e[t+2];this.w=e[t+3];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;e[t+3]=this.w;return e}fromBufferAttribute(e,t,n){if(n!==undefined){console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);this.w=e.getW(t);return this}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this}}jn.prototype.isVector4=true;class Xn extends Nn{constructor(e,t,n){super();this.width=e;this.height=t;this.depth=1;this.scissor=new jn(0,0,e,t);this.scissorTest=false;this.viewport=new jn(0,0,e,t);n=n||{};this.texture=new Vn(undefined,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding);this.texture.image={};this.texture.image.width=e;this.texture.image.height=t;this.texture.image.depth=1;this.texture.generateMipmaps=n.generateMipmaps!==undefined?n.generateMipmaps:false;this.texture.minFilter=n.minFilter!==undefined?n.minFilter:se;this.depthBuffer=n.depthBuffer!==undefined?n.depthBuffer:true;this.stencilBuffer=n.stencilBuffer!==undefined?n.stencilBuffer:false;this.depthTexture=n.depthTexture!==undefined?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth};this.texture=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e;this.height=t;this.depth=n;this.texture.image.width=e;this.texture.image.height=t;this.texture.image.depth=n;this.dispose()}this.viewport.set(0,0,e,t);this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width;this.height=e.height;this.depth=e.depth;this.viewport.copy(e.viewport);this.texture=e.texture.clone();this.depthBuffer=e.depthBuffer;this.stencilBuffer=e.stencilBuffer;this.depthTexture=e.depthTexture;return this}dispose(){this.dispatchEvent({type:"dispose"})}}Xn.prototype.isWebGLRenderTarget=true;class qn extends Xn{constructor(e,t,n){super(e,t,n);this.samples=4}copy(e){super.copy.call(this,e);this.samples=e.samples;return this}}qn.prototype.isWebGLMultisampleRenderTarget=true;class Yn{constructor(e=0,t=0,n=0,i=1){this._x=e;this._y=t;this._z=n;this._w=i}static slerp(e,t,n,i){console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.");return n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,s,o){let a=n[i+0],c=n[i+1],l=n[i+2],u=n[i+3];const h=r[s+0],d=r[s+1],f=r[s+2],p=r[s+3];if(o===0){e[t+0]=a;e[t+1]=c;e[t+2]=l;e[t+3]=u;return}if(o===1){e[t+0]=h;e[t+1]=d;e[t+2]=f;e[t+3]=p;return}if(u!==p||a!==h||c!==d||l!==f){let e=1-o;const m=a*h+c*d+l*f+u*p,g=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const x=Math.sqrt(y),_=Math.atan2(x,m*g);e=Math.sin(e*_)/x;o=Math.sin(o*_)/x}const v=o*g;a=a*e+h*v;c=c*e+d*v;l=l*e+f*v;u=u*e+p*v;if(e===1-o){const b=1/Math.sqrt(a*a+c*c+l*l+u*u);a*=b;c*=b;l*=b;u*=b}}e[t]=a;e[t+1]=c;e[t+2]=l;e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,s){const o=n[i];const a=n[i+1];const c=n[i+2];const l=n[i+3];const u=r[s];const h=r[s+1];const d=r[s+2];const f=r[s+3];e[t]=o*f+l*u+a*d-c*h;e[t+1]=a*f+l*h+c*u-o*d;e[t+2]=c*f+l*d+o*h-a*u;e[t+3]=l*f-o*u-a*h-c*d;return e}get x(){return this._x}set x(e){this._x=e;this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e;this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e;this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e;this._onChangeCallback()}set(e,t,n,i){this._x=e;this._y=t;this._z=n;this._w=i;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this._onChangeCallback();return this}setFromEuler(e,t){if(!(e&&e.isEuler)){throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.")}const n=e._x,i=e._y,r=e._z,s=e._order;const o=Math.cos;const a=Math.sin;const c=o(n/2);const l=o(i/2);const u=o(r/2);const h=a(n/2);const d=a(i/2);const f=a(r/2);switch(s){case"XYZ":this._x=h*l*u+c*d*f;this._y=c*d*u-h*l*f;this._z=c*l*f+h*d*u;this._w=c*l*u-h*d*f;break;case"YXZ":this._x=h*l*u+c*d*f;this._y=c*d*u-h*l*f;this._z=c*l*f-h*d*u;this._w=c*l*u+h*d*f;break;case"ZXY":this._x=h*l*u-c*d*f;this._y=c*d*u+h*l*f;this._z=c*l*f+h*d*u;this._w=c*l*u-h*d*f;break;case"ZYX":this._x=h*l*u-c*d*f;this._y=c*d*u+h*l*f;this._z=c*l*f-h*d*u;this._w=c*l*u+h*d*f;break;case"YZX":this._x=h*l*u+c*d*f;this._y=c*d*u+h*l*f;this._z=c*l*f-h*d*u;this._w=c*l*u-h*d*f;break;case"XZY":this._x=h*l*u-c*d*f;this._y=c*d*u-h*l*f;this._z=c*l*f+h*d*u;this._w=c*l*u+h*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}if(t!==false)this._onChangeCallback();return this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);this._x=e.x*i;this._y=e.y*i;this._z=e.z*i;this._w=Math.cos(n);this._onChangeCallback();return this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],o=t[5],a=t[9],c=t[2],l=t[6],u=t[10],h=n+o+u;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d;this._x=(l-a)*d;this._y=(r-c)*d;this._z=(s-i)*d}else if(n>o&&n>u){const d=2*Math.sqrt(1+n-o-u);this._w=(l-a)/d;this._x=.25*d;this._y=(i+s)/d;this._z=(r+c)/d}else if(o>u){const d=2*Math.sqrt(1+o-n-u);this._w=(r-c)/d;this._x=(i+s)/d;this._y=.25*d;this._z=(a+l)/d}else{const d=2*Math.sqrt(1+u-n-o);this._w=(s-i)/d;this._x=(r+c)/d;this._y=(a+l)/d;this._z=.25*d}this._onChangeCallback();return this}setFromUnitVectors(e,t){let n=e.dot(t)+1;if(n<Number.EPSILON){n=0;if(Math.abs(e.x)>Math.abs(e.z)){this._x=-e.y;this._y=e.x;this._z=0;this._w=n}else{this._x=0;this._y=-e.z;this._z=e.y;this._w=n}}else{this._x=e.y*t.z-e.z*t.y;this._y=e.z*t.x-e.x*t.z;this._z=e.x*t.y-e.y*t.x;this._w=n}return this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Bn.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);this.slerp(e,i);return this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();if(e===0){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}this._onChangeCallback();return this}multiply(e,t){if(t!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(e,t)}return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w;const o=t._x,a=t._y,c=t._z,l=t._w;this._x=n*l+s*o+i*c-r*a;this._y=i*l+s*a+r*o-n*c;this._z=r*l+s*c+n*a-i*o;this._w=s*l-n*o-i*a-r*c;this._onChangeCallback();return this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let o=s*e._w+n*e._x+i*e._y+r*e._z;if(o<0){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;o=-o}else{this.copy(e)}if(o>=1){this._w=s;this._x=n;this._y=i;this._z=r;return this}const a=1-o*o;if(a<=Number.EPSILON){const d=1-t;this._w=d*s+t*this._w;this._x=d*n+t*this._x;this._y=d*i+t*this._y;this._z=d*r+t*this._z;this.normalize();this._onChangeCallback();return this}const c=Math.sqrt(a);const l=Math.atan2(c,o);const u=Math.sin((1-t)*l)/c,h=Math.sin(t*l)/c;this._w=s*u+this._w*h;this._x=n*u+this._x*h;this._y=i*u+this._y*h;this._z=r*u+this._z*h;this._onChangeCallback();return this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){this._x=e[t];this._y=e[t+1];this._z=e[t+2];this._w=e[t+3];this._onChangeCallback();return this}toArray(e=[],t=0){e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._w;return e}fromBufferAttribute(e,t){this._x=e.getX(t);this._y=e.getY(t);this._z=e.getZ(t);this._w=e.getW(t);return this}_onChange(e){this._onChangeCallback=e;return this}_onChangeCallback(){}}Yn.prototype.isQuaternion=true;class Zn{constructor(e=0,t=0,n=0){this.x=e;this.y=t;this.z=n}set(e,t,n){if(n===undefined)n=this.z;this.x=e;this.y=t;this.z=n;return this}setScalar(e){this.x=e;this.y=e;this.z=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setZ(e){this.z=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){this.x=e.x;this.y=e.y;this.z=e.z;return this}add(e,t){if(t!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;return this}addScalar(e){this.x+=e;this.y+=e;this.z+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;return this}sub(e,t){if(t!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;return this}subScalar(e){this.x-=e;this.y-=e;this.z-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this}multiply(e,t){if(t!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(e,t)}this.x*=e.x;this.y*=e.y;this.z*=e.z;return this}multiplyScalar(e){this.x*=e;this.y*=e;this.z*=e;return this}multiplyVectors(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this}applyEuler(e){if(!(e&&e.isEuler)){console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.")}return this.applyQuaternion(Kn.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Kn.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;this.x=r[0]*t+r[3]*n+r[6]*i;this.y=r[1]*t+r[4]*n+r[7]*i;this.z=r[2]*t+r[5]*n+r[8]*i;return this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;const s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s;this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s;this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s;return this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z;const r=e.x,s=e.y,o=e.z,a=e.w;const c=a*t+s*i-o*n;const l=a*n+o*t-r*i;const u=a*i+r*n-s*t;const h=-r*t-s*n-o*i;this.x=c*a+h*-r+l*-o-u*-s;this.y=l*a+h*-s+u*-r-c*-o;this.z=u*a+h*-o+c*-s-l*-r;return this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;this.x=r[0]*t+r[4]*n+r[8]*i;this.y=r[1]*t+r[5]*n+r[9]*i;this.z=r[2]*t+r[6]*n+r[10]*i;return this.normalize()}divide(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;this.z=e.z+(t.z-e.z)*n;return this}cross(e,t){if(t!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(e,t)}return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z;const s=t.x,o=t.y,a=t.z;this.x=i*a-r*o;this.y=r*s-n*a;this.z=n*o-i*s;return this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){Jn.copy(this).projectOnVector(e);return this.sub(Jn)}reflect(e){return this.sub(Jn.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Bn.clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;this.x=i*Math.sin(n);this.y=Math.cos(t)*e;this.z=i*Math.cos(n);return this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){this.x=e*Math.sin(t);this.y=n;this.z=e*Math.cos(t);return this}setFromMatrixPosition(e){const t=e.elements;this.x=t[12];this.y=t[13];this.z=t[14];return this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length();const n=this.setFromMatrixColumn(e,1).length();const i=this.setFromMatrixColumn(e,2).length();this.x=t;this.y=n;this.z=i;return this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];this.z=e[t+2];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;return e}fromBufferAttribute(e,t,n){if(n!==undefined){console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);return this}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this}}Zn.prototype.isVector3=true;const Jn=new Zn;const Kn=new Yn;class Qn{constructor(e=new Zn(+Infinity,+Infinity,+Infinity),t=new Zn(-Infinity,-Infinity,-Infinity)){this.min=e;this.max=t}set(e,t){this.min.copy(e);this.max.copy(t);return this}setFromArray(n){let i=+Infinity;let r=+Infinity;let s=+Infinity;let o=-Infinity;let a=-Infinity;let c=-Infinity;for(let e=0,t=n.length;e<t;e+=3){const l=n[e];const u=n[e+1];const h=n[e+2];if(l<i)i=l;if(u<r)r=u;if(h<s)s=h;if(l>o)o=l;if(u>a)a=u;if(h>c)c=h}this.min.set(i,r,s);this.max.set(o,a,c);return this}setFromBufferAttribute(n){let i=+Infinity;let r=+Infinity;let s=+Infinity;let o=-Infinity;let a=-Infinity;let c=-Infinity;for(let e=0,t=n.count;e<t;e++){const l=n.getX(e);const u=n.getY(e);const h=n.getZ(e);if(l<i)i=l;if(u<r)r=u;if(h<s)s=h;if(l>o)o=l;if(u>a)a=u;if(h>c)c=h}this.min.set(i,r,s);this.max.set(o,a,c);return this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++){this.expandByPoint(n[e])}return this}setFromCenterAndSize(e,t){const n=ei.copy(t).multiplyScalar(.5);this.min.copy(e).sub(n);this.max.copy(e).add(n);return this}setFromObject(e){this.makeEmpty();return this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){this.min.copy(e.min);this.max.copy(e.max);return this}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){if(e===undefined){console.warn("THREE.Box3: .getCenter() target is now required");e=new Zn}return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){if(e===undefined){console.warn("THREE.Box3: .getSize() target is now required");e=new Zn}return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){this.min.min(e);this.max.max(e);return this}expandByVector(e){this.min.sub(e);this.max.add(e);return this}expandByScalar(e){this.min.addScalar(-e);this.max.addScalar(e);return this}expandByObject(e){e.updateWorldMatrix(false,false);const t=e.geometry;if(t!==undefined){if(t.boundingBox===null){t.computeBoundingBox()}ti.copy(t.boundingBox);ti.applyMatrix4(e.matrixWorld);this.union(ti)}const n=e.children;for(let e=0,t=n.length;e<t;e++){this.expandByObject(n[e])}return this}containsPoint(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?false:true}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){if(t===undefined){console.warn("THREE.Box3: .getParameter() target is now required");t=new Zn}return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?false:true}intersectsSphere(e){this.clampPoint(e.center,ei);return ei.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;if(e.normal.x>0){t=e.normal.x*this.min.x;n=e.normal.x*this.max.x}else{t=e.normal.x*this.max.x;n=e.normal.x*this.min.x}if(e.normal.y>0){t+=e.normal.y*this.min.y;n+=e.normal.y*this.max.y}else{t+=e.normal.y*this.max.y;n+=e.normal.y*this.min.y}if(e.normal.z>0){t+=e.normal.z*this.min.z;n+=e.normal.z*this.max.z}else{t+=e.normal.z*this.max.z;n+=e.normal.z*this.min.z}return t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty()){return false}this.getCenter(ci);li.subVectors(this.max,ci);ni.subVectors(e.a,ci);ii.subVectors(e.b,ci);ri.subVectors(e.c,ci);si.subVectors(ii,ni);oi.subVectors(ri,ii);ai.subVectors(ni,ri);let t=[0,-si.z,si.y,0,-oi.z,oi.y,0,-ai.z,ai.y,si.z,0,-si.x,oi.z,0,-oi.x,ai.z,0,-ai.x,-si.y,si.x,0,-oi.y,oi.x,0,-ai.y,ai.x,0];if(!di(t,ni,ii,ri,li)){return false}t=[1,0,0,0,1,0,0,0,1];if(!di(t,ni,ii,ri,li)){return false}ui.crossVectors(si,oi);t=[ui.x,ui.y,ui.z];return di(t,ni,ii,ri,li)}clampPoint(e,t){if(t===undefined){console.warn("THREE.Box3: .clampPoint() target is now required");t=new Zn}return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=ei.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){if(e===undefined){console.error("THREE.Box3: .getBoundingSphere() target is now required")}this.getCenter(e.center);e.radius=this.getSize(ei).length()*.5;return e}intersect(e){this.min.max(e.min);this.max.min(e.max);if(this.isEmpty())this.makeEmpty();return this}union(e){this.min.min(e.min);this.max.max(e.max);return this}applyMatrix4(e){if(this.isEmpty())return this;$n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e);$n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e);$n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e);$n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e);$n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e);$n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e);$n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e);$n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e);this.setFromPoints($n);return this}translate(e){this.min.add(e);this.max.add(e);return this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Qn.prototype.isBox3=true;const $n=[new Zn,new Zn,new Zn,new Zn,new Zn,new Zn,new Zn,new Zn];const ei=new Zn;const ti=new Qn;const ni=new Zn;const ii=new Zn;const ri=new Zn;const si=new Zn;const oi=new Zn;const ai=new Zn;const ci=new Zn;const li=new Zn;const ui=new Zn;const hi=new Zn;function di(n,i,r,s,o){for(let e=0,t=n.length-3;e<=t;e+=3){hi.fromArray(n,e);const a=o.x*Math.abs(hi.x)+o.y*Math.abs(hi.y)+o.z*Math.abs(hi.z);const c=i.dot(hi);const l=r.dot(hi);const u=s.dot(hi);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a){return false}}return true}const fi=new Qn;const pi=new Zn;const mi=new Zn;const gi=new Zn;class yi{constructor(e=new Zn,t=-1){this.center=e;this.radius=t}set(e,t){this.center.copy(e);this.radius=t;return this}setFromPoints(n,e){const i=this.center;if(e!==undefined){i.copy(e)}else{fi.setFromPoints(n).getCenter(i)}let r=0;for(let e=0,t=n.length;e<t;e++){r=Math.max(r,i.distanceToSquared(n[e]))}this.radius=Math.sqrt(r);return this}copy(e){this.center.copy(e.center);this.radius=e.radius;return this}isEmpty(){return this.radius<0}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);if(t===undefined){console.warn("THREE.Sphere: .clampPoint() target is now required");t=new Zn}t.copy(e);if(n>this.radius*this.radius){t.sub(this.center).normalize();t.multiplyScalar(this.radius).add(this.center)}return t}getBoundingBox(e){if(e===undefined){console.warn("THREE.Sphere: .getBoundingBox() target is now required");e=new Qn}if(this.isEmpty()){e.makeEmpty();return e}e.set(this.center,this.center);e.expandByScalar(this.radius);return e}applyMatrix4(e){this.center.applyMatrix4(e);this.radius=this.radius*e.getMaxScaleOnAxis();return this}translate(e){this.center.add(e);return this}expandByPoint(e){gi.subVectors(e,this.center);const t=gi.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t);const i=(n-this.radius)*.5;this.center.add(gi.multiplyScalar(i/n));this.radius+=i}return this}union(e){mi.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius);this.expandByPoint(pi.copy(e.center).add(mi));this.expandByPoint(pi.copy(e.center).sub(mi));return this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const vi=new Zn;const xi=new Zn;const _i=new Zn;const bi=new Zn;const Mi=new Zn;const wi=new Zn;const Ei=new Zn;class Ti{constructor(e=new Zn,t=new Zn(0,0,-1)){this.origin=e;this.direction=t}set(e,t){this.origin.copy(e);this.direction.copy(t);return this}copy(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this}at(e,t){if(t===undefined){console.warn("THREE.Ray: .at() target is now required");t=new Zn}return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){this.direction.copy(e).sub(this.origin).normalize();return this}recast(e){this.origin.copy(this.at(e,vi));return this}closestPointToPoint(e,t){if(t===undefined){console.warn("THREE.Ray: .closestPointToPoint() target is now required");t=new Zn}t.subVectors(e,this.origin);const n=t.dot(this.direction);if(n<0){return t.copy(this.origin)}return t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=vi.subVectors(e,this.origin).dot(this.direction);if(t<0){return this.origin.distanceToSquared(e)}vi.copy(this.direction).multiplyScalar(t).add(this.origin);return vi.distanceToSquared(e)}distanceSqToSegment(e,t,n,i){xi.copy(e).add(t).multiplyScalar(.5);_i.copy(t).sub(e).normalize();bi.copy(this.origin).sub(xi);const r=e.distanceTo(t)*.5;const s=-this.direction.dot(_i);const o=bi.dot(this.direction);const a=-bi.dot(_i);const c=bi.lengthSq();const l=Math.abs(1-s*s);let u,h,d,f;if(l>0){u=s*a-o;h=s*o-a;f=r*l;if(u>=0){if(h>=-f){if(h<=f){const p=1/l;u*=p;h*=p;d=u*(u+s*h+2*o)+h*(s*u+h+2*a)+c}else{h=r;u=Math.max(0,-(s*h+o));d=-u*u+h*(h+2*a)+c}}else{h=-r;u=Math.max(0,-(s*h+o));d=-u*u+h*(h+2*a)+c}}else{if(h<=-f){u=Math.max(0,-(-s*r+o));h=u>0?-r:Math.min(Math.max(-r,-a),r);d=-u*u+h*(h+2*a)+c}else if(h<=f){u=0;h=Math.min(Math.max(-r,-a),r);d=h*(h+2*a)+c}else{u=Math.max(0,-(s*r+o));h=u>0?r:Math.min(Math.max(-r,-a),r);d=-u*u+h*(h+2*a)+c}}}else{h=s>0?-r:r;u=Math.max(0,-(s*h+o));d=-u*u+h*(h+2*a)+c}if(n){n.copy(this.direction).multiplyScalar(u).add(this.origin)}if(i){i.copy(_i).multiplyScalar(h).add(xi)}return d}intersectSphere(e,t){vi.subVectors(e.center,this.origin);const n=vi.dot(this.direction);const i=vi.dot(vi)-n*n;const r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i);const o=n-s;const a=n+s;if(o<0&&a<0)return null;if(o<0)return this.at(a,t);return this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0){if(e.distanceToPoint(this.origin)===0){return 0}return null}const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);if(n===null){return null}return this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(t===0){return true}const n=e.normal.dot(this.direction);if(n*t<0){return true}return false}intersectBox(e,t){let n,i,r,s,o,a;const c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z;const h=this.origin;if(c>=0){n=(e.min.x-h.x)*c;i=(e.max.x-h.x)*c}else{n=(e.max.x-h.x)*c;i=(e.min.x-h.x)*c}if(l>=0){r=(e.min.y-h.y)*l;s=(e.max.y-h.y)*l}else{r=(e.max.y-h.y)*l;s=(e.min.y-h.y)*l}if(n>s||r>i)return null;if(r>n||n!==n)n=r;if(s<i||i!==i)i=s;if(u>=0){o=(e.min.z-h.z)*u;a=(e.max.z-h.z)*u}else{o=(e.max.z-h.z)*u;a=(e.min.z-h.z)*u}if(n>a||o>i)return null;if(o>n||n!==n)n=o;if(a<i||i!==i)i=a;if(i<0)return null;return this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,vi)!==null}intersectTriangle(e,t,n,i,r){Mi.subVectors(t,e);wi.subVectors(n,e);Ei.crossVectors(Mi,wi);let s=this.direction.dot(Ei);let o;if(s>0){if(i)return null;o=1}else if(s<0){o=-1;s=-s}else{return null}bi.subVectors(this.origin,e);const a=o*this.direction.dot(wi.crossVectors(bi,wi));if(a<0){return null}const c=o*this.direction.dot(Mi.cross(bi));if(c<0){return null}if(a+c>s){return null}const l=-o*bi.dot(Ei);if(l<0){return null}return this.at(l/s,r)}applyMatrix4(e){this.origin.applyMatrix4(e);this.direction.transformDirection(e);return this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Si{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}}set(e,t,n,i,r,s,o,a,c,l,u,h,d,f,p,m){const g=this.elements;g[0]=e;g[4]=t;g[8]=n;g[12]=i;g[1]=r;g[5]=s;g[9]=o;g[13]=a;g[2]=c;g[6]=l;g[10]=u;g[14]=h;g[3]=d;g[7]=f;g[11]=p;g[15]=m;return this}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this}clone(){return(new Si).fromArray(this.elements)}copy(e){const t=this.elements;const n=e.elements;t[0]=n[0];t[1]=n[1];t[2]=n[2];t[3]=n[3];t[4]=n[4];t[5]=n[5];t[6]=n[6];t[7]=n[7];t[8]=n[8];t[9]=n[9];t[10]=n[10];t[11]=n[11];t[12]=n[12];t[13]=n[13];t[14]=n[14];t[15]=n[15];return this}copyPosition(e){const t=this.elements,n=e.elements;t[12]=n[12];t[13]=n[13];t[14]=n[14];return this}setFromMatrix3(e){const t=e.elements;this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1);return this}extractBasis(e,t,n){e.setFromMatrixColumn(this,0);t.setFromMatrixColumn(this,1);n.setFromMatrixColumn(this,2);return this}makeBasis(e,t,n){this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1);return this}extractRotation(e){const t=this.elements;const n=e.elements;const i=1/Ai.setFromMatrixColumn(e,0).length();const r=1/Ai.setFromMatrixColumn(e,1).length();const s=1/Ai.setFromMatrixColumn(e,2).length();t[0]=n[0]*i;t[1]=n[1]*i;t[2]=n[2]*i;t[3]=0;t[4]=n[4]*r;t[5]=n[5]*r;t[6]=n[6]*r;t[7]=0;t[8]=n[8]*s;t[9]=n[9]*s;t[10]=n[10]*s;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this}makeRotationFromEuler(e){if(!(e&&e.isEuler)){console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}const t=this.elements;const n=e.x,i=e.y,r=e.z;const s=Math.cos(n),o=Math.sin(n);const a=Math.cos(i),c=Math.sin(i);const l=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const h=s*l,d=s*u,f=o*l,p=o*u;t[0]=a*l;t[4]=-a*u;t[8]=c;t[1]=d+f*c;t[5]=h-p*c;t[9]=-o*a;t[2]=p-h*c;t[6]=f+d*c;t[10]=s*a}else if(e.order==="YXZ"){const m=a*l,g=a*u,y=c*l,v=c*u;t[0]=m+v*o;t[4]=y*o-g;t[8]=s*c;t[1]=s*u;t[5]=s*l;t[9]=-o;t[2]=g*o-y;t[6]=v+m*o;t[10]=s*a}else if(e.order==="ZXY"){const m=a*l,g=a*u,y=c*l,v=c*u;t[0]=m-v*o;t[4]=-s*u;t[8]=y+g*o;t[1]=g+y*o;t[5]=s*l;t[9]=v-m*o;t[2]=-s*c;t[6]=o;t[10]=s*a}else if(e.order==="ZYX"){const h=s*l,d=s*u,f=o*l,p=o*u;t[0]=a*l;t[4]=f*c-d;t[8]=h*c+p;t[1]=a*u;t[5]=p*c+h;t[9]=d*c-f;t[2]=-c;t[6]=o*a;t[10]=s*a}else if(e.order==="YZX"){const x=s*a,_=s*c,b=o*a,M=o*c;t[0]=a*l;t[4]=M-x*u;t[8]=b*u+_;t[1]=u;t[5]=s*l;t[9]=-o*l;t[2]=-c*l;t[6]=_*u+b;t[10]=x-M*u}else if(e.order==="XZY"){const x=s*a,_=s*c,b=o*a,M=o*c;t[0]=a*l;t[4]=-u;t[8]=c*l;t[1]=x*u+M;t[5]=s*l;t[9]=_*u-b;t[2]=b*u-_;t[6]=o*l;t[10]=M*u+x}t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this}makeRotationFromQuaternion(e){return this.compose(Li,e,Ci)}lookAt(e,t,n){const i=this.elements;Di.subVectors(e,t);if(Di.lengthSq()===0){Di.z=1}Di.normalize();Pi.crossVectors(n,Di);if(Pi.lengthSq()===0){if(Math.abs(n.z)===1){Di.x+=1e-4}else{Di.z+=1e-4}Di.normalize();Pi.crossVectors(n,Di)}Pi.normalize();Ii.crossVectors(Di,Pi);i[0]=Pi.x;i[4]=Ii.x;i[8]=Di.x;i[1]=Pi.y;i[5]=Ii.y;i[9]=Di.y;i[2]=Pi.z;i[6]=Ii.z;i[10]=Di.z;return this}multiply(e,t){if(t!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(e,t)}return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements;const i=t.elements;const r=this.elements;const s=n[0],o=n[4],a=n[8],c=n[12];const l=n[1],u=n[5],h=n[9],d=n[13];const f=n[2],p=n[6],m=n[10],g=n[14];const y=n[3],v=n[7],x=n[11],_=n[15];const b=i[0],M=i[4],w=i[8],E=i[12];const T=i[1],S=i[5],A=i[9],R=i[13];const L=i[2],C=i[6],P=i[10],I=i[14];const D=i[3],N=i[7],F=i[11],O=i[15];r[0]=s*b+o*T+a*L+c*D;r[4]=s*M+o*S+a*C+c*N;r[8]=s*w+o*A+a*P+c*F;r[12]=s*E+o*R+a*I+c*O;r[1]=l*b+u*T+h*L+d*D;r[5]=l*M+u*S+h*C+d*N;r[9]=l*w+u*A+h*P+d*F;r[13]=l*E+u*R+h*I+d*O;r[2]=f*b+p*T+m*L+g*D;r[6]=f*M+p*S+m*C+g*N;r[10]=f*w+p*A+m*P+g*F;r[14]=f*E+p*R+m*I+g*O;r[3]=y*b+v*T+x*L+_*D;r[7]=y*M+v*S+x*C+_*N;r[11]=y*w+v*A+x*P+_*F;r[15]=y*E+v*R+x*I+_*O;return this}multiplyScalar(e){const t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this}determinant(){const e=this.elements;const t=e[0],n=e[4],i=e[8],r=e[12];const s=e[1],o=e[5],a=e[9],c=e[13];const l=e[2],u=e[6],h=e[10],d=e[14];const f=e[3],p=e[7],m=e[11],g=e[15];return f*(+r*a*u-i*c*u-r*o*h+n*c*h+i*o*d-n*a*d)+p*(+t*a*d-t*c*h+r*s*h-i*s*d+i*c*l-r*a*l)+m*(+t*c*u-t*o*d-r*s*u+n*s*d+r*o*l-n*c*l)+g*(-i*o*l-t*a*u+t*o*h+i*s*u-n*s*h+n*a*l)}transpose(){const e=this.elements;let t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this}setPosition(e,t,n){const i=this.elements;if(e.isVector3){i[12]=e.x;i[13]=e.y;i[14]=e.z}else{i[12]=e;i[13]=t;i[14]=n}return this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],a=e[6],c=e[7],l=e[8],u=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],y=u*m*c-p*h*c+p*a*d-o*m*d-u*a*g+o*h*g,v=f*h*c-l*m*c-f*a*d+s*m*d+l*a*g-s*h*g,x=l*p*c-f*u*c+f*o*d-s*p*d-l*o*g+s*u*g,_=f*u*a-l*p*a-f*o*h+s*p*h+l*o*m-s*u*m;const b=t*y+n*v+i*x+r*_;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;e[0]=y*M;e[1]=(p*h*r-u*m*r-p*i*d+n*m*d+u*i*g-n*h*g)*M;e[2]=(o*m*r-p*a*r+p*i*c-n*m*c-o*i*g+n*a*g)*M;e[3]=(u*a*r-o*h*r-u*i*c+n*h*c+o*i*d-n*a*d)*M;e[4]=v*M;e[5]=(l*m*r-f*h*r+f*i*d-t*m*d-l*i*g+t*h*g)*M;e[6]=(f*a*r-s*m*r-f*i*c+t*m*c+s*i*g-t*a*g)*M;e[7]=(s*h*r-l*a*r+l*i*c-t*h*c-s*i*d+t*a*d)*M;e[8]=x*M;e[9]=(f*u*r-l*p*r-f*n*d+t*p*d+l*n*g-t*u*g)*M;e[10]=(s*p*r-f*o*r+f*n*c-t*p*c-s*n*g+t*o*g)*M;e[11]=(l*o*r-s*u*r-l*n*c+t*u*c+s*n*d-t*o*d)*M;e[12]=_*M;e[13]=(l*p*i-f*u*i+f*n*h-t*p*h-l*n*m+t*u*m)*M;e[14]=(f*o*i-s*p*i-f*n*a+t*p*a+s*n*m-t*o*m)*M;e[15]=(s*u*i-l*o*i+l*n*a-t*u*a-s*n*h+t*o*h)*M;return this}scale(e){const t=this.elements;const n=e.x,i=e.y,r=e.z;t[0]*=n;t[4]*=i;t[8]*=r;t[1]*=n;t[5]*=i;t[9]*=r;t[2]*=n;t[6]*=i;t[10]*=r;t[3]*=n;t[7]*=i;t[11]*=r;return this}getMaxScaleOnAxis(){const e=this.elements;const t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];const n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6];const i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1);return this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1);return this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1);return this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1);return this}makeRotationAxis(e,t){const n=Math.cos(t);const i=Math.sin(t);const r=1-n;const s=e.x,o=e.y,a=e.z;const c=r*s,l=r*o;this.set(c*s+n,c*o-i*a,c*a+i*o,0,c*o+i*a,l*o+n,l*a-i*s,0,c*a-i*o,l*a+i*s,r*a*a+n,0,0,0,0,1);return this}makeScale(e,t,n){this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1);return this}makeShear(e,t,n){this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1);return this}compose(e,t,n){const i=this.elements;const r=t._x,s=t._y,o=t._z,a=t._w;const c=r+r,l=s+s,u=o+o;const h=r*c,d=r*l,f=r*u;const p=s*l,m=s*u,g=o*u;const y=a*c,v=a*l,x=a*u;const _=n.x,b=n.y,M=n.z;i[0]=(1-(p+g))*_;i[1]=(d+x)*_;i[2]=(f-v)*_;i[3]=0;i[4]=(d-x)*b;i[5]=(1-(h+g))*b;i[6]=(m+y)*b;i[7]=0;i[8]=(f+v)*M;i[9]=(m-y)*M;i[10]=(1-(h+p))*M;i[11]=0;i[12]=e.x;i[13]=e.y;i[14]=e.z;i[15]=1;return this}decompose(e,t,n){const i=this.elements;let r=Ai.set(i[0],i[1],i[2]).length();const s=Ai.set(i[4],i[5],i[6]).length();const o=Ai.set(i[8],i[9],i[10]).length();const a=this.determinant();if(a<0)r=-r;e.x=i[12];e.y=i[13];e.z=i[14];Ri.copy(this);const c=1/r;const l=1/s;const u=1/o;Ri.elements[0]*=c;Ri.elements[1]*=c;Ri.elements[2]*=c;Ri.elements[4]*=l;Ri.elements[5]*=l;Ri.elements[6]*=l;Ri.elements[8]*=u;Ri.elements[9]*=u;Ri.elements[10]*=u;t.setFromRotationMatrix(Ri);n.x=r;n.y=s;n.z=o;return this}makePerspective(e,t,n,i,r,s){if(s===undefined){console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.")}const o=this.elements;const a=2*r/(t-e);const c=2*r/(n-i);const l=(t+e)/(t-e);const u=(n+i)/(n-i);const h=-(s+r)/(s-r);const d=-2*s*r/(s-r);o[0]=a;o[4]=0;o[8]=l;o[12]=0;o[1]=0;o[5]=c;o[9]=u;o[13]=0;o[2]=0;o[6]=0;o[10]=h;o[14]=d;o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this}makeOrthographic(e,t,n,i,r,s){const o=this.elements;const a=1/(t-e);const c=1/(n-i);const l=1/(s-r);const u=(t+e)*a;const h=(n+i)*c;const d=(s+r)*l;o[0]=2*a;o[4]=0;o[8]=0;o[12]=-u;o[1]=0;o[5]=2*c;o[9]=0;o[13]=-h;o[2]=0;o[6]=0;o[10]=-2*l;o[14]=-d;o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this}equals(e){const t=this.elements;const n=e.elements;for(let e=0;e<16;e++){if(t[e]!==n[e])return false}return true}fromArray(t,n=0){for(let e=0;e<16;e++){this.elements[e]=t[e+n]}return this}toArray(e=[],t=0){const n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];e[t+9]=n[9];e[t+10]=n[10];e[t+11]=n[11];e[t+12]=n[12];e[t+13]=n[13];e[t+14]=n[14];e[t+15]=n[15];return e}}Si.prototype.isMatrix4=true;const Ai=new Zn;const Ri=new Si;const Li=new Zn(0,0,0);const Ci=new Zn(1,1,1);const Pi=new Zn;const Ii=new Zn;const Di=new Zn;const Ni=new Si;const Fi=new Yn;class Oi{constructor(e=0,t=0,n=0,i=Oi.DefaultOrder){this._x=e;this._y=t;this._z=n;this._order=i}get x(){return this._x}set x(e){this._x=e;this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e;this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e;this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e;this._onChangeCallback()}set(e,t,n,i){this._x=e;this._y=t;this._z=n;this._order=i||this._order;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this._onChangeCallback();return this}setFromRotationMatrix(e,t,n){const i=Bn.clamp;const r=e.elements;const s=r[0],o=r[4],a=r[8];const c=r[1],l=r[5],u=r[9];const h=r[2],d=r[6],f=r[10];t=t||this._order;switch(t){case"XYZ":this._y=Math.asin(i(a,-1,1));if(Math.abs(a)<.9999999){this._x=Math.atan2(-u,f);this._z=Math.atan2(-o,s)}else{this._x=Math.atan2(d,l);this._z=0}break;case"YXZ":this._x=Math.asin(-i(u,-1,1));if(Math.abs(u)<.9999999){this._y=Math.atan2(a,f);this._z=Math.atan2(c,l)}else{this._y=Math.atan2(-h,s);this._z=0}break;case"ZXY":this._x=Math.asin(i(d,-1,1));if(Math.abs(d)<.9999999){this._y=Math.atan2(-h,f);this._z=Math.atan2(-o,l)}else{this._y=0;this._z=Math.atan2(c,s)}break;case"ZYX":this._y=Math.asin(-i(h,-1,1));if(Math.abs(h)<.9999999){this._x=Math.atan2(d,f);this._z=Math.atan2(c,s)}else{this._x=0;this._z=Math.atan2(-o,l)}break;case"YZX":this._z=Math.asin(i(c,-1,1));if(Math.abs(c)<.9999999){this._x=Math.atan2(-u,l);this._y=Math.atan2(-h,s)}else{this._x=0;this._y=Math.atan2(a,f)}break;case"XZY":this._z=Math.asin(-i(o,-1,1));if(Math.abs(o)<.9999999){this._x=Math.atan2(d,l);this._y=Math.atan2(a,s)}else{this._x=Math.atan2(-u,f);this._y=0}break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}this._order=t;if(n!==false)this._onChangeCallback();return this}setFromQuaternion(e,t,n){Ni.makeRotationFromQuaternion(e);return this.setFromRotationMatrix(Ni,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){Fi.setFromEuler(this);return this.setFromQuaternion(Fi,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){this._x=e[0];this._y=e[1];this._z=e[2];if(e[3]!==undefined)this._order=e[3];this._onChangeCallback();return this}toArray(e=[],t=0){e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._order;return e}toVector3(e){if(e){return e.set(this._x,this._y,this._z)}else{return new Zn(this._x,this._y,this._z)}}_onChange(e){this._onChangeCallback=e;return this}_onChangeCallback(){}}Oi.prototype.isEuler=true;Oi.DefaultOrder="XYZ";Oi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Bi{constructor(){this.mask=1|0}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let Ui=0;const Hi=new Zn;const zi=new Yn;const Gi=new Si;const ki=new Zn;const Vi=new Zn;const Wi=new Zn;const ji=new Yn;const Xi=new Zn(1,0,0);const qi=new Zn(0,1,0);const Yi=new Zn(0,0,1);const Zi={type:"added"};const Ji={type:"removed"};function Ki(){Object.defineProperty(this,"id",{value:Ui++});this.uuid=Bn.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Ki.DefaultUp.clone();const e=new Zn;const t=new Oi;const n=new Yn;const i=new Zn(1,1,1);function r(){n.setFromEuler(t,false)}function s(){t.setFromQuaternion(n,undefined,false)}t._onChange(r);n._onChange(s);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:e},rotation:{configurable:true,enumerable:true,value:t},quaternion:{configurable:true,enumerable:true,value:n},scale:{configurable:true,enumerable:true,value:i},modelViewMatrix:{value:new Si},normalMatrix:{value:new Hn}});this.matrix=new Si;this.matrixWorld=new Si;this.matrixAutoUpdate=Ki.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Bi;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={}}Ki.DefaultUp=new Zn(0,1,0);Ki.DefaultMatrixAutoUpdate=true;Ki.prototype=Object.assign(Object.create(Nn.prototype),{constructor:Ki,isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(e);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){this.quaternion.premultiply(e);return this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,true)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){zi.setFromAxisAngle(e,t);this.quaternion.multiply(zi);return this},rotateOnWorldAxis:function(e,t){zi.setFromAxisAngle(e,t);this.quaternion.premultiply(zi);return this},rotateX:function(e){return this.rotateOnAxis(Xi,e)},rotateY:function(e){return this.rotateOnAxis(qi,e)},rotateZ:function(e){return this.rotateOnAxis(Yi,e)},translateOnAxis:function(e,t){Hi.copy(e).applyQuaternion(this.quaternion);this.position.add(Hi.multiplyScalar(t));return this},translateX:function(e){return this.translateOnAxis(Xi,e)},translateY:function(e){return this.translateOnAxis(qi,e)},translateZ:function(e){return this.translateOnAxis(Yi,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Gi.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){if(e.isVector3){ki.copy(e)}else{ki.set(e,t,n)}const i=this.parent;this.updateWorldMatrix(true,false);Vi.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){Gi.lookAt(Vi,ki,this.up)}else{Gi.lookAt(ki,Vi,this.up)}this.quaternion.setFromRotationMatrix(Gi);if(i){Gi.extractRotation(i.matrixWorld);zi.setFromRotationMatrix(Gi);this.quaternion.premultiply(zi.invert())}},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++){this.add(arguments[e])}return this}if(e===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",e);return this}if(e&&e.isObject3D){if(e.parent!==null){e.parent.remove(e)}e.parent=this;this.children.push(e);e.dispatchEvent(Zi)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e)}return this},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++){this.remove(arguments[e])}return this}const t=this.children.indexOf(e);if(t!==-1){e.parent=null;this.children.splice(t,1);e.dispatchEvent(Ji)}return this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null;t.dispatchEvent(Ji)}this.children.length=0;return this},attach:function(e){this.updateWorldMatrix(true,false);Gi.copy(this.matrixWorld).invert();if(e.parent!==null){e.parent.updateWorldMatrix(true,false);Gi.multiply(e.parent.matrixWorld)}e.applyMatrix4(Gi);this.add(e);e.updateWorldMatrix(false,true);return this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(n,i){if(this[n]===i)return this;for(let e=0,t=this.children.length;e<t;e++){const r=this.children[e];const s=r.getObjectByProperty(n,i);if(s!==undefined){return s}}return undefined},getWorldPosition:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldPosition() target is now required");e=new Zn}this.updateWorldMatrix(true,false);return e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldQuaternion() target is now required");e=new Yn}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(Vi,e,Wi);return e},getWorldScale:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldScale() target is now required");e=new Zn}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(Vi,ji,e);return e},getWorldDirection:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldDirection() target is now required");e=new Zn}this.updateWorldMatrix(true,false);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const i=this.children;for(let e=0,t=i.length;e<t;e++){i[e].traverse(n)}},traverseVisible:function(n){if(this.visible===false)return;n(this);const i=this.children;for(let e=0,t=i.length;e<t;e++){i[e].traverseVisible(n)}},traverseAncestors:function(e){const t=this.parent;if(t!==null){e(t);t.traverseAncestors(e)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(n){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||n){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;n=true}const i=this.children;for(let e=0,t=i.length;e<t;e++){i[e].updateMatrixWorld(n)}},updateWorldMatrix:function(e,t){const n=this.parent;if(e===true&&n!==null){n.updateWorldMatrix(true,false)}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}if(t===true){const i=this.children;for(let e=0,t=i.length;e<t;e++){i[e].updateWorldMatrix(false,true)}}},toJSON:function(n){const e=n===undefined||typeof n==="string";const t={};if(e){n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}}const i={};i.uuid=this.uuid;i.type=this.type;if(this.name!=="")i.name=this.name;if(this.castShadow===true)i.castShadow=true;if(this.receiveShadow===true)i.receiveShadow=true;if(this.visible===false)i.visible=false;if(this.frustumCulled===false)i.frustumCulled=false;if(this.renderOrder!==0)i.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=="{}")i.userData=this.userData;i.layers=this.layers.mask;i.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)i.matrixAutoUpdate=false;if(this.isInstancedMesh){i.type="InstancedMesh";i.count=this.count;i.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)i.instanceColor=this.instanceColor.toJSON()}function r(e,t){if(e[t.uuid]===undefined){e[t.uuid]=t.toJSON(n)}return t.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(n.geometries,this.geometry);const o=this.geometry.parameters;if(o!==undefined&&o.shapes!==undefined){const a=o.shapes;if(Array.isArray(a)){for(let e=0,t=a.length;e<t;e++){const c=a[e];r(n.shapes,c)}}else{r(n.shapes,a)}}}if(this.isSkinnedMesh){i.bindMode=this.bindMode;i.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){r(n.skeletons,this.skeleton);i.skeleton=this.skeleton.uuid}}if(this.material!==undefined){if(Array.isArray(this.material)){const l=[];for(let e=0,t=this.material.length;e<t;e++){l.push(r(n.materials,this.material[e]))}i.material=l}else{i.material=r(n.materials,this.material)}}if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++){i.children.push(this.children[e].toJSON(n).object)}}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const u=this.animations[e];i.animations.push(r(n.animations,u))}}if(e){const h=s(n.geometries);const d=s(n.materials);const f=s(n.textures);const p=s(n.images);const a=s(n.shapes);const m=s(n.skeletons);const g=s(n.animations);if(h.length>0)t.geometries=h;if(d.length>0)t.materials=d;if(f.length>0)t.textures=f;if(p.length>0)t.images=p;if(a.length>0)t.shapes=a;if(m.length>0)t.skeletons=m;if(g.length>0)t.animations=g}t.object=i;return t;function s(e){const t=[];for(const n in e){const i=e[n];delete i.metadata;t.push(i)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(t,e=true){this.name=t.name;this.up.copy(t.up);this.position.copy(t.position);this.rotation.order=t.rotation.order;this.quaternion.copy(t.quaternion);this.scale.copy(t.scale);this.matrix.copy(t.matrix);this.matrixWorld.copy(t.matrixWorld);this.matrixAutoUpdate=t.matrixAutoUpdate;this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate;this.layers.mask=t.layers.mask;this.visible=t.visible;this.castShadow=t.castShadow;this.receiveShadow=t.receiveShadow;this.frustumCulled=t.frustumCulled;this.renderOrder=t.renderOrder;this.userData=JSON.parse(JSON.stringify(t.userData));if(e===true){for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}}return this}});const Qi=new Zn;const $i=new Zn;const er=new Hn;class tr{constructor(e=new Zn(1,0,0),t=0){this.normal=e;this.constant=t}set(e,t){this.normal.copy(e);this.constant=t;return this}setComponents(e,t,n,i){this.normal.set(e,t,n);this.constant=i;return this}setFromNormalAndCoplanarPoint(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this}setFromCoplanarPoints(e,t,n){const i=Qi.subVectors(n,t).cross($i.subVectors(e,t)).normalize();this.setFromNormalAndCoplanarPoint(i,e);return this}copy(e){this.normal.copy(e.normal);this.constant=e.constant;return this}normalize(){const e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this}negate(){this.constant*=-1;this.normal.negate();return this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){if(t===undefined){console.warn("THREE.Plane: .projectPoint() target is now required");t=new Zn}return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){if(t===undefined){console.warn("THREE.Plane: .intersectLine() target is now required");t=new Zn}const n=e.delta(Qi);const i=this.normal.dot(n);if(i===0){if(this.distanceToPoint(e.start)===0){return t.copy(e.start)}return null}const r=-(e.start.dot(this.normal)+this.constant)/i;if(r<0||r>1){return null}return t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start);const n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){if(e===undefined){console.warn("THREE.Plane: .coplanarPoint() target is now required");e=new Zn}return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||er.getNormalMatrix(e);const i=this.coplanarPoint(Qi).applyMatrix4(e);const r=this.normal.applyMatrix3(n).normalize();this.constant=-i.dot(r);return this}translate(e){this.constant-=e.dot(this.normal);return this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}tr.prototype.isPlane=true;const nr=new Zn;const ir=new Zn;const rr=new Zn;const sr=new Zn;const or=new Zn;const ar=new Zn;const cr=new Zn;const lr=new Zn;const ur=new Zn;const hr=new Zn;class dr{constructor(e=new Zn,t=new Zn,n=new Zn){this.a=e;this.b=t;this.c=n}static getNormal(e,t,n,i){if(i===undefined){console.warn("THREE.Triangle: .getNormal() target is now required");i=new Zn}i.subVectors(n,t);nr.subVectors(e,t);i.cross(nr);const r=i.lengthSq();if(r>0){return i.multiplyScalar(1/Math.sqrt(r))}return i.set(0,0,0)}static getBarycoord(e,t,n,i,r){nr.subVectors(i,t);ir.subVectors(n,t);rr.subVectors(e,t);const s=nr.dot(nr);const o=nr.dot(ir);const a=nr.dot(rr);const c=ir.dot(ir);const l=ir.dot(rr);const u=s*c-o*o;if(r===undefined){console.warn("THREE.Triangle: .getBarycoord() target is now required");r=new Zn}if(u===0){return r.set(-2,-1,-1)}const h=1/u;const d=(c*a-o*l)*h;const f=(s*l-o*a)*h;return r.set(1-d-f,f,d)}static containsPoint(e,t,n,i){this.getBarycoord(e,t,n,i,sr);return sr.x>=0&&sr.y>=0&&sr.x+sr.y<=1}static getUV(e,t,n,i,r,s,o,a){this.getBarycoord(e,t,n,i,sr);a.set(0,0);a.addScaledVector(r,sr.x);a.addScaledVector(s,sr.y);a.addScaledVector(o,sr.z);return a}static isFrontFacing(e,t,n,i){nr.subVectors(n,t);ir.subVectors(e,t);return nr.cross(ir).dot(i)<0?true:false}set(e,t,n){this.a.copy(e);this.b.copy(t);this.c.copy(n);return this}setFromPointsAndIndices(e,t,n,i){this.a.copy(e[t]);this.b.copy(e[n]);this.c.copy(e[i]);return this}clone(){return(new this.constructor).copy(this)}copy(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this}getArea(){nr.subVectors(this.c,this.b);ir.subVectors(this.a,this.b);return nr.cross(ir).length()*.5}getMidpoint(e){if(e===undefined){console.warn("THREE.Triangle: .getMidpoint() target is now required");e=new Zn}return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return dr.getNormal(this.a,this.b,this.c,e)}getPlane(e){if(e===undefined){console.warn("THREE.Triangle: .getPlane() target is now required");e=new tr}return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return dr.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return dr.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return dr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return dr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){if(t===undefined){console.warn("THREE.Triangle: .closestPointToPoint() target is now required");t=new Zn}const n=this.a,i=this.b,r=this.c;let s,o;or.subVectors(i,n);ar.subVectors(r,n);lr.subVectors(e,n);const a=or.dot(lr);const c=ar.dot(lr);if(a<=0&&c<=0){return t.copy(n)}ur.subVectors(e,i);const l=or.dot(ur);const u=ar.dot(ur);if(l>=0&&u<=l){return t.copy(i)}const h=a*u-l*c;if(h<=0&&a>=0&&l<=0){s=a/(a-l);return t.copy(n).addScaledVector(or,s)}hr.subVectors(e,r);const d=or.dot(hr);const f=ar.dot(hr);if(f>=0&&d<=f){return t.copy(r)}const p=d*c-a*f;if(p<=0&&c>=0&&f<=0){o=c/(c-f);return t.copy(n).addScaledVector(ar,o)}const m=l*f-d*u;if(m<=0&&u-l>=0&&d-f>=0){cr.subVectors(r,i);o=(u-l)/(u-l+(d-f));return t.copy(i).addScaledVector(cr,o)}const g=1/(m+p+h);s=p*g;o=h*g;return t.copy(n).addScaledVector(or,s).addScaledVector(ar,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let fr=0;function pr(){Object.defineProperty(this,"id",{value:fr++});this.uuid=Bn.generateUUID();this.name="";this.type="Material";this.fog=true;this.blending=pe;this.side=L;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=Re;this.blendDst=Le;this.blendEquation=xe;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=Ue;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=255;this.stencilFunc=Mn;this.stencilRef=0;this.stencilFuncMask=255;this.stencilFail=cn;this.stencilZFail=cn;this.stencilZPass=cn;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.alphaToCoverage=false;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0}pr.prototype=Object.assign(Object.create(Nn.prototype),{constructor:pr,isMaterial:true,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e===undefined)return;for(const t in e){const n=e[t];if(n===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=n===a?true:false;continue}const i=this[t];if(i===undefined){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}if(i&&i.isColor){i.set(n)}else if(i&&i.isVector3&&n&&n.isVector3){i.copy(n)}else{this[t]=n}}},toJSON:function(e){const t=e===undefined||typeof e==="string";if(t){e={textures:{},images:{}}}const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid;n.type=this.type;if(this.name!=="")n.name=this.name;if(this.color&&this.color.isColor)n.color=this.color.getHex();if(this.roughness!==undefined)n.roughness=this.roughness;if(this.metalness!==undefined)n.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)n.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)n.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)n.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)n.specular=this.specular.getHex();if(this.shininess!==undefined)n.shininess=this.shininess;if(this.clearcoat!==undefined)n.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)n.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid;n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()}if(this.map&&this.map.isTexture)n.map=this.map.toJSON(e).uuid;if(this.matcap&&this.matcap.isTexture)n.matcap=this.matcap.toJSON(e).uuid;if(this.alphaMap&&this.alphaMap.isTexture)n.alphaMap=this.alphaMap.toJSON(e).uuid;if(this.lightMap&&this.lightMap.isTexture){n.lightMap=this.lightMap.toJSON(e).uuid;n.lightMapIntensity=this.lightMapIntensity}if(this.aoMap&&this.aoMap.isTexture){n.aoMap=this.aoMap.toJSON(e).uuid;n.aoMapIntensity=this.aoMapIntensity}if(this.bumpMap&&this.bumpMap.isTexture){n.bumpMap=this.bumpMap.toJSON(e).uuid;n.bumpScale=this.bumpScale}if(this.normalMap&&this.normalMap.isTexture){n.normalMap=this.normalMap.toJSON(e).uuid;n.normalMapType=this.normalMapType;n.normalScale=this.normalScale.toArray()}if(this.displacementMap&&this.displacementMap.isTexture){n.displacementMap=this.displacementMap.toJSON(e).uuid;n.displacementScale=this.displacementScale;n.displacementBias=this.displacementBias}if(this.roughnessMap&&this.roughnessMap.isTexture)n.roughnessMap=this.roughnessMap.toJSON(e).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)n.metalnessMap=this.metalnessMap.toJSON(e).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)n.emissiveMap=this.emissiveMap.toJSON(e).uuid;if(this.specularMap&&this.specularMap.isTexture)n.specularMap=this.specularMap.toJSON(e).uuid;if(this.envMap&&this.envMap.isTexture){n.envMap=this.envMap.toJSON(e).uuid;n.reflectivity=this.reflectivity;n.refractionRatio=this.refractionRatio;if(this.combine!==undefined)n.combine=this.combine;if(this.envMapIntensity!==undefined)n.envMapIntensity=this.envMapIntensity}if(this.gradientMap&&this.gradientMap.isTexture){n.gradientMap=this.gradientMap.toJSON(e).uuid}if(this.size!==undefined)n.size=this.size;if(this.shadowSide!==null)n.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)n.sizeAttenuation=this.sizeAttenuation;if(this.blending!==pe)n.blending=this.blending;if(this.side!==L)n.side=this.side;if(this.vertexColors)n.vertexColors=true;if(this.opacity<1)n.opacity=this.opacity;if(this.transparent===true)n.transparent=this.transparent;n.depthFunc=this.depthFunc;n.depthTest=this.depthTest;n.depthWrite=this.depthWrite;n.colorWrite=this.colorWrite;n.stencilWrite=this.stencilWrite;n.stencilWriteMask=this.stencilWriteMask;n.stencilFunc=this.stencilFunc;n.stencilRef=this.stencilRef;n.stencilFuncMask=this.stencilFuncMask;n.stencilFail=this.stencilFail;n.stencilZFail=this.stencilZFail;n.stencilZPass=this.stencilZPass;if(this.rotation&&this.rotation!==0)n.rotation=this.rotation;if(this.polygonOffset===true)n.polygonOffset=true;if(this.polygonOffsetFactor!==0)n.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)n.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)n.linewidth=this.linewidth;if(this.dashSize!==undefined)n.dashSize=this.dashSize;if(this.gapSize!==undefined)n.gapSize=this.gapSize;if(this.scale!==undefined)n.scale=this.scale;if(this.dithering===true)n.dithering=true;if(this.alphaTest>0)n.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)n.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)n.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)n.wireframe=this.wireframe;if(this.wireframeLinewidth>1)n.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=="round")n.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=="round")n.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)n.morphTargets=true;if(this.morphNormals===true)n.morphNormals=true;if(this.skinning===true)n.skinning=true;if(this.flatShading===true)n.flatShading=this.flatShading;if(this.visible===false)n.visible=false;if(this.toneMapped===false)n.toneMapped=false;if(JSON.stringify(this.userData)!=="{}")n.userData=this.userData;function i(t){const n=[];for(const i in t){const e=t[i];delete e.metadata;n.push(e)}return n}if(t){const r=i(e.textures);const s=i(e.images);if(r.length>0)n.textures=r;if(s.length>0)n.images=s}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name;this.fog=e.fog;this.blending=e.blending;this.side=e.side;this.vertexColors=e.vertexColors;this.opacity=e.opacity;this.transparent=e.transparent;this.blendSrc=e.blendSrc;this.blendDst=e.blendDst;this.blendEquation=e.blendEquation;this.blendSrcAlpha=e.blendSrcAlpha;this.blendDstAlpha=e.blendDstAlpha;this.blendEquationAlpha=e.blendEquationAlpha;this.depthFunc=e.depthFunc;this.depthTest=e.depthTest;this.depthWrite=e.depthWrite;this.stencilWriteMask=e.stencilWriteMask;this.stencilFunc=e.stencilFunc;this.stencilRef=e.stencilRef;this.stencilFuncMask=e.stencilFuncMask;this.stencilFail=e.stencilFail;this.stencilZFail=e.stencilZFail;this.stencilZPass=e.stencilZPass;this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let e=0;e!==i;++e){n[e]=t[e].clone()}}this.clippingPlanes=n;this.clipIntersection=e.clipIntersection;this.clipShadows=e.clipShadows;this.shadowSide=e.shadowSide;this.colorWrite=e.colorWrite;this.precision=e.precision;this.polygonOffset=e.polygonOffset;this.polygonOffsetFactor=e.polygonOffsetFactor;this.polygonOffsetUnits=e.polygonOffsetUnits;this.dithering=e.dithering;this.alphaTest=e.alphaTest;this.alphaToCoverage=e.alphaToCoverage;this.premultipliedAlpha=e.premultipliedAlpha;this.visible=e.visible;this.toneMapped=e.toneMapped;this.userData=JSON.parse(JSON.stringify(e.userData));return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(pr.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});const mr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};const gr={h:0,s:0,l:0};const yr={h:0,s:0,l:0};function vr(e,t,n){if(n<0)n+=1;if(n>1)n-=1;if(n<1/6)return e+(t-e)*6*n;if(n<1/2)return t;if(n<2/3)return e+(t-e)*6*(2/3-n);return e}function xr(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function _r(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}class br{constructor(e,t,n){if(t===undefined&&n===undefined){return this.set(e)}return this.setRGB(e,t,n)}set(e){if(e&&e.isColor){this.copy(e)}else if(typeof e==="number"){this.setHex(e)}else if(typeof e==="string"){this.setStyle(e)}return this}setScalar(e){this.r=e;this.g=e;this.b=e;return this}setHex(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this}setRGB(e,t,n){this.r=e;this.g=t;this.b=n;return this}setHSL(e,t,n){e=Bn.euclideanModulo(e,1);t=Bn.clamp(t,0,1);n=Bn.clamp(n,0,1);if(t===0){this.r=this.g=this.b=n}else{const i=n<=.5?n*(1+t):n+t-n*t;const r=2*n-i;this.r=vr(r,i,e+1/3);this.g=vr(r,i,e);this.b=vr(r,i,e-1/3)}return this}setStyle(t){function n(e){if(e===undefined)return;if(parseFloat(e)<1){console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;const r=i[1];const s=i[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){this.r=Math.min(255,parseInt(e[1],10))/255;this.g=Math.min(255,parseInt(e[2],10))/255;this.b=Math.min(255,parseInt(e[3],10))/255;n(e[4]);return this}if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){this.r=Math.min(100,parseInt(e[1],10))/100;this.g=Math.min(100,parseInt(e[2],10))/100;this.b=Math.min(100,parseInt(e[3],10))/100;n(e[4]);return this}break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const o=parseFloat(e[1])/360;const a=parseInt(e[2],10)/100;const c=parseInt(e[3],10)/100;n(e[4]);return this.setHSL(o,a,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=i[1];const l=e.length;if(l===3){this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255;this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255;this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255;return this}else if(l===6){this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255;this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255;this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255;return this}}if(t&&t.length>0){return this.setColorName(t)}return this}setColorName(e){const t=mr[e];if(t!==undefined){this.setHex(t)}else{console.warn("THREE.Color: Unknown color "+e)}return this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){this.r=e.r;this.g=e.g;this.b=e.b;return this}copyGammaToLinear(e,t=2){this.r=Math.pow(e.r,t);this.g=Math.pow(e.g,t);this.b=Math.pow(e.b,t);return this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;this.r=Math.pow(e.r,n);this.g=Math.pow(e.g,n);this.b=Math.pow(e.b,n);return this}convertGammaToLinear(e){this.copyGammaToLinear(this,e);return this}convertLinearToGamma(e){this.copyLinearToGamma(this,e);return this}copySRGBToLinear(e){this.r=xr(e.r);this.g=xr(e.g);this.b=xr(e.b);return this}copyLinearToSRGB(e){this.r=_r(e.r);this.g=_r(e.g);this.b=_r(e.b);return this}convertSRGBToLinear(){this.copySRGBToLinear(this);return this}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){if(e===undefined){console.warn("THREE.Color: .getHSL() target is now required");e={h:0,s:0,l:0}}const t=this.r,n=this.g,i=this.b;const r=Math.max(t,n,i);const s=Math.min(t,n,i);let o,a;const c=(s+r)/2;if(s===r){o=0;a=0}else{const l=r-s;a=c<=.5?l/(r+s):l/(2-r-s);switch(r){case t:o=(n-i)/l+(n<i?6:0);break;case n:o=(i-t)/l+2;break;case i:o=(t-n)/l+4;break}o/=6}e.h=o;e.s=a;e.l=c;return e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){this.getHSL(gr);gr.h+=e;gr.s+=t;gr.l+=n;this.setHSL(gr.h,gr.s,gr.l);return this}add(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this}addColors(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this}addScalar(e){this.r+=e;this.g+=e;this.b+=e;return this}sub(e){this.r=Math.max(0,this.r-e.r);this.g=Math.max(0,this.g-e.g);this.b=Math.max(0,this.b-e.b);return this}multiply(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this}multiplyScalar(e){this.r*=e;this.g*=e;this.b*=e;return this}lerp(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this}lerpColors(e,t,n){this.r=e.r+(t.r-e.r)*n;this.g=e.g+(t.g-e.g)*n;this.b=e.b+(t.b-e.b)*n;return this}lerpHSL(e,t){this.getHSL(gr);e.getHSL(yr);const n=Bn.lerp(gr.h,yr.h,t);const i=Bn.lerp(gr.s,yr.s,t);const r=Bn.lerp(gr.l,yr.l,t);this.setHSL(n,i,r);return this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){this.r=e[t];this.g=e[t+1];this.b=e[t+2];return this}toArray(e=[],t=0){e[t]=this.r;e[t+1]=this.g;e[t+2]=this.b;return e}fromBufferAttribute(e,t){this.r=e.getX(t);this.g=e.getY(t);this.b=e.getZ(t);if(e.normalized===true){this.r/=255;this.g/=255;this.b/=255}return this}toJSON(){return this.getHex()}}br.NAMES=mr;br.prototype.isColor=true;br.prototype.r=1;br.prototype.g=1;br.prototype.b=1;class Mr extends pr{constructor(e){super();this.type="MeshBasicMaterial";this.color=new br(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=u;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;return this}}Mr.prototype.isMeshBasicMaterial=true;const wr=new Zn;const Er=new Un;function Tr(e,t,n){if(Array.isArray(e)){throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.")}this.name="";this.array=e;this.itemSize=t;this.count=e!==undefined?e.length/t:0;this.normalized=n===true;this.usage=wn;this.updateRange={offset:0,count:-1};this.version=0}Object.defineProperty(Tr.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Tr.prototype,{isBufferAttribute:true,onUploadCallback:function(){},setUsage:function(e){this.usage=e;return this},copy:function(e){this.name=e.name;this.array=new e.array.constructor(e.array);this.itemSize=e.itemSize;this.count=e.count;this.normalized=e.normalized;this.usage=e.usage;return this},copyAt:function(n,i,r){n*=this.itemSize;r*=i.itemSize;for(let e=0,t=this.itemSize;e<t;e++){this.array[n+e]=i.array[r+e]}return this},copyArray:function(e){this.array.set(e);return this},copyColorsArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];if(e===undefined){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t);e=new br}i[r++]=e.r;i[r++]=e.g;i[r++]=e.b}return this},copyVector2sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];if(e===undefined){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t);e=new Un}i[r++]=e.x;i[r++]=e.y}return this},copyVector3sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];if(e===undefined){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t);e=new Zn}i[r++]=e.x;i[r++]=e.y;i[r++]=e.z}return this},copyVector4sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];if(e===undefined){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t);e=new jn}i[r++]=e.x;i[r++]=e.y;i[r++]=e.z;i[r++]=e.w}return this},applyMatrix3:function(n){if(this.itemSize===2){for(let e=0,t=this.count;e<t;e++){Er.fromBufferAttribute(this,e);Er.applyMatrix3(n);this.setXY(e,Er.x,Er.y)}}else if(this.itemSize===3){for(let e=0,t=this.count;e<t;e++){wr.fromBufferAttribute(this,e);wr.applyMatrix3(n);this.setXYZ(e,wr.x,wr.y,wr.z)}}return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++){wr.x=this.getX(e);wr.y=this.getY(e);wr.z=this.getZ(e);wr.applyMatrix4(n);this.setXYZ(e,wr.x,wr.y,wr.z)}return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++){wr.x=this.getX(e);wr.y=this.getY(e);wr.z=this.getZ(e);wr.applyNormalMatrix(n);this.setXYZ(e,wr.x,wr.y,wr.z)}return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++){wr.x=this.getX(e);wr.y=this.getY(e);wr.z=this.getZ(e);wr.transformDirection(n);this.setXYZ(e,wr.x,wr.y,wr.z)}return this},set:function(e,t=0){this.array.set(e,t);return this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){this.array[e*this.itemSize]=t;return this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){this.array[e*this.itemSize+1]=t;return this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){this.array[e*this.itemSize+2]=t;return this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){this.array[e*this.itemSize+3]=t;return this},setXY:function(e,t,n){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=n;return this},setXYZ:function(e,t,n,i){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=n;this.array[e+2]=i;return this},setXYZW:function(e,t,n,i,r){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=n;this.array[e+2]=i;this.array[e+3]=r;return this},onUpload:function(e){this.onUploadCallback=e;return this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};if(this.name!=="")e.name=this.name;if(this.usage!==wn)e.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)e.updateRange=this.updateRange;return e}});function Sr(e,t,n){Tr.call(this,new Int8Array(e),t,n)}Sr.prototype=Object.create(Tr.prototype);Sr.prototype.constructor=Sr;function Ar(e,t,n){Tr.call(this,new Uint8Array(e),t,n)}Ar.prototype=Object.create(Tr.prototype);Ar.prototype.constructor=Ar;function Rr(e,t,n){Tr.call(this,new Uint8ClampedArray(e),t,n)}Rr.prototype=Object.create(Tr.prototype);Rr.prototype.constructor=Rr;function Lr(e,t,n){Tr.call(this,new Int16Array(e),t,n)}Lr.prototype=Object.create(Tr.prototype);Lr.prototype.constructor=Lr;function Cr(e,t,n){Tr.call(this,new Uint16Array(e),t,n)}Cr.prototype=Object.create(Tr.prototype);Cr.prototype.constructor=Cr;function Pr(e,t,n){Tr.call(this,new Int32Array(e),t,n)}Pr.prototype=Object.create(Tr.prototype);Pr.prototype.constructor=Pr;function Ir(e,t,n){Tr.call(this,new Uint32Array(e),t,n)}Ir.prototype=Object.create(Tr.prototype);Ir.prototype.constructor=Ir;function Dr(e,t,n){Tr.call(this,new Uint16Array(e),t,n)}Dr.prototype=Object.create(Tr.prototype);Dr.prototype.constructor=Dr;Dr.prototype.isFloat16BufferAttribute=true;function Nr(e,t,n){Tr.call(this,new Float32Array(e),t,n)}Nr.prototype=Object.create(Tr.prototype);Nr.prototype.constructor=Nr;function Fr(e,t,n){Tr.call(this,new Float64Array(e),t,n)}Fr.prototype=Object.create(Tr.prototype);Fr.prototype.constructor=Fr;function Or(n){if(n.length===0)return-Infinity;let i=n[0];for(let e=1,t=n.length;e<t;++e){if(n[e]>i)i=n[e]}return i}const Br={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ur(e,t){return new Br[e](t)}let Hr=0;const zr=new Si;const Gr=new Ki;const kr=new Zn;const Vr=new Qn;const Wr=new Qn;const jr=new Zn;function Xr(){Object.defineProperty(this,"id",{value:Hr++});this.uuid=Bn.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={}}Xr.prototype=Object.assign(Object.create(Nn.prototype),{constructor:Xr,isBufferGeometry:true,getIndex:function(){return this.index},setIndex:function(e){if(Array.isArray(e)){this.index=new(Or(e)>65535?Ir:Cr)(e,1)}else{this.index=e}return this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){this.attributes[e]=t;return this},deleteAttribute:function(e){delete this.attributes[e];return this},hasAttribute:function(e){return this.attributes[e]!==undefined},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e;this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;if(t!==undefined){t.applyMatrix4(e);t.needsUpdate=true}const n=this.attributes.normal;if(n!==undefined){const r=(new Hn).getNormalMatrix(e);n.applyNormalMatrix(r);n.needsUpdate=true}const i=this.attributes.tangent;if(i!==undefined){i.transformDirection(e);i.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}return this},rotateX:function(e){zr.makeRotationX(e);this.applyMatrix4(zr);return this},rotateY:function(e){zr.makeRotationY(e);this.applyMatrix4(zr);return this},rotateZ:function(e){zr.makeRotationZ(e);this.applyMatrix4(zr);return this},translate:function(e,t,n){zr.makeTranslation(e,t,n);this.applyMatrix4(zr);return this},scale:function(e,t,n){zr.makeScale(e,t,n);this.applyMatrix4(zr);return this},lookAt:function(e){Gr.lookAt(e);Gr.updateMatrix();this.applyMatrix4(Gr.matrix);return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(kr).negate();this.translate(kr.x,kr.y,kr.z);return this},setFromPoints:function(n){const i=[];for(let e=0,t=n.length;e<t;e++){const r=n[e];i.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Nr(i,3));return this},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new Qn}const e=this.attributes.position;const n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingBox.set(new Zn(-Infinity,-Infinity,-Infinity),new Zn(+Infinity,+Infinity,+Infinity));return}if(e!==undefined){this.boundingBox.setFromBufferAttribute(e);if(n){for(let e=0,t=n.length;e<t;e++){const i=n[e];Vr.setFromBufferAttribute(i);if(this.morphTargetsRelative){jr.addVectors(this.boundingBox.min,Vr.min);this.boundingBox.expandByPoint(jr);jr.addVectors(this.boundingBox.max,Vr.max);this.boundingBox.expandByPoint(jr)}else{this.boundingBox.expandByPoint(Vr.min);this.boundingBox.expandByPoint(Vr.max)}}}}else{this.boundingBox.makeEmpty()}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new yi}const i=this.attributes.position;const r=this.morphAttributes.position;if(i&&i.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingSphere.set(new Zn,Infinity);return}if(i){const s=this.boundingSphere.center;Vr.setFromBufferAttribute(i);if(r){for(let e=0,t=r.length;e<t;e++){const o=r[e];Wr.setFromBufferAttribute(o);if(this.morphTargetsRelative){jr.addVectors(Vr.min,Wr.min);Vr.expandByPoint(jr);jr.addVectors(Vr.max,Wr.max);Vr.expandByPoint(jr)}else{Vr.expandByPoint(Wr.min);Vr.expandByPoint(Wr.max)}}}Vr.getCenter(s);let n=0;for(let e=0,t=i.count;e<t;e++){jr.fromBufferAttribute(i,e);n=Math.max(n,s.distanceToSquared(jr))}if(r){for(let e=0,t=r.length;e<t;e++){const o=r[e];const a=this.morphTargetsRelative;for(let e=0,t=o.count;e<t;e++){jr.fromBufferAttribute(o,e);if(a){kr.fromBufferAttribute(i,e);jr.add(kr)}n=Math.max(n,s.distanceToSquared(jr))}}}this.boundingSphere.radius=Math.sqrt(n);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},computeFaceNormals:function(){},computeTangents:function(){const e=this.index;const t=this.attributes;if(e===null||t.position===undefined||t.normal===undefined||t.uv===undefined){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array;const r=t.position.array;const s=t.normal.array;const o=t.uv.array;const i=r.length/3;if(t.tangent===undefined){this.setAttribute("tangent",new Tr(new Float32Array(4*i),4))}const a=t.tangent.array;const c=[],l=[];for(let e=0;e<i;e++){c[e]=new Zn;l[e]=new Zn}const u=new Zn,h=new Zn,d=new Zn,f=new Un,p=new Un,m=new Un,g=new Zn,y=new Zn;function v(e,t,n){u.fromArray(r,e*3);h.fromArray(r,t*3);d.fromArray(r,n*3);f.fromArray(o,e*2);p.fromArray(o,t*2);m.fromArray(o,n*2);h.sub(u);d.sub(u);p.sub(f);m.sub(f);const i=1/(p.x*m.y-m.x*p.y);if(!isFinite(i))return;g.copy(h).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(i);y.copy(d).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(i);c[e].add(g);c[t].add(g);c[n].add(g);l[e].add(y);l[t].add(y);l[n].add(y)}let x=this.groups;if(x.length===0){x=[{start:0,count:n.length}]}for(let e=0,t=x.length;e<t;++e){const T=x[e];const S=T.start;const A=T.count;for(let e=S,t=S+A;e<t;e+=3){v(n[e+0],n[e+1],n[e+2])}}const _=new Zn,b=new Zn;const M=new Zn,w=new Zn;function E(e){M.fromArray(s,e*3);w.copy(M);const t=c[e];_.copy(t);_.sub(M.multiplyScalar(M.dot(t))).normalize();b.crossVectors(w,t);const n=b.dot(l[e]);const i=n<0?-1:1;a[e*4]=_.x;a[e*4+1]=_.y;a[e*4+2]=_.z;a[e*4+3]=i}for(let e=0,t=x.length;e<t;++e){const T=x[e];const S=T.start;const A=T.count;for(let e=S,t=S+A;e<t;e+=3){E(n[e+0]);E(n[e+1]);E(n[e+2])}}},computeVertexNormals:function(){const i=this.index;const r=this.getAttribute("position");if(r!==undefined){let n=this.getAttribute("normal");if(n===undefined){n=new Tr(new Float32Array(r.count*3),3);this.setAttribute("normal",n)}else{for(let e=0,t=n.count;e<t;e++){n.setXYZ(e,0,0,0)}}const s=new Zn,o=new Zn,a=new Zn;const c=new Zn,l=new Zn,u=new Zn;const h=new Zn,d=new Zn;if(i){for(let e=0,t=i.count;e<t;e+=3){const f=i.getX(e+0);const p=i.getX(e+1);const m=i.getX(e+2);s.fromBufferAttribute(r,f);o.fromBufferAttribute(r,p);a.fromBufferAttribute(r,m);h.subVectors(a,o);d.subVectors(s,o);h.cross(d);c.fromBufferAttribute(n,f);l.fromBufferAttribute(n,p);u.fromBufferAttribute(n,m);c.add(h);l.add(h);u.add(h);n.setXYZ(f,c.x,c.y,c.z);n.setXYZ(p,l.x,l.y,l.z);n.setXYZ(m,u.x,u.y,u.z)}}else{for(let e=0,t=r.count;e<t;e+=3){s.fromBufferAttribute(r,e+0);o.fromBufferAttribute(r,e+1);a.fromBufferAttribute(r,e+2);h.subVectors(a,o);d.subVectors(s,o);h.cross(d);n.setXYZ(e+0,h.x,h.y,h.z);n.setXYZ(e+1,h.x,h.y,h.z);n.setXYZ(e+2,h.x,h.y,h.z)}}this.normalizeNormals();n.needsUpdate=true}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}if(t===undefined){t=0;console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. "+"Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.")}const n=this.attributes;for(const i in n){if(e.attributes[i]===undefined)continue;const r=n[i];const s=r.array;const o=e.attributes[i];const a=o.array;const c=o.itemSize*t;const l=Math.min(a.length,s.length-c);for(let e=0,t=c;e<l;e++,t++){s[t]=a[e]}}return this},normalizeNormals:function(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++){jr.fromBufferAttribute(n,e);jr.normalize();n.setXYZ(e,jr.x,jr.y,jr.z)}},toNonIndexed:function(){function n(e,n){const i=e.array;const r=e.itemSize;const t=e.normalized;const s=new i.constructor(n.length*r);let o=0,a=0;for(let e=0,t=n.length;e<t;e++){o=n[e]*r;for(let e=0;e<r;e++){s[a++]=i[o++]}}return new Tr(s,r,t)}if(this.index===null){console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.");return this}const i=new Xr;const r=this.index.array;const e=this.attributes;for(const o in e){const a=e[o];const c=n(a,r);i.setAttribute(o,c)}const t=this.morphAttributes;for(const o in t){const l=[];const u=t[o];for(let e=0,t=u.length;e<t;e++){const a=u[e];const c=n(a,r);l.push(c)}i.morphAttributes[o]=l}i.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,t=s.length;e<t;e++){const h=s[e];i.addGroup(h.start,h.count,h.materialIndex)}return i},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};n.uuid=this.uuid;n.type=this.type;if(this.name!=="")n.name=this.name;if(Object.keys(this.userData).length>0)n.userData=this.userData;if(this.parameters!==undefined){const a=this.parameters;for(const c in a){if(a[c]!==undefined)n[c]=a[c]}return n}n.data={attributes:{}};const e=this.index;if(e!==null){n.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)}}const t=this.attributes;for(const c in t){const l=t[c];n.data.attributes[c]=l.toJSON(n.data)}const i={};let r=false;for(const c in this.morphAttributes){const u=this.morphAttributes[c];const h=[];for(let e=0,t=u.length;e<t;e++){const l=u[e];h.push(l.toJSON(n.data))}if(h.length>0){i[c]=h;r=true}}if(r){n.data.morphAttributes=i;n.data.morphTargetsRelative=this.morphTargetsRelative}const s=this.groups;if(s.length>0){n.data.groups=JSON.parse(JSON.stringify(s))}const o=this.boundingSphere;if(o!==null){n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}}return n},clone:function(){return(new Xr).copy(this)},copy:function(e){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;const n={};this.name=e.name;const t=e.index;if(t!==null){this.setIndex(t.clone(n))}const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(n))}const r=e.morphAttributes;for(const c in r){const u=[];const h=r[c];for(let e=0,t=h.length;e<t;e++){u.push(h[e].clone(n))}this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const d=s[e];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;if(o!==null){this.boundingBox=o.clone()}const a=e.boundingSphere;if(a!==null){this.boundingSphere=a.clone()}this.drawRange.start=e.drawRange.start;this.drawRange.count=e.drawRange.count;this.userData=e.userData;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const qr=new Si;const Yr=new Ti;const Zr=new yi;const Jr=new Zn;const Kr=new Zn;const Qr=new Zn;const $r=new Zn;const es=new Zn;const ts=new Zn;const ns=new Zn;const is=new Zn;const rs=new Zn;const ss=new Un;const os=new Un;const as=new Un;const cs=new Zn;const ls=new Zn;function us(e=new Xr,t=new Mr){Ki.call(this);this.type="Mesh";this.geometry=e;this.material=t;this.updateMorphTargets()}us.prototype=Object.assign(Object.create(Ki.prototype),{constructor:us,isMesh:true,copy:function(e){Ki.prototype.copy.call(this,e);if(e.morphTargetInfluences!==undefined){this.morphTargetInfluences=e.morphTargetInfluences.slice()}if(e.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)}this.material=e.material;this.geometry=e.geometry;return this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const r=i[e].name||String(e);this.morphTargetInfluences.push(0);this.morphTargetDictionary[r]=e}}}}else{const s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},raycast:function(n,i){const e=this.geometry;const r=this.material;const t=this.matrixWorld;if(r===undefined)return;if(e.boundingSphere===null)e.computeBoundingSphere();Zr.copy(e.boundingSphere);Zr.applyMatrix4(t);if(n.ray.intersectsSphere(Zr)===false)return;qr.copy(t).invert();Yr.copy(n.ray).applyMatrix4(qr);if(e.boundingBox!==null){if(Yr.intersectsBox(e.boundingBox)===false)return}let s;if(e.isBufferGeometry){const o=e.index;const a=e.attributes.position;const c=e.morphAttributes.position;const l=e.morphTargetsRelative;const u=e.attributes.uv;const h=e.attributes.uv2;const d=e.groups;const f=e.drawRange;if(o!==null){if(Array.isArray(r)){for(let e=0,t=d.length;e<t;e++){const p=d[e];const m=r[p.materialIndex];const g=Math.max(p.start,f.start);const y=Math.min(p.start+p.count,f.start+f.count);for(let e=g,t=y;e<t;e+=3){const v=o.getX(e);const x=o.getX(e+1);const _=o.getX(e+2);s=ds(this,m,n,Yr,a,c,l,u,h,v,x,_);if(s){s.faceIndex=Math.floor(e/3);s.face.materialIndex=p.materialIndex;i.push(s)}}}}else{const g=Math.max(0,f.start);const y=Math.min(o.count,f.start+f.count);for(let e=g,t=y;e<t;e+=3){const v=o.getX(e);const x=o.getX(e+1);const _=o.getX(e+2);s=ds(this,r,n,Yr,a,c,l,u,h,v,x,_);if(s){s.faceIndex=Math.floor(e/3);i.push(s)}}}}else if(a!==undefined){if(Array.isArray(r)){for(let e=0,t=d.length;e<t;e++){const p=d[e];const m=r[p.materialIndex];const g=Math.max(p.start,f.start);const y=Math.min(p.start+p.count,f.start+f.count);for(let e=g,t=y;e<t;e+=3){const v=e;const x=e+1;const _=e+2;s=ds(this,m,n,Yr,a,c,l,u,h,v,x,_);if(s){s.faceIndex=Math.floor(e/3);s.face.materialIndex=p.materialIndex;i.push(s)}}}}else{const g=Math.max(0,f.start);const y=Math.min(a.count,f.start+f.count);for(let e=g,t=y;e<t;e+=3){const v=e;const x=e+1;const _=e+2;s=ds(this,r,n,Yr,a,c,l,u,h,v,x,_);if(s){s.faceIndex=Math.floor(e/3);i.push(s)}}}}}else if(e.isGeometry){console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function hs(e,t,n,i,r,s,o,a){let c;if(t.side===he){c=i.intersectTriangle(o,s,r,true,a)}else{c=i.intersectTriangle(r,s,o,t.side!==de,a)}if(c===null)return null;ls.copy(a);ls.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(ls);if(l<n.near||l>n.far)return null;return{distance:l,point:ls.clone(),object:e}}function ds(e,t,n,i,r,s,o,a,c,l,u,h){Jr.fromBufferAttribute(r,l);Kr.fromBufferAttribute(r,u);Qr.fromBufferAttribute(r,h);const d=e.morphTargetInfluences;if(t.morphTargets&&s&&d){ns.set(0,0,0);is.set(0,0,0);rs.set(0,0,0);for(let e=0,t=s.length;e<t;e++){const p=d[e];const m=s[e];if(p===0)continue;$r.fromBufferAttribute(m,l);es.fromBufferAttribute(m,u);ts.fromBufferAttribute(m,h);if(o){ns.addScaledVector($r,p);is.addScaledVector(es,p);rs.addScaledVector(ts,p)}else{ns.addScaledVector($r.sub(Jr),p);is.addScaledVector(es.sub(Kr),p);rs.addScaledVector(ts.sub(Qr),p)}}Jr.add(ns);Kr.add(is);Qr.add(rs)}if(e.isSkinnedMesh&&t.skinning){e.boneTransform(l,Jr);e.boneTransform(u,Kr);e.boneTransform(h,Qr)}const f=hs(e,t,n,i,Jr,Kr,Qr,cs);if(f){if(a){ss.fromBufferAttribute(a,l);os.fromBufferAttribute(a,u);as.fromBufferAttribute(a,h);f.uv=dr.getUV(cs,Jr,Kr,Qr,ss,os,as,new Un)}if(c){ss.fromBufferAttribute(c,l);os.fromBufferAttribute(c,u);as.fromBufferAttribute(c,h);f.uv2=dr.getUV(cs,Jr,Kr,Qr,ss,os,as,new Un)}const g={a:l,b:u,c:h,normal:new Zn,materialIndex:0};dr.getNormal(Jr,Kr,Qr,g.normal);f.face=g}return f}class fs extends Xr{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super();this.type="BoxGeometry";this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const A=this;i=Math.floor(i);r=Math.floor(r);s=Math.floor(s);const R=[];const L=[];const C=[];const P=[];let I=0;let D=0;o("z","y","x",-1,-1,n,t,e,s,r,0);o("z","y","x",1,-1,n,t,-e,s,r,1);o("x","z","y",1,1,e,n,t,i,s,2);o("x","z","y",1,-1,e,n,-t,i,s,3);o("x","y","z",1,-1,e,t,n,i,r,4);o("x","y","z",-1,-1,e,t,-n,i,r,5);this.setIndex(R);this.setAttribute("position",new Nr(L,3));this.setAttribute("normal",new Nr(C,3));this.setAttribute("uv",new Nr(P,2));function o(n,i,r,s,o,e,t,a,c,l,u){const h=e/c;const d=t/l;const f=e/2;const p=t/2;const m=a/2;const g=c+1;const y=l+1;let v=0;let x=0;const _=new Zn;for(let t=0;t<y;t++){const b=t*d-p;for(let e=0;e<g;e++){const M=e*h-f;_[n]=M*s;_[i]=b*o;_[r]=m;L.push(_.x,_.y,_.z);_[n]=0;_[i]=0;_[r]=a>0?1:-1;C.push(_.x,_.y,_.z);P.push(e/c);P.push(1-t/l);v+=1}}for(let t=0;t<l;t++){for(let e=0;e<c;e++){const w=I+e+g*t;const E=I+e+g*(t+1);const T=I+(e+1)+g*(t+1);const S=I+(e+1)+g*t;R.push(w,E,S);R.push(E,T,S);x+=6}}A.addGroup(D,x,u);D+=x;I+=v}}}function ps(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];if(r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)){t[n][i]=r.clone()}else if(Array.isArray(r)){t[n][i]=r.slice()}else{t[n][i]=r}}}return t}function ms(n){const i={};for(let t=0;t<n.length;t++){const e=ps(n[t]);for(const r in e){i[r]=e[r]}}return i}const gs={clone:ps,merge:ms};var ys="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";var vs="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function xs(e){pr.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader=ys;this.fragmentShader=vs;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.clipping=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(e!==undefined){if(e.attributes!==undefined){console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.")}this.setValues(e)}}xs.prototype=Object.create(pr.prototype);xs.prototype.constructor=xs;xs.prototype.isShaderMaterial=true;xs.prototype.copy=function(e){pr.prototype.copy.call(this,e);this.fragmentShader=e.fragmentShader;this.vertexShader=e.vertexShader;this.uniforms=ps(e.uniforms);this.defines=Object.assign({},e.defines);this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.lights=e.lights;this.clipping=e.clipping;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.extensions=Object.assign({},e.extensions);this.glslVersion=e.glslVersion;return this};xs.prototype.toJSON=function(e){const t=pr.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion;t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i];const s=r.value;if(s&&s.isTexture){t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}}else if(s&&s.isColor){t.uniforms[i]={type:"c",value:s.getHex()}}else if(s&&s.isVector2){t.uniforms[i]={type:"v2",value:s.toArray()}}else if(s&&s.isVector3){t.uniforms[i]={type:"v3",value:s.toArray()}}else if(s&&s.isVector4){t.uniforms[i]={type:"v4",value:s.toArray()}}else if(s&&s.isMatrix3){t.uniforms[i]={type:"m3",value:s.toArray()}}else if(s&&s.isMatrix4){t.uniforms[i]={type:"m4",value:s.toArray()}}else{t.uniforms[i]={value:s}}}if(Object.keys(this.defines).length>0)t.defines=this.defines;t.vertexShader=this.vertexShader;t.fragmentShader=this.fragmentShader;const n={};for(const o in this.extensions){if(this.extensions[o]===true)n[o]=true}if(Object.keys(n).length>0)t.extensions=n;return t};function _s(){Ki.call(this);this.type="Camera";this.matrixWorldInverse=new Si;this.projectionMatrix=new Si;this.projectionMatrixInverse=new Si}_s.prototype=Object.assign(Object.create(Ki.prototype),{constructor:_s,isCamera:true,copy:function(e,t){Ki.prototype.copy.call(this,e,t);this.matrixWorldInverse.copy(e.matrixWorldInverse);this.projectionMatrix.copy(e.projectionMatrix);this.projectionMatrixInverse.copy(e.projectionMatrixInverse);return this},getWorldDirection:function(e){if(e===undefined){console.warn("THREE.Camera: .getWorldDirection() target is now required");e=new Zn}this.updateWorldMatrix(true,false);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Ki.prototype.updateMatrixWorld.call(this,e);this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){Ki.prototype.updateWorldMatrix.call(this,e,t);this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}});function bs(e=50,t=1,n=.1,i=2e3){_s.call(this);this.type="PerspectiveCamera";this.fov=e;this.zoom=1;this.near=n;this.far=i;this.focus=10;this.aspect=t;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}bs.prototype=Object.assign(Object.create(_s.prototype),{constructor:bs,isPerspectiveCamera:true,copy:function(e,t){_s.prototype.copy.call(this,e,t);this.fov=e.fov;this.zoom=e.zoom;this.near=e.near;this.far=e.far;this.focus=e.focus;this.aspect=e.aspect;this.view=e.view===null?null:Object.assign({},e.view);this.filmGauge=e.filmGauge;this.filmOffset=e.filmOffset;return this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=Bn.RAD2DEG*2*Math.atan(t);this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(Bn.DEG2RAD*.5*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Bn.RAD2DEG*2*Math.atan(Math.tan(Bn.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,s){this.aspect=e/t;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=n;this.view.offsetY=i;this.view.width=r;this.view.height=s;this.updateProjectionMatrix()},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(Bn.DEG2RAD*.5*this.fov)/this.zoom;let n=2*t;let i=this.aspect*n;let r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,c=s.fullHeight;r+=s.offsetX*i/a;t-=s.offsetY*n/c;i*=s.width/a;n*=s.height/c}const o=this.filmOffset;if(o!==0)r+=e*o/this.getFilmWidth();this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=Ki.prototype.toJSON.call(this,e);t.object.fov=this.fov;t.object.zoom=this.zoom;t.object.near=this.near;t.object.far=this.far;t.object.focus=this.focus;t.object.aspect=this.aspect;if(this.view!==null)t.object.view=Object.assign({},this.view);t.object.filmGauge=this.filmGauge;t.object.filmOffset=this.filmOffset;return t}});const Ms=90,ws=1;class Es extends Ki{constructor(e,t,n){super();this.type="CubeCamera";if(n.isWebGLCubeRenderTarget!==true){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new bs(Ms,ws,e,t);i.layers=this.layers;i.up.set(0,-1,0);i.lookAt(new Zn(1,0,0));this.add(i);const r=new bs(Ms,ws,e,t);r.layers=this.layers;r.up.set(0,-1,0);r.lookAt(new Zn(-1,0,0));this.add(r);const s=new bs(Ms,ws,e,t);s.layers=this.layers;s.up.set(0,0,1);s.lookAt(new Zn(0,1,0));this.add(s);const o=new bs(Ms,ws,e,t);o.layers=this.layers;o.up.set(0,0,-1);o.lookAt(new Zn(0,-1,0));this.add(o);const a=new bs(Ms,ws,e,t);a.layers=this.layers;a.up.set(0,-1,0);a.lookAt(new Zn(0,0,1));this.add(a);const c=new bs(Ms,ws,e,t);c.layers=this.layers;c.up.set(0,-1,0);c.lookAt(new Zn(0,0,-1));this.add(c)}update(e,t){if(this.parent===null)this.updateMatrixWorld();const n=this.renderTarget;const[i,r,s,o,a,c]=this.children;const l=e.xr.enabled;const u=e.getRenderTarget();e.xr.enabled=false;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=false;e.setRenderTarget(n,0);e.render(t,i);e.setRenderTarget(n,1);e.render(t,r);e.setRenderTarget(n,2);e.render(t,s);e.setRenderTarget(n,3);e.render(t,o);e.setRenderTarget(n,4);e.render(t,a);n.texture.generateMipmaps=h;e.setRenderTarget(n,5);e.render(t,c);e.setRenderTarget(u);e.xr.enabled=l}}class Ts extends Vn{constructor(e,t,n,i,r,s,o,a,c,l){e=e!==undefined?e:[];t=t!==undefined?t:x;o=o!==undefined?o:Je;super(e,t,n,i,r,s,o,a,c,l);this._needsFlipEnvMap=true;this.flipY=false}get images(){return this.image}set images(e){this.image=e}}Ts.prototype.isCubeTexture=true;class Ss extends Xn{constructor(e,t,n){if(Number.isInteger(t)){console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )");t=n}super(e,e,t);t=t||{};this.texture=new Ts(undefined,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding);this.texture.generateMipmaps=t.generateMipmaps!==undefined?t.generateMipmaps:false;this.texture.minFilter=t.minFilter!==undefined?t.minFilter:se;this.texture._needsFlipEnvMap=false}fromEquirectangularTexture(e,t){this.texture.type=t.type;this.texture.format=Ke;this.texture.encoding=t.encoding;this.texture.generateMipmaps=t.generateMipmaps;this.texture.minFilter=t.minFilter;this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`};const i=new fs(5,5,5);const r=new xs({name:"CubemapFromEquirect",uniforms:ps(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:he,blending:fe});r.uniforms.tEquirect.value=t;const s=new us(i,r);const o=t.minFilter;if(t.minFilter===ae)t.minFilter=se;const a=new Es(1,10,this);a.update(e,s);t.minFilter=o;s.geometry.dispose();s.material.dispose();return this}clear(t,n,i,r){const e=t.getRenderTarget();for(let e=0;e<6;e++){t.setRenderTarget(this,e);t.clear(n,i,r)}t.setRenderTarget(e)}}Ss.prototype.isWebGLCubeRenderTarget=true;class As extends Vn{constructor(e,t,n,i,r,s,o,a,c,l,u,h){super(null,s,o,a,c,l,i,r,u,h);this.image={data:e||null,width:t||1,height:n||1};this.magFilter=c!==undefined?c:ne;this.minFilter=l!==undefined?l:ne;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true}}As.prototype.isDataTexture=true;const Rs=new yi;const Ls=new Zn;class Cs{constructor(e=new tr,t=new tr,n=new tr,i=new tr,r=new tr,s=new tr){this.planes=[e,t,n,i,r,s]}set(e,t,n,i,r,s){const o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(n);o[3].copy(i);o[4].copy(r);o[5].copy(s);return this}copy(t){const n=this.planes;for(let e=0;e<6;e++){n[e].copy(t.planes[e])}return this}setFromProjectionMatrix(e){const t=this.planes;const n=e.elements;const i=n[0],r=n[1],s=n[2],o=n[3];const a=n[4],c=n[5],l=n[6],u=n[7];const h=n[8],d=n[9],f=n[10],p=n[11];const m=n[12],g=n[13],y=n[14],v=n[15];t[0].setComponents(o-i,u-a,p-h,v-m).normalize();t[1].setComponents(o+i,u+a,p+h,v+m).normalize();t[2].setComponents(o+r,u+c,p+d,v+g).normalize();t[3].setComponents(o-r,u-c,p-d,v-g).normalize();t[4].setComponents(o-s,u-l,p-f,v-y).normalize();t[5].setComponents(o+s,u+l,p+f,v+y).normalize();return this}intersectsObject(e){const t=e.geometry;if(t.boundingSphere===null)t.computeBoundingSphere();Rs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);return this.intersectsSphere(Rs)}intersectsSprite(e){Rs.center.set(0,0,0);Rs.radius=.7071067811865476;Rs.applyMatrix4(e.matrixWorld);return this.intersectsSphere(Rs)}intersectsSphere(e){const t=this.planes;const n=e.center;const i=-e.radius;for(let e=0;e<6;e++){const r=t[e].distanceToPoint(n);if(r<i){return false}}return true}intersectsBox(t){const n=this.planes;for(let e=0;e<6;e++){const i=n[e];Ls.x=i.normal.x>0?t.max.x:t.min.x;Ls.y=i.normal.y>0?t.max.y:t.min.y;Ls.z=i.normal.z>0?t.max.z:t.min.z;if(i.distanceToPoint(Ls)<0){return false}}return true}containsPoint(t){const n=this.planes;for(let e=0;e<6;e++){if(n[e].distanceToPoint(t)<0){return false}}return true}clone(){return(new this.constructor).copy(this)}}function Ps(){let n=null;let e=false;let i=null;let r=null;function s(e,t){i(e,t);r=n.requestAnimationFrame(s)}return{start:function(){if(e===true)return;if(i===null)return;r=n.requestAnimationFrame(s);e=true},stop:function(){n.cancelAnimationFrame(r);e=false},setAnimationLoop:function(e){i=e},setContext:function(e){n=e}}}function Is(o,e){const a=e.isWebGL2;const r=new WeakMap;function s(e,t){const n=e.array;const i=e.usage;const r=o.createBuffer();o.bindBuffer(t,r);o.bufferData(t,n,i);e.onUploadCallback();let s=o.FLOAT;if(n instanceof Float32Array){s=o.FLOAT}else if(n instanceof Float64Array){console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.")}else if(n instanceof Uint16Array){if(e.isFloat16BufferAttribute){if(a){s=o.HALF_FLOAT}else{console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}}else{s=o.UNSIGNED_SHORT}}else if(n instanceof Int16Array){s=o.SHORT}else if(n instanceof Uint32Array){s=o.UNSIGNED_INT}else if(n instanceof Int32Array){s=o.INT}else if(n instanceof Int8Array){s=o.BYTE}else if(n instanceof Uint8Array){s=o.UNSIGNED_BYTE}return{buffer:r,type:s,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}function c(e,t,n){const i=t.array;const r=t.updateRange;o.bindBuffer(n,e);if(r.count===-1){o.bufferSubData(n,0,i)}else{if(a){o.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i,r.offset,r.count)}else{o.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i.subarray(r.offset,r.offset+r.count))}r.count=-1}}function t(e){if(e.isInterleavedBufferAttribute)e=e.data;return r.get(e)}function n(e){if(e.isInterleavedBufferAttribute)e=e.data;const t=r.get(e);if(t){o.deleteBuffer(t.buffer);r.delete(e)}}function i(e,t){if(e.isGLBufferAttribute){const i=r.get(e);if(!i||i.version<e.version){r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}return}if(e.isInterleavedBufferAttribute)e=e.data;const n=r.get(e);if(n===undefined){r.set(e,s(e,t))}else if(n.version<e.version){c(n.buffer,e,t);n.version=e.version}}return{get:t,remove:n,update:i}}class Ds extends Xr{constructor(e=1,t=1,n=1,i=1){super();this.type="PlaneGeometry";this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2;const s=t/2;const o=Math.floor(n);const a=Math.floor(i);const c=o+1;const l=a+1;const u=e/o;const h=t/a;const d=[];const f=[];const p=[];const m=[];for(let t=0;t<l;t++){const g=t*h-s;for(let e=0;e<c;e++){const y=e*u-r;f.push(y,-g,0);p.push(0,0,1);m.push(e/o);m.push(1-t/a)}}for(let t=0;t<a;t++){for(let e=0;e<o;e++){const v=e+c*t;const x=e+c*(t+1);const _=e+1+c*(t+1);const b=e+1+c*t;d.push(v,x,b);d.push(x,_,b)}}this.setIndex(d);this.setAttribute("position",new Nr(f,3));this.setAttribute("normal",new Nr(p,3));this.setAttribute("uv",new Nr(m,2))}}var Ns="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";var Fs="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var Os="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif";var Bs="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif";var Us="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";var Hs="vec3 transformed = vec3( position );";var zs="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";var Gs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif";var ks="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";var Vs="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";var Ws="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";var js="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";var Xs="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";var qs="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif";var Ys="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif";var Zs="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif";var Js="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif";var Ks="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";var Qs="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif";var $s="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";var eo="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";var to="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";var no="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";var io="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";var ro="gl_FragColor = linearToOutputTexel( gl_FragColor );";var so="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}";var oo="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";var ao="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";var co="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";var lo="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";var uo="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";var ho="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif";var fo="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif";var po="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";var mo="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";var go="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";var yo="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif";var vo="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";var xo="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";var _o="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif";var bo="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif";var Mo="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";var wo="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";var Eo="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";var To="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";var So="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif";var Ao="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";var Ro="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";var Lo="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif";var Co="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";var Po="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";var Io="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";var Do="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";var No="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";var Fo="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif";var Oo="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";var Bo="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";var Uo="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var Ho="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";var zo="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";var Go="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif";var ko="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";var Vo="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif";var Wo="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";var jo="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif";var Xo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif";var qo="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";var Yo="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif";var Zo="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";var Jo="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";var Ko="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";var Qo="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";var $o="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";var ea="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";var ta="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";var na="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";var ia="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";var ra="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";var sa="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";var oa="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";var aa="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";var ca="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";var la="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";var ua="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";var ha="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";var da="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";var fa="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";var pa="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";var ma="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif";var ga="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif";var ya="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";var va="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";var xa="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";var _a="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";var ba="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";var Ma="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";var wa="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";var Ea="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var Ta="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";var Sa="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var Aa="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";var Ra="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";var La="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";var Ca="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";var Pa="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";var Ia="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var Da="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";var Na="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var Fa="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";var Oa="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var Ba="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";var Ua="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var Ha="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var za="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var Ga="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";var ka="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var Va="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var Wa="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var ja="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var Xa="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var qa="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var Ya="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}";var Za="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";var Ja="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var Ka="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";var Qa="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var $a="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var ec="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var tc="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const nc={alphamap_fragment:Ns,alphamap_pars_fragment:Fs,alphatest_fragment:Os,aomap_fragment:Bs,aomap_pars_fragment:Us,begin_vertex:Hs,beginnormal_vertex:zs,bsdfs:Gs,bumpmap_pars_fragment:ks,clipping_planes_fragment:Vs,clipping_planes_pars_fragment:Ws,clipping_planes_pars_vertex:js,clipping_planes_vertex:Xs,color_fragment:qs,color_pars_fragment:Ys,color_pars_vertex:Zs,color_vertex:Js,common:Ks,cube_uv_reflection_fragment:Qs,defaultnormal_vertex:$s,displacementmap_pars_vertex:eo,displacementmap_vertex:to,emissivemap_fragment:no,emissivemap_pars_fragment:io,encodings_fragment:ro,encodings_pars_fragment:so,envmap_fragment:oo,envmap_common_pars_fragment:ao,envmap_pars_fragment:co,envmap_pars_vertex:lo,envmap_physical_pars_fragment:bo,envmap_vertex:uo,fog_vertex:ho,fog_pars_vertex:fo,fog_fragment:po,fog_pars_fragment:mo,gradientmap_pars_fragment:go,lightmap_fragment:yo,lightmap_pars_fragment:vo,lights_lambert_vertex:xo,lights_pars_begin:_o,lights_toon_fragment:Mo,lights_toon_pars_fragment:wo,lights_phong_fragment:Eo,lights_phong_pars_fragment:To,lights_physical_fragment:So,lights_physical_pars_fragment:Ao,lights_fragment_begin:Ro,lights_fragment_maps:Lo,lights_fragment_end:Co,logdepthbuf_fragment:Po,logdepthbuf_pars_fragment:Io,logdepthbuf_pars_vertex:Do,logdepthbuf_vertex:No,map_fragment:Fo,map_pars_fragment:Oo,map_particle_fragment:Bo,map_particle_pars_fragment:Uo,metalnessmap_fragment:Ho,metalnessmap_pars_fragment:zo,morphnormal_vertex:Go,morphtarget_pars_vertex:ko,morphtarget_vertex:Vo,normal_fragment_begin:Wo,normal_fragment_maps:jo,normalmap_pars_fragment:Xo,clearcoat_normal_fragment_begin:qo,clearcoat_normal_fragment_maps:Yo,clearcoat_pars_fragment:Zo,packing:Jo,premultiplied_alpha_fragment:Ko,project_vertex:Qo,dithering_fragment:$o,dithering_pars_fragment:ea,roughnessmap_fragment:ta,roughnessmap_pars_fragment:na,shadowmap_pars_fragment:ia,shadowmap_pars_vertex:ra,shadowmap_vertex:sa,shadowmask_pars_fragment:oa,skinbase_vertex:aa,skinning_pars_vertex:ca,skinning_vertex:la,skinnormal_vertex:ua,specularmap_fragment:ha,specularmap_pars_fragment:da,tonemapping_fragment:fa,tonemapping_pars_fragment:pa,transmissionmap_fragment:ma,transmissionmap_pars_fragment:ga,uv_pars_fragment:ya,uv_pars_vertex:va,uv_vertex:xa,uv2_pars_fragment:_a,uv2_pars_vertex:ba,uv2_vertex:Ma,worldpos_vertex:wa,background_frag:Ea,background_vert:Ta,cube_frag:Sa,cube_vert:Aa,depth_frag:Ra,depth_vert:La,distanceRGBA_frag:Ca,distanceRGBA_vert:Pa,equirect_frag:Ia,equirect_vert:Da,linedashed_frag:Na,linedashed_vert:Fa,meshbasic_frag:Oa,meshbasic_vert:Ba,meshlambert_frag:Ua,meshlambert_vert:Ha,meshmatcap_frag:za,meshmatcap_vert:Ga,meshtoon_frag:ka,meshtoon_vert:Va,meshphong_frag:Wa,meshphong_vert:ja,meshphysical_frag:Xa,meshphysical_vert:qa,normal_frag:Ya,normal_vert:Za,points_frag:Ja,points_vert:Ka,shadow_frag:Qa,shadow_vert:$a,sprite_frag:ec,sprite_vert:tc};const ic={common:{diffuse:{value:new br(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Hn},uv2Transform:{value:new Hn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Un(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new br(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new br(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Hn}},sprite:{diffuse:{value:new br(15658734)},opacity:{value:1},center:{value:new Un(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Hn}}};const rc={basic:{uniforms:ms([ic.common,ic.specularmap,ic.envmap,ic.aomap,ic.lightmap,ic.fog]),vertexShader:nc.meshbasic_vert,fragmentShader:nc.meshbasic_frag},lambert:{uniforms:ms([ic.common,ic.specularmap,ic.envmap,ic.aomap,ic.lightmap,ic.emissivemap,ic.fog,ic.lights,{emissive:{value:new br(0)}}]),vertexShader:nc.meshlambert_vert,fragmentShader:nc.meshlambert_frag},phong:{uniforms:ms([ic.common,ic.specularmap,ic.envmap,ic.aomap,ic.lightmap,ic.emissivemap,ic.bumpmap,ic.normalmap,ic.displacementmap,ic.fog,ic.lights,{emissive:{value:new br(0)},specular:{value:new br(1118481)},shininess:{value:30}}]),vertexShader:nc.meshphong_vert,fragmentShader:nc.meshphong_frag},standard:{uniforms:ms([ic.common,ic.envmap,ic.aomap,ic.lightmap,ic.emissivemap,ic.bumpmap,ic.normalmap,ic.displacementmap,ic.roughnessmap,ic.metalnessmap,ic.fog,ic.lights,{emissive:{value:new br(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nc.meshphysical_vert,fragmentShader:nc.meshphysical_frag},toon:{uniforms:ms([ic.common,ic.aomap,ic.lightmap,ic.emissivemap,ic.bumpmap,ic.normalmap,ic.displacementmap,ic.gradientmap,ic.fog,ic.lights,{emissive:{value:new br(0)}}]),vertexShader:nc.meshtoon_vert,fragmentShader:nc.meshtoon_frag},matcap:{uniforms:ms([ic.common,ic.bumpmap,ic.normalmap,ic.displacementmap,ic.fog,{matcap:{value:null}}]),vertexShader:nc.meshmatcap_vert,fragmentShader:nc.meshmatcap_frag},points:{uniforms:ms([ic.points,ic.fog]),vertexShader:nc.points_vert,fragmentShader:nc.points_frag},dashed:{uniforms:ms([ic.common,ic.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nc.linedashed_vert,fragmentShader:nc.linedashed_frag},depth:{uniforms:ms([ic.common,ic.displacementmap]),vertexShader:nc.depth_vert,fragmentShader:nc.depth_frag},normal:{uniforms:ms([ic.common,ic.bumpmap,ic.normalmap,ic.displacementmap,{opacity:{value:1}}]),vertexShader:nc.normal_vert,fragmentShader:nc.normal_frag},sprite:{uniforms:ms([ic.sprite,ic.fog]),vertexShader:nc.sprite_vert,fragmentShader:nc.sprite_frag},background:{uniforms:{uvTransform:{value:new Hn},t2D:{value:null}},vertexShader:nc.background_vert,fragmentShader:nc.background_frag},cube:{uniforms:ms([ic.envmap,{opacity:{value:1}}]),vertexShader:nc.cube_vert,fragmentShader:nc.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nc.equirect_vert,fragmentShader:nc.equirect_frag},distanceRGBA:{uniforms:ms([ic.common,ic.displacementmap,{referencePosition:{value:new Zn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nc.distanceRGBA_vert,fragmentShader:nc.distanceRGBA_frag},shadow:{uniforms:ms([ic.lights,ic.fog,{color:{value:new br(0)},opacity:{value:1}}]),vertexShader:nc.shadow_vert,fragmentShader:nc.shadow_frag}};rc.physical={uniforms:ms([rc.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Un(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new br(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:nc.meshphysical_vert,fragmentShader:nc.meshphysical_frag};function sc(a,c,n,l,i){const u=new br(0);let h=0;let d;let f;let p=null;let m=0;let g=null;function e(e,t,n,i){let r=t.isScene===true?t.background:null;if(r&&r.isTexture){r=c.get(r)}const s=a.xr;const o=s.getSession&&s.getSession();if(o&&o.environmentBlendMode==="additive"){r=null}if(r===null){y(u,h)}else if(r&&r.isColor){y(r,1);i=true}if(a.autoClear||i){a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil)}if(r&&(r.isCubeTexture||r.mapping===C)){if(f===undefined){f=new us(new fs(1,1,1),new xs({name:"BackgroundCubeMaterial",uniforms:ps(rc.cube.uniforms),vertexShader:rc.cube.vertexShader,fragmentShader:rc.cube.fragmentShader,side:he,depthTest:false,depthWrite:false,fog:false}));f.geometry.deleteAttribute("normal");f.geometry.deleteAttribute("uv");f.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)};Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}});l.update(f)}f.material.uniforms.envMap.value=r;f.material.uniforms.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1;if(p!==r||m!==r.version||g!==a.toneMapping){f.material.needsUpdate=true;p=r;m=r.version;g=a.toneMapping}e.unshift(f,f.geometry,f.material,0,0,null)}else if(r&&r.isTexture){if(d===undefined){d=new us(new Ds(2,2),new xs({name:"BackgroundMaterial",uniforms:ps(rc.background.uniforms),vertexShader:rc.background.vertexShader,fragmentShader:rc.background.fragmentShader,side:L,depthTest:false,depthWrite:false,fog:false}));d.geometry.deleteAttribute("normal");Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}});l.update(d)}d.material.uniforms.t2D.value=r;if(r.matrixAutoUpdate===true){r.updateMatrix()}d.material.uniforms.uvTransform.value.copy(r.matrix);if(p!==r||m!==r.version||g!==a.toneMapping){d.material.needsUpdate=true;p=r;m=r.version;g=a.toneMapping}e.unshift(d,d.geometry,d.material,0,0,null)}}function y(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return u},setClearColor:function(e,t=1){u.set(e);h=t;y(u,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e;y(u,h)},render:e}}function oc(_,b,M,w){const r=_.getParameter(_.MAX_VERTEX_ATTRIBS);const t=w.isWebGL2?null:b.get("OES_vertex_array_object");const c=w.isWebGL2||t!==null;const a={};const e=f(null);let l=e;function n(e,t,n,i,r){let s=false;if(c){const o=d(i,n,t);if(l!==o){l=o;h(l.object)}s=p(i,r);if(s)m(i,r)}else{const a=t.wireframe===true;if(l.geometry!==i.id||l.program!==n.id||l.wireframe!==a){l.geometry=i.id;l.program=n.id;l.wireframe=a;s=true}}if(e.isInstancedMesh===true){s=true}if(r!==null){M.update(r,_.ELEMENT_ARRAY_BUFFER)}if(s){g(e,t,n,i);if(r!==null){_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,M.get(r).buffer)}}}function u(){if(w.isWebGL2)return _.createVertexArray();return t.createVertexArrayOES()}function h(e){if(w.isWebGL2)return _.bindVertexArray(e);return t.bindVertexArrayOES(e)}function s(e){if(w.isWebGL2)return _.deleteVertexArray(e);return t.deleteVertexArrayOES(e)}function d(e,t,n){const i=n.wireframe===true;let r=a[e.id];if(r===undefined){r={};a[e.id]=r}let s=r[t.id];if(s===undefined){s={};r[t.id]=s}let o=s[i];if(o===undefined){o=f(u());s[i]=o}return o}function f(e){const t=[];const n=[];const i=[];for(let e=0;e<r;e++){t[e]=0;n[e]=0;i[e]=0}return{geometry:null,program:null,wireframe:false,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function p(e,t){const n=l.attributes;const i=e.attributes;let r=0;for(const s in i){const o=n[s];const a=i[s];if(o===undefined)return true;if(o.attribute!==a)return true;if(o.data!==a.data)return true;r++}if(l.attributesNum!==r)return true;if(l.index!==t)return true;return false}function m(e,t){const n={};const i=e.attributes;let r=0;for(const s in i){const o=i[s];const a={};a.attribute=o;if(o.data){a.data=o.data}n[s]=a;r++}l.attributes=n;l.attributesNum=r;l.index=t}function E(){const n=l.newAttributes;for(let e=0,t=n.length;e<t;e++){n[e]=0}}function T(e){S(e,0)}function S(t,n){const e=l.newAttributes;const i=l.enabledAttributes;const r=l.attributeDivisors;e[t]=1;if(i[t]===0){_.enableVertexAttribArray(t);i[t]=1}if(r[t]!==n){const e=w.isWebGL2?_:b.get("ANGLE_instanced_arrays");e[w.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](t,n);r[t]=n}}function A(){const n=l.newAttributes;const i=l.enabledAttributes;for(let e=0,t=i.length;e<t;e++){if(i[e]!==n[e]){_.disableVertexAttribArray(e);i[e]=0}}}function R(e,t,n,i,r,s){if(w.isWebGL2===true&&(n===_.INT||n===_.UNSIGNED_INT)){_.vertexAttribIPointer(e,t,n,r,s)}else{_.vertexAttribPointer(e,t,n,i,r,s)}}function g(e,t,n,i){if(w.isWebGL2===false&&(e.isInstancedMesh||i.isInstancedBufferGeometry)){if(b.get("ANGLE_instanced_arrays")===null)return}E();const r=i.attributes;const s=n.getAttributes();const o=t.defaultAttributeValues;for(const a in s){const c=s[a];if(c>=0){const l=r[a];if(l!==undefined){const u=l.normalized;const h=l.itemSize;const d=M.get(l);if(d===undefined)continue;const f=d.buffer;const p=d.type;const m=d.bytesPerElement;if(l.isInterleavedBufferAttribute){const g=l.data;const y=g.stride;const v=l.offset;if(g&&g.isInstancedInterleavedBuffer){S(c,g.meshPerAttribute);if(i._maxInstanceCount===undefined){i._maxInstanceCount=g.meshPerAttribute*g.count}}else{T(c)}_.bindBuffer(_.ARRAY_BUFFER,f);R(c,h,p,u,y*m,v*m)}else{if(l.isInstancedBufferAttribute){S(c,l.meshPerAttribute);if(i._maxInstanceCount===undefined){i._maxInstanceCount=l.meshPerAttribute*l.count}}else{T(c)}_.bindBuffer(_.ARRAY_BUFFER,f);R(c,h,p,u,0,0)}}else if(a==="instanceMatrix"){const d=M.get(e.instanceMatrix);if(d===undefined)continue;const f=d.buffer;const p=d.type;S(c+0,1);S(c+1,1);S(c+2,1);S(c+3,1);_.bindBuffer(_.ARRAY_BUFFER,f);_.vertexAttribPointer(c+0,4,p,false,64,0);_.vertexAttribPointer(c+1,4,p,false,64,16);_.vertexAttribPointer(c+2,4,p,false,64,32);_.vertexAttribPointer(c+3,4,p,false,64,48)}else if(a==="instanceColor"){const d=M.get(e.instanceColor);if(d===undefined)continue;const f=d.buffer;const p=d.type;S(c,1);_.bindBuffer(_.ARRAY_BUFFER,f);_.vertexAttribPointer(c,3,p,false,12,0)}else if(o!==undefined){const x=o[a];if(x!==undefined){switch(x.length){case 2:_.vertexAttrib2fv(c,x);break;case 3:_.vertexAttrib3fv(c,x);break;case 4:_.vertexAttrib4fv(c,x);break;default:_.vertexAttrib1fv(c,x)}}}}}A()}function i(){v();for(const e in a){const t=a[e];for(const n in t){const i=t[n];for(const r in i){s(i[r].object);delete i[r]}delete t[n]}delete a[e]}}function o(e){if(a[e.id]===undefined)return;const t=a[e.id];for(const n in t){const i=t[n];for(const r in i){s(i[r].object);delete i[r]}delete t[n]}delete a[e.id]}function y(e){for(const t in a){const n=a[t];if(n[e.id]===undefined)continue;const i=n[e.id];for(const r in i){s(i[r].object);delete i[r]}delete n[e.id]}}function v(){x();if(l===e)return;l=e;h(l.object)}function x(){e.geometry=null;e.program=null;e.wireframe=false}return{setup:n,reset:v,resetDefaultState:x,dispose:i,releaseStatesOfGeometry:o,releaseStatesOfProgram:y,initAttributes:E,enableAttribute:T,disableUnusedAttributes:A}}function ac(s,o,a,e){const c=e.isWebGL2;let l;function t(e){l=e}function n(e,t){s.drawArrays(l,e,t);a.update(t,l,1)}function i(e,t,n){if(n===0)return;let i,r;if(c){i=s;r="drawArraysInstanced"}else{i=o.get("ANGLE_instanced_arrays");r="drawArraysInstancedANGLE";if(i===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}i[r](l,e,t,n);a.update(t,l,n)}this.setMode=t;this.render=n;this.renderInstances=i}function cc(t,n,e){let i;function r(){if(i!==undefined)return i;if(n.has("EXT_texture_filter_anisotropic")===true){const e=n.get("EXT_texture_filter_anisotropic");i=t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{i=0}return i}function s(e){if(e==="highp"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0){return"highp"}e="mediump"}if(e==="mediump"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0){return"mediump"}}return"lowp"}const o=typeof WebGL2RenderingContext!=="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=="undefined"&&t instanceof WebGL2ComputeRenderingContext;let a=e.precision!==undefined?e.precision:"highp";const c=s(a);if(c!==a){console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead.");a=c}const l=e.logarithmicDepthBuffer===true;const u=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);const h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);const d=t.getParameter(t.MAX_TEXTURE_SIZE);const f=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE);const p=t.getParameter(t.MAX_VERTEX_ATTRIBS);const m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS);const g=t.getParameter(t.MAX_VARYING_VECTORS);const y=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS);const v=h>0;const x=o||n.has("OES_texture_float");const _=v&&x;const b=o?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:u,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:_,maxSamples:b}}function lc(l){const c=this;let u=null,h=0,d=false,f=false;const p=new tr,m=new Hn,g={value:null,needsUpdate:false};this.uniform=g;this.numPlanes=0;this.numIntersection=0;this.init=function(e,t,n){const i=e.length!==0||t||h!==0||d;d=t;u=v(e,n,0);h=e.length;return i};this.beginShadows=function(){f=true;v(null)};this.endShadows=function(){f=false;y()};this.setState=function(e,n,i){const r=e.clippingPlanes,s=e.clipIntersection,t=e.clipShadows;const o=l.get(e);if(!d||r===null||r.length===0||f&&!t){if(f){v(null)}else{y()}}else{const a=f?0:h,c=a*4;let t=o.clippingState||null;g.value=t;t=v(r,n,c,i);for(let e=0;e!==c;++e){t[e]=u[e]}o.clippingState=t;this.numIntersection=s?this.numPlanes:0;this.numPlanes+=a}};function y(){if(g.value!==u){g.value=u;g.needsUpdate=h>0}c.numPlanes=h;c.numIntersection=0}function v(n,e,i,t){const r=n!==null?n.length:0;let s=null;if(r!==0){s=g.value;if(t!==true||s===null){const o=i+r*4,a=e.matrixWorldInverse;m.getNormalMatrix(a);if(s===null||s.length<o){s=new Float32Array(o)}for(let e=0,t=i;e!==r;++e,t+=4){p.copy(n[e]).applyMatrix4(a,m);p.normal.toArray(s,t);s[t+3]=p.constant}}g.value=s;g.needsUpdate=true}c.numPlanes=r;c.numIntersection=0;return s}}function uc(o){let a=new WeakMap;function c(e,t){if(t===b){e.mapping=x}else if(t===M){e.mapping=_}return e}function e(e){if(e&&e.isTexture){const t=e.mapping;if(t===b||t===M){if(a.has(e)){const n=a.get(e).texture;return c(n,e.mapping)}else{const i=e.image;if(i&&i.height>0){const r=o.getRenderTarget();const s=new Ss(i.height/2);s.fromEquirectangularTexture(o,e);a.set(e,s);o.setRenderTarget(r);e.addEventListener("dispose",l);return c(s.texture,e.mapping)}else{return null}}}}return e}function l(e){const t=e.target;t.removeEventListener("dispose",l);const n=a.get(t);if(n!==undefined){a.delete(t);n.dispose()}}function t(){a=new WeakMap}return{get:e,dispose:t}}function hc(n){const i={};function r(e){if(i[e]!==undefined){return i[e]}let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}i[e]=t;return t}return{has:function(e){return r(e)!==null},init:function(e){if(e.isWebGL2){r("EXT_color_buffer_float")}else{r("WEBGL_depth_texture");r("OES_texture_float");r("OES_texture_half_float");r("OES_texture_half_float_linear");r("OES_standard_derivatives");r("OES_element_index_uint");r("OES_vertex_array_object");r("ANGLE_instanced_arrays")}r("OES_texture_float_linear");r("EXT_color_buffer_half_float")},get:function(e){const t=r(e);if(t===null){console.warn("THREE.WebGLRenderer: "+e+" extension not supported.")}return t}}}function dc(s,h,r,o){const a={};const d=new WeakMap;function c(e){const t=e.target;if(t.index!==null){h.remove(t.index)}for(const i in t.attributes){h.remove(t.attributes[i])}t.removeEventListener("dispose",c);delete a[t.id];const n=d.get(t);if(n){h.remove(n);d.delete(t)}o.releaseStatesOfGeometry(t);if(t.isInstancedBufferGeometry===true){delete t._maxInstanceCount}r.memory.geometries--}function e(e,t){if(a[t.id]===true)return t;t.addEventListener("dispose",c);a[t.id]=true;r.memory.geometries++;return t}function t(e){const t=e.attributes;for(const i in t){h.update(t[i],s.ARRAY_BUFFER)}const n=e.morphAttributes;for(const i in n){const r=n[i];for(let e=0,t=r.length;e<t;e++){h.update(r[e],s.ARRAY_BUFFER)}}}function i(e){const n=[];const t=e.index;const i=e.attributes.position;let r=0;if(t!==null){const a=t.array;r=t.version;for(let e=0,t=a.length;e<t;e+=3){const c=a[e+0];const l=a[e+1];const u=a[e+2];n.push(c,l,l,u,u,c)}}else{const a=i.array;r=i.version;for(let e=0,t=a.length/3-1;e<t;e+=3){const c=e+0;const l=e+1;const u=e+2;n.push(c,l,l,u,u,c)}}const s=new(Or(n)>65535?Ir:Cr)(n,1);s.version=r;const o=d.get(e);if(o)h.remove(o);d.set(e,s)}function n(e){const t=d.get(e);if(t){const n=e.index;if(n!==null){if(t.version<n.version){i(e)}}}else{i(e)}return d.get(e)}return{get:e,update:t,getWireframeAttribute:n}}function fc(s,o,a,e){const c=e.isWebGL2;let l;function t(e){l=e}let u,h;function n(e){u=e.type;h=e.bytesPerElement}function i(e,t){s.drawElements(l,t,u,e*h);a.update(t,l,1)}function r(e,t,n){if(n===0)return;let i,r;if(c){i=s;r="drawElementsInstanced"}else{i=o.get("ANGLE_instanced_arrays");r="drawElementsInstancedANGLE";if(i===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}i[r](l,t,u,e*h,n);a.update(t,l,n)}this.setMode=t;this.setIndex=n;this.render=i;this.renderInstances=r}function pc(i){const e={geometries:0,textures:0};const r={frame:0,calls:0,triangles:0,points:0,lines:0};function t(e,t,n){r.calls++;switch(t){case i.TRIANGLES:r.triangles+=n*(e/3);break;case i.LINES:r.lines+=n*(e/2);break;case i.LINE_STRIP:r.lines+=n*(e-1);break;case i.LINE_LOOP:r.lines+=n*e;break;case i.POINTS:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t);break}}function n(){r.frame++;r.calls=0;r.triangles=0;r.points=0;r.lines=0}return{memory:e,render:r,programs:null,autoReset:true,reset:n,update:t}}function mc(e,t){return e[0]-t[0]}function gc(e,t){return Math.abs(t[1])-Math.abs(e[1])}function yc(p){const m={};const g=new Float32Array(8);const y=[];for(let e=0;e<8;e++){y[e]=[e,0]}function e(e,t,n,i){const r=e.morphTargetInfluences;const s=r===undefined?0:r.length;let o=m[t.id];if(o===undefined){o=[];for(let e=0;e<s;e++){o[e]=[e,0]}m[t.id]=o}for(let e=0;e<s;e++){const h=o[e];h[0]=e;h[1]=r[e]}o.sort(gc);for(let e=0;e<8;e++){if(e<s&&o[e][1]){y[e][0]=o[e][0];y[e][1]=o[e][1]}else{y[e][0]=Number.MAX_SAFE_INTEGER;y[e][1]=0}}y.sort(mc);const a=n.morphTargets&&t.morphAttributes.position;const c=n.morphNormals&&t.morphAttributes.normal;let l=0;for(let e=0;e<8;e++){const h=y[e];const d=h[0];const f=h[1];if(d!==Number.MAX_SAFE_INTEGER&&f){if(a&&t.getAttribute("morphTarget"+e)!==a[d]){t.setAttribute("morphTarget"+e,a[d])}if(c&&t.getAttribute("morphNormal"+e)!==c[d]){t.setAttribute("morphNormal"+e,c[d])}g[e]=f;l+=f}else{if(a&&t.hasAttribute("morphTarget"+e)===true){t.deleteAttribute("morphTarget"+e)}if(c&&t.hasAttribute("morphNormal"+e)===true){t.deleteAttribute("morphNormal"+e)}g[e]=0}}const u=t.morphTargetsRelative?1:1-l;i.getUniforms().setValue(p,"morphTargetBaseInfluence",u);i.getUniforms().setValue(p,"morphTargetInfluences",g)}return{update:e}}function vc(r,s,o,a){let c=new WeakMap;function e(e){const t=a.render.frame;const n=e.geometry;const i=s.get(e,n);if(c.get(i)!==t){s.update(i);c.set(i,t)}if(e.isInstancedMesh){if(e.hasEventListener("dispose",l)===false){e.addEventListener("dispose",l)}o.update(e.instanceMatrix,r.ARRAY_BUFFER);if(e.instanceColor!==null){o.update(e.instanceColor,r.ARRAY_BUFFER)}}return i}function t(){c=new WeakMap}function l(e){const t=e.target;t.removeEventListener("dispose",l);o.remove(t.instanceMatrix);if(t.instanceColor!==null)o.remove(t.instanceColor)}return{update:e,dispose:t}}class xc extends Vn{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i};this.magFilter=ne;this.minFilter=ne;this.wrapR=ee;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true}}xc.prototype.isDataTexture2DArray=true;class _c extends Vn{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i};this.magFilter=ne;this.minFilter=ne;this.wrapR=ee;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true}}_c.prototype.isDataTexture3D=true;const bc=new Vn;const Mc=new xc;const wc=new _c;const Ec=new Ts;const Tc=[];const Sc=[];const Ac=new Float32Array(16);const Rc=new Float32Array(9);const Lc=new Float32Array(4);function Cc(n,i,r){const e=n[0];if(e<=0||e>0)return n;const t=i*r;let s=Tc[t];if(s===undefined){s=new Float32Array(t);Tc[t]=s}if(i!==0){e.toArray(s,0);for(let e=1,t=0;e!==i;++e){t+=r;n[e].toArray(s,t)}}return s}function Pc(n,i){if(n.length!==i.length)return false;for(let e=0,t=n.length;e<t;e++){if(n[e]!==i[e])return false}return true}function Ic(n,i){for(let e=0,t=i.length;e<t;e++){n[e]=i[e]}}function Dc(t,n){let i=Sc[n];if(i===undefined){i=new Int32Array(n);Sc[n]=i}for(let e=0;e!==n;++e){i[e]=t.allocateTextureUnit()}return i}function Nc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1f(this.addr,t);n[0]=t}function Fc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y){e.uniform2f(this.addr,t.x,t.y);n[0]=t.x;n[1]=t.y}}else{if(Pc(n,t))return;e.uniform2fv(this.addr,t);Ic(n,t)}}function Oc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z){e.uniform3f(this.addr,t.x,t.y,t.z);n[0]=t.x;n[1]=t.y;n[2]=t.z}}else if(t.r!==undefined){if(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b){e.uniform3f(this.addr,t.r,t.g,t.b);n[0]=t.r;n[1]=t.g;n[2]=t.b}}else{if(Pc(n,t))return;e.uniform3fv(this.addr,t);Ic(n,t)}}function Bc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w){e.uniform4f(this.addr,t.x,t.y,t.z,t.w);n[0]=t.x;n[1]=t.y;n[2]=t.z;n[3]=t.w}}else{if(Pc(n,t))return;e.uniform4fv(this.addr,t);Ic(n,t)}}function Uc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Pc(n,t))return;e.uniformMatrix2fv(this.addr,false,t);Ic(n,t)}else{if(Pc(n,i))return;Lc.set(i);e.uniformMatrix2fv(this.addr,false,Lc);Ic(n,i)}}function Hc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Pc(n,t))return;e.uniformMatrix3fv(this.addr,false,t);Ic(n,t)}else{if(Pc(n,i))return;Rc.set(i);e.uniformMatrix3fv(this.addr,false,Rc);Ic(n,i)}}function zc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Pc(n,t))return;e.uniformMatrix4fv(this.addr,false,t);Ic(n,t)}else{if(Pc(n,i))return;Ac.set(i);e.uniformMatrix4fv(this.addr,false,Ac);Ic(n,i)}}function Gc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1i(this.addr,t);n[0]=t}function kc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform2iv(this.addr,t);Ic(n,t)}function Vc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform3iv(this.addr,t);Ic(n,t)}function Wc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform4iv(this.addr,t);Ic(n,t)}function jc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1ui(this.addr,t);n[0]=t}function Xc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform2uiv(this.addr,t);Ic(n,t)}function qc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform3uiv(this.addr,t);Ic(n,t)}function Yc(e,t){const n=this.cache;if(Pc(n,t))return;e.uniform4uiv(this.addr,t);Ic(n,t)}function Zc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.safeSetTexture2D(t||bc,r)}function Jc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTexture3D(t||wc,r)}function Kc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.safeSetTextureCube(t||Ec,r)}function Qc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTexture2DArray(t||Mc,r)}function $c(e){switch(e){case 5126:return Nc;case 35664:return Fc;case 35665:return Oc;case 35666:return Bc;case 35674:return Uc;case 35675:return Hc;case 35676:return zc;case 5124:case 35670:return Gc;case 35667:case 35671:return kc;case 35668:case 35672:return Vc;case 35669:case 35673:return Wc;case 5125:return jc;case 36294:return Xc;case 36295:return qc;case 36296:return Yc;case 35678:case 36198:case 36298:case 36306:case 35682:return Zc;case 35679:case 36299:case 36307:return Jc;case 35680:case 36300:case 36308:case 36293:return Kc;case 36289:case 36303:case 36311:case 36292:return Qc}}function el(e,t){e.uniform1fv(this.addr,t)}function tl(e,t){const n=Cc(t,this.size,2);e.uniform2fv(this.addr,n)}function nl(e,t){const n=Cc(t,this.size,3);e.uniform3fv(this.addr,n)}function il(e,t){const n=Cc(t,this.size,4);e.uniform4fv(this.addr,n)}function rl(e,t){const n=Cc(t,this.size,4);e.uniformMatrix2fv(this.addr,false,n)}function sl(e,t){const n=Cc(t,this.size,9);e.uniformMatrix3fv(this.addr,false,n)}function ol(e,t){const n=Cc(t,this.size,16);e.uniformMatrix4fv(this.addr,false,n)}function al(e,t){e.uniform1iv(this.addr,t)}function cl(e,t){e.uniform2iv(this.addr,t)}function ll(e,t){e.uniform3iv(this.addr,t)}function ul(e,t){e.uniform4iv(this.addr,t)}function hl(e,t){e.uniform1uiv(this.addr,t)}function dl(e,t){e.uniform2uiv(this.addr,t)}function fl(e,t){e.uniform3uiv(this.addr,t)}function pl(e,t){e.uniform4uiv(this.addr,t)}function ml(e,t,n){const i=t.length;const r=Dc(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e){n.safeSetTexture2D(t[e]||bc,r[e])}}function gl(e,t,n){const i=t.length;const r=Dc(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e){n.safeSetTextureCube(t[e]||Ec,r[e])}}function yl(e){switch(e){case 5126:return el;case 35664:return tl;case 35665:return nl;case 35666:return il;case 35674:return rl;case 35675:return sl;case 35676:return ol;case 5124:case 35670:return al;case 35667:case 35671:return cl;case 35668:case 35672:return ll;case 35669:case 35673:return ul;case 5125:return hl;case 36294:return dl;case 36295:return fl;case 36296:return pl;case 35678:case 36198:case 36298:case 36306:case 35682:return ml;case 35680:case 36300:case 36308:case 36293:return gl}}function vl(e,t,n){this.id=e;this.addr=n;this.cache=[];this.setValue=$c(t.type)}function xl(e,t,n){this.id=e;this.addr=n;this.cache=[];this.size=t.size;this.setValue=yl(t.type)}xl.prototype.updateCache=function(e){const t=this.cache;if(e instanceof Float32Array&&t.length!==e.length){this.cache=new Float32Array(e.length)}Ic(t,e)};function _l(e){this.id=e;this.seq=[];this.map={}}_l.prototype.setValue=function(n,i,r){const s=this.seq;for(let e=0,t=s.length;e!==t;++e){const o=s[e];o.setValue(n,i[o.id],r)}};const bl=/(\w+)(\])?(\[|\.)?/g;function Ml(e,t){e.seq.push(t);e.map[t.id]=t}function wl(e,n,i){const r=e.name,s=r.length;bl.lastIndex=0;while(true){const o=bl.exec(r),a=bl.lastIndex;let t=o[1];const c=o[2]==="]",l=o[3];if(c)t=t|0;if(l===undefined||l==="["&&a+2===s){Ml(i,l===undefined?new vl(t,e,n):new xl(t,e,n));break}else{const u=i.map;let e=u[t];if(e===undefined){e=new _l(t);Ml(i,e)}i=e}}}function El(t,n){this.seq=[];this.map={};const i=t.getProgramParameter(n,t.ACTIVE_UNIFORMS);for(let e=0;e<i;++e){const r=t.getActiveUniform(n,e),s=t.getUniformLocation(n,r.name);wl(r,s,this)}}El.prototype.setValue=function(e,t,n,i){const r=this.map[t];if(r!==undefined)r.setValue(e,n,i)};El.prototype.setOptional=function(e,t,n){const i=t[n];if(i!==undefined)this.setValue(e,n,i)};El.upload=function(n,i,r,s){for(let e=0,t=i.length;e!==t;++e){const o=i[e],a=r[o.id];if(a.needsUpdate!==false){o.setValue(n,a.value,s)}}};El.seqWithValue=function(n,i){const r=[];for(let e=0,t=n.length;e!==t;++e){const s=n[e];if(s.id in i)r.push(s)}return r};function Tl(e,t,n){const i=e.createShader(t);e.shaderSource(i,n);e.compileShader(i);return i}let Sl=0;function Al(e){const t=e.split("\n");for(let e=0;e<t.length;e++){t[e]=e+1+": "+t[e]}return t.join("\n")}function Rl(e){switch(e){case Yt:return["Linear","( value )"];case Zt:return["sRGB","( value )"];case Kt:return["RGBE","( value )"];case $t:return["RGBM","( value, 7.0 )"];case en:return["RGBM","( value, 16.0 )"];case tn:return["RGBD","( value, 256.0 )"];case Jt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Qt:return["LogLuv","( value )"];default:console.warn("THREE.WebGLProgram: Unsupported encoding:",e);return["Linear","( value )"]}}function Ll(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS);const r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+Al(s)}function Cl(e,t){const n=Rl(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Pl(e,t){const n=Rl(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Il(e,t){let n;switch(t){case f:n="Linear";break;case p:n="Reinhard";break;case m:n="OptimizedCineon";break;case g:n="ACESFilmic";break;case y:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t);n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Dl(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Ol).join("\n")}function Nl(e){const t=[];for(const n in e){const i=e[n];if(i===false)continue;t.push("#define "+n+" "+i)}return t.join("\n")}function Fl(t,n){const i={};const r=t.getProgramParameter(n,t.ACTIVE_ATTRIBUTES);for(let e=0;e<r;e++){const s=t.getActiveAttrib(n,e);const o=s.name;i[o]=t.getAttribLocation(n,o)}return i}function Ol(e){return e!==""}function Bl(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ul(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Hl=/^[ \t]*#include +<([\w\d./]+)>/gm;function zl(e){return e.replace(Hl,Gl)}function Gl(e,t){const n=nc[t];if(n===undefined){throw new Error("Can not resolve #include <"+t+">")}return zl(n)}const kl=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;const Vl=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Wl(e){return e.replace(Vl,Xl).replace(kl,jl)}function jl(e,t,n,i){console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.");return Xl(e,t,n,i)}function Xl(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++){r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e)}return r}function ql(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";if(e.precision==="highp"){t+="\n#define HIGH_PRECISION"}else if(e.precision==="mediump"){t+="\n#define MEDIUM_PRECISION"}else if(e.precision==="lowp"){t+="\n#define LOW_PRECISION"}return t}function Yl(e){let t="SHADOWMAP_TYPE_BASIC";if(e.shadowMapType===c){t="SHADOWMAP_TYPE_PCF"}else if(e.shadowMapType===o){t="SHADOWMAP_TYPE_PCF_SOFT"}else if(e.shadowMapType===R){t="SHADOWMAP_TYPE_VSM"}return t}function Zl(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap){switch(e.envMapMode){case x:case _:t="ENVMAP_TYPE_CUBE";break;case C:case P:t="ENVMAP_TYPE_CUBE_UV";break}}return t}function Jl(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap){switch(e.envMapMode){case _:case P:t="ENVMAP_MODE_REFRACTION";break}}return t}function Kl(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap){switch(e.combine){case u:t="ENVMAP_BLENDING_MULTIPLY";break;case h:t="ENVMAP_BLENDING_MIX";break;case d:t="ENVMAP_BLENDING_ADD";break}}return t}function Ql(e,t,n,i){const r=e.getContext();const s=n.defines;let o=n.vertexShader;let a=n.fragmentShader;const c=Yl(n);const l=Zl(n);const u=Jl(n);const h=Kl(n);const d=e.gammaFactor>0?e.gammaFactor:1;const f=n.isWebGL2?"":Dl(n);const p=Nl(s);const m=r.createProgram();let g,y;let v=n.glslVersion?"#version "+n.glslVersion+"\n":"";if(n.isRawShaderMaterial){g=[p].filter(Ol).join("\n");if(g.length>0){g+="\n"}y=[f,p].filter(Ol).join("\n");if(y.length>0){y+="\n"}}else{g=[ql(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===false?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ol).join("\n");y=[f,ql(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Ve?"#define TONE_MAPPING":"",n.toneMapping!==Ve?nc["tonemapping_pars_fragment"]:"",n.toneMapping!==Ve?Il("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",nc["encodings_pars_fragment"],n.map?Cl("mapTexelToLinear",n.mapEncoding):"",n.matcap?Cl("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Cl("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Cl("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Cl("lightMapTexelToLinear",n.lightMapEncoding):"",Pl("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ol).join("\n")}o=zl(o);o=Bl(o,n);o=Ul(o,n);a=zl(a);a=Bl(a,n);a=Ul(a,n);o=Wl(o);a=Wl(a);if(n.isWebGL2&&n.isRawShaderMaterial!==true){v="#version 300 es\n";g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g;y=["#define varying in",n.glslVersion===Dn?"":"out highp vec4 pc_fragColor;",n.glslVersion===Dn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y}const x=v+g+o;const _=v+y+a;const b=Tl(r,r.VERTEX_SHADER,x);const M=Tl(r,r.FRAGMENT_SHADER,_);r.attachShader(m,b);r.attachShader(m,M);if(n.index0AttributeName!==undefined){r.bindAttribLocation(m,0,n.index0AttributeName)}else if(n.morphTargets===true){r.bindAttribLocation(m,0,"position")}r.linkProgram(m);if(e.debug.checkShaderErrors){const T=r.getProgramInfoLog(m).trim();const S=r.getShaderInfoLog(b).trim();const A=r.getShaderInfoLog(M).trim();let e=true;let t=true;if(r.getProgramParameter(m,r.LINK_STATUS)===false){e=false;const R=Ll(r,b,"vertex");const L=Ll(r,M,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(m,r.VALIDATE_STATUS),"gl.getProgramInfoLog",T,R,L)}else if(T!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",T)}else if(S===""||A===""){t=false}if(t){this.diagnostics={runnable:e,programLog:T,vertexShader:{log:S,prefix:g},fragmentShader:{log:A,prefix:y}}}}r.deleteShader(b);r.deleteShader(M);let w;this.getUniforms=function(){if(w===undefined){w=new El(r,m)}return w};let E;this.getAttributes=function(){if(E===undefined){E=Fl(r,m)}return E};this.destroy=function(){i.releaseStatesOfProgram(this);r.deleteProgram(m);this.program=undefined};this.name=n.shaderName;this.id=Sl++;this.cacheKey=t;this.usedTimes=1;this.program=m;this.vertexShader=b;this.fragmentShader=M;return this}function $l(m,g,y,v,t,x){const s=[];const _=v.isWebGL2;const b=v.logarithmicDepthBuffer;const M=v.floatVertexTextures;const o=v.maxVertexUniforms;const w=v.vertexTextures;let E=v.precision;const T={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};const i=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function S(e){const t=e.skeleton;const n=t.bones;if(M){return 1024}else{const i=o;const r=Math.floor((i-20)/4);const s=Math.min(r,n.length);if(s<n.length){console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+s+".");return 0}return s}}function A(e){let t;if(e&&e.isTexture){t=e.encoding}else if(e&&e.isWebGLRenderTarget){console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");t=e.texture.encoding}else{t=Yt}return t}function e(e,t,n,i,r){const s=i.fog;const o=e.isMeshStandardMaterial?i.environment:null;const a=g.get(e.envMap||o);const c=T[e.type];const l=r.isSkinnedMesh?S(r):0;if(e.precision!==null){E=v.getMaxPrecision(e.precision);if(E!==e.precision){console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",E,"instead.")}}let u,h;if(c){const p=rc[c];u=p.vertexShader;h=p.fragmentShader}else{u=e.vertexShader;h=e.fragmentShader}const d=m.getRenderTarget();const f={isWebGL2:_,shaderID:c,shaderName:e.type,vertexShader:u,fragmentShader:h,defines:e.defines,isRawShaderMaterial:e.isRawShaderMaterial===true,glslVersion:e.glslVersion,precision:E,instancing:r.isInstancedMesh===true,instancingColor:r.isInstancedMesh===true&&r.instanceColor!==null,supportsVertexTextures:w,outputEncoding:d!==null?A(d.texture):m.outputEncoding,map:!!e.map,mapEncoding:A(e.map),matcap:!!e.matcap,matcapEncoding:A(e.matcap),envMap:!!a,envMapMode:a&&a.mapping,envMapEncoding:A(a),envMapCubeUV:!!a&&(a.mapping===C||a.mapping===P),lightMap:!!e.lightMap,lightMapEncoding:A(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:A(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===on,tangentSpaceNormalMap:e.normalMapType===sn,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmissionMap:!!e.transmissionMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexAlphas:e.vertexColors===true&&r.geometry.attributes.color&&r.geometry.attributes.color.itemSize===4,vertexUvs:!!e.map||!!e.bumpMap||!!e.normalMap||!!e.specularMap||!!e.alphaMap||!!e.emissiveMap||!!e.roughnessMap||!!e.metalnessMap||!!e.clearcoatMap||!!e.clearcoatRoughnessMap||!!e.clearcoatNormalMap||!!e.displacementMap||!!e.transmissionMap,uvsVertexOnly:!(!!e.map||!!e.bumpMap||!!e.normalMap||!!e.specularMap||!!e.alphaMap||!!e.emissiveMap||!!e.roughnessMap||!!e.metalnessMap||!!e.clearcoatNormalMap||!!e.transmissionMap)&&!!e.displacementMap,fog:!!s,useFog:e.fog,fogExp2:s&&s.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:b,skinning:e.skinning&&l>0,maxBones:l,useVertexTexture:M,morphTargets:e.morphTargets,morphNormals:e.morphNormals,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:x.numPlanes,numClipIntersection:x.numIntersection,dithering:e.dithering,shadowMapEnabled:m.shadowMap.enabled&&n.length>0,shadowMapType:m.shadowMap.type,toneMapping:e.toneMapped?m.toneMapping:Ve,physicallyCorrectLights:m.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===de,flipSided:e.side===he,depthPacking:e.depthPacking!==undefined?e.depthPacking:false,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:_||y.has("EXT_frag_depth"),rendererExtensionDrawBuffers:_||y.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:_||y.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()};return f}function n(t){const n=[];if(t.shaderID){n.push(t.shaderID)}else{n.push(t.fragmentShader);n.push(t.vertexShader)}if(t.defines!==undefined){for(const e in t.defines){n.push(e);n.push(t.defines[e])}}if(t.isRawShaderMaterial===false){for(let e=0;e<i.length;e++){n.push(t[i[e]])}n.push(m.outputEncoding);n.push(m.gammaFactor)}n.push(t.customProgramCacheKey);return n.join()}function r(e){const t=T[e.type];let n;if(t){const i=rc[t];n=gs.clone(i.uniforms)}else{n=e.uniforms}return n}function a(e,n){let i;for(let e=0,t=s.length;e<t;e++){const r=s[e];if(r.cacheKey===n){i=r;++i.usedTimes;break}}if(i===undefined){i=new Ql(m,n,e,t);s.push(i)}return i}function c(e){if(--e.usedTimes===0){const t=s.indexOf(e);s[t]=s[s.length-1];s.pop();e.destroy()}}return{getParameters:e,getProgramCacheKey:n,getUniforms:r,acquireProgram:a,releaseProgram:c,programs:s}}function eu(){let i=new WeakMap;function e(e){let t=i.get(e);if(t===undefined){t={};i.set(e,t)}return t}function t(e){i.delete(e)}function n(e,t,n){i.get(e)[t]=n}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function tu(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.program!==t.program){return e.program.id-t.program.id}else if(e.material.id!==t.material.id){return e.material.id-t.material.id}else if(e.z!==t.z){return e.z-t.z}else{return e.id-t.id}}function nu(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.z!==t.z){return t.z-e.z}else{return e.id-t.id}}function iu(c){const l=[];let u=0;const a=[];const h=[];const d={id:-1};function e(){u=0;a.length=0;h.length=0}function f(e,t,n,i,r,s){let o=l[u];const a=c.get(n);if(o===undefined){o={id:e.id,object:e,geometry:t,material:n,program:a.program||d,groupOrder:i,renderOrder:e.renderOrder,z:r,group:s};l[u]=o}else{o.id=e.id;o.object=e;o.geometry=t;o.material=n;o.program=a.program||d;o.groupOrder=i;o.renderOrder=e.renderOrder;o.z=r;o.group=s}u++;return o}function t(e,t,n,i,r,s){const o=f(e,t,n,i,r,s);(n.transparent===true?h:a).push(o)}function n(e,t,n,i,r,s){const o=f(e,t,n,i,r,s);(n.transparent===true?h:a).unshift(o)}function i(e,t){if(a.length>1)a.sort(e||tu);if(h.length>1)h.sort(t||nu)}function r(){for(let e=u,t=l.length;e<t;e++){const n=l[e];if(n.id===null)break;n.id=null;n.object=null;n.geometry=null;n.material=null;n.program=null;n.group=null}}return{opaque:a,transparent:h,init:e,push:t,unshift:n,finish:r,sort:i}}function ru(i){let r=new WeakMap;function e(e,t){let n;if(r.has(e)===false){n=new iu(i);r.set(e,[n])}else{if(t>=r.get(e).length){n=new iu(i);r.get(e).push(n)}else{n=r.get(e)[t]}}return n}function t(){r=new WeakMap}return{get:e,dispose:t}}function su(){const n={};return{get:function(e){if(n[e.id]!==undefined){return n[e.id]}let t;switch(e.type){case"DirectionalLight":t={direction:new Zn,color:new br};break;case"SpotLight":t={position:new Zn,direction:new Zn,color:new br,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Zn,color:new br,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Zn,skyColor:new br,groundColor:new br};break;case"RectAreaLight":t={color:new br,position:new Zn,halfWidth:new Zn,halfHeight:new Zn};break}n[e.id]=t;return t}}}function ou(){const n={};return{get:function(e){if(n[e.id]!==undefined){return n[e.id]}let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Un,shadowCameraNear:1,shadowCameraFar:1e3};break}n[e.id]=t;return t}}}let au=0;function cu(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function lu(t,M){const w=new su;const E=ou();const T={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)T.probe.push(new Zn);const h=new Zn;const d=new Si;const f=new Si;function e(n){let i=0,r=0,s=0;for(let e=0;e<9;e++)T.probe[e].set(0,0,0);let o=0;let a=0;let c=0;let l=0;let u=0;let h=0;let d=0;let f=0;n.sort(cu);for(let e=0,t=n.length;e<t;e++){const p=n[e];const m=p.color;const g=p.intensity;const y=p.distance;const v=p.shadow&&p.shadow.map?p.shadow.map.texture:null;if(p.isAmbientLight){i+=m.r*g;r+=m.g*g;s+=m.b*g}else if(p.isLightProbe){for(let e=0;e<9;e++){T.probe[e].addScaledVector(p.sh.coefficients[e],g)}}else if(p.isDirectionalLight){const x=w.get(p);x.color.copy(p.color).multiplyScalar(p.intensity);if(p.castShadow){const _=p.shadow;const b=E.get(p);b.shadowBias=_.bias;b.shadowNormalBias=_.normalBias;b.shadowRadius=_.radius;b.shadowMapSize=_.mapSize;T.directionalShadow[o]=b;T.directionalShadowMap[o]=v;T.directionalShadowMatrix[o]=p.shadow.matrix;h++}T.directional[o]=x;o++}else if(p.isSpotLight){const x=w.get(p);x.position.setFromMatrixPosition(p.matrixWorld);x.color.copy(m).multiplyScalar(g);x.distance=y;x.coneCos=Math.cos(p.angle);x.penumbraCos=Math.cos(p.angle*(1-p.penumbra));x.decay=p.decay;if(p.castShadow){const _=p.shadow;const b=E.get(p);b.shadowBias=_.bias;b.shadowNormalBias=_.normalBias;b.shadowRadius=_.radius;b.shadowMapSize=_.mapSize;T.spotShadow[c]=b;T.spotShadowMap[c]=v;T.spotShadowMatrix[c]=p.shadow.matrix;f++}T.spot[c]=x;c++}else if(p.isRectAreaLight){const x=w.get(p);x.color.copy(m).multiplyScalar(g);x.halfWidth.set(p.width*.5,0,0);x.halfHeight.set(0,p.height*.5,0);T.rectArea[l]=x;l++}else if(p.isPointLight){const x=w.get(p);x.color.copy(p.color).multiplyScalar(p.intensity);x.distance=p.distance;x.decay=p.decay;if(p.castShadow){const _=p.shadow;const b=E.get(p);b.shadowBias=_.bias;b.shadowNormalBias=_.normalBias;b.shadowRadius=_.radius;b.shadowMapSize=_.mapSize;b.shadowCameraNear=_.camera.near;b.shadowCameraFar=_.camera.far;T.pointShadow[a]=b;T.pointShadowMap[a]=v;T.pointShadowMatrix[a]=p.shadow.matrix;d++}T.point[a]=x;a++}else if(p.isHemisphereLight){const x=w.get(p);x.skyColor.copy(p.color).multiplyScalar(g);x.groundColor.copy(p.groundColor).multiplyScalar(g);T.hemi[u]=x;u++}}if(l>0){if(M.isWebGL2){T.rectAreaLTC1=ic.LTC_FLOAT_1;T.rectAreaLTC2=ic.LTC_FLOAT_2}else{if(t.has("OES_texture_float_linear")===true){T.rectAreaLTC1=ic.LTC_FLOAT_1;T.rectAreaLTC2=ic.LTC_FLOAT_2}else if(t.has("OES_texture_half_float_linear")===true){T.rectAreaLTC1=ic.LTC_HALF_1;T.rectAreaLTC2=ic.LTC_HALF_2}else{console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")}}}T.ambient[0]=i;T.ambient[1]=r;T.ambient[2]=s;const e=T.hash;if(e.directionalLength!==o||e.pointLength!==a||e.spotLength!==c||e.rectAreaLength!==l||e.hemiLength!==u||e.numDirectionalShadows!==h||e.numPointShadows!==d||e.numSpotShadows!==f){T.directional.length=o;T.spot.length=c;T.rectArea.length=l;T.point.length=a;T.hemi.length=u;T.directionalShadow.length=h;T.directionalShadowMap.length=h;T.pointShadow.length=d;T.pointShadowMap.length=d;T.spotShadow.length=f;T.spotShadowMap.length=f;T.directionalShadowMatrix.length=h;T.pointShadowMatrix.length=d;T.spotShadowMatrix.length=f;e.directionalLength=o;e.pointLength=a;e.spotLength=c;e.rectAreaLength=l;e.hemiLength=u;e.numDirectionalShadows=h;e.numPointShadows=d;e.numSpotShadows=f;T.version=au++}}function n(n,e){let i=0;let r=0;let s=0;let o=0;let a=0;const c=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){const l=n[e];if(l.isDirectionalLight){const u=T.directional[i];u.direction.setFromMatrixPosition(l.matrixWorld);h.setFromMatrixPosition(l.target.matrixWorld);u.direction.sub(h);u.direction.transformDirection(c);i++}else if(l.isSpotLight){const u=T.spot[s];u.position.setFromMatrixPosition(l.matrixWorld);u.position.applyMatrix4(c);u.direction.setFromMatrixPosition(l.matrixWorld);h.setFromMatrixPosition(l.target.matrixWorld);u.direction.sub(h);u.direction.transformDirection(c);s++}else if(l.isRectAreaLight){const u=T.rectArea[o];u.position.setFromMatrixPosition(l.matrixWorld);u.position.applyMatrix4(c);f.identity();d.copy(l.matrixWorld);d.premultiply(c);f.extractRotation(d);u.halfWidth.set(l.width*.5,0,0);u.halfHeight.set(0,l.height*.5,0);u.halfWidth.applyMatrix4(f);u.halfHeight.applyMatrix4(f);o++}else if(l.isPointLight){const u=T.point[r];u.position.setFromMatrixPosition(l.matrixWorld);u.position.applyMatrix4(c);r++}else if(l.isHemisphereLight){const u=T.hemi[a];u.direction.setFromMatrixPosition(l.matrixWorld);u.direction.transformDirection(c);u.direction.normalize();a++}}}return{setup:e,setupView:n,state:T}}function uu(e,t){const n=new lu(e,t);const i=[];const r=[];function s(){i.length=0;r.length=0}function o(e){i.push(e)}function a(e){r.push(e)}function c(){n.setup(i)}function l(e){n.setupView(i,e)}const u={lightsArray:i,shadowsArray:r,lights:n};return{init:s,state:u,setupLights:c,setupLightsView:l,pushLight:o,pushShadow:a}}function hu(i,r){let s=new WeakMap;function e(e,t=0){let n;if(s.has(e)===false){n=new uu(i,r);s.set(e,[n])}else{if(t>=s.get(e).length){n=new uu(i,r);s.get(e).push(n)}else{n=s.get(e)[t]}}return n}function t(){s=new WeakMap}return{get:e,dispose:t}}class du extends pr{constructor(e){super();this.type="MeshDepthMaterial";this.depthPacking=nn;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(e)}copy(e){super.copy(e);this.depthPacking=e.depthPacking;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;return this}}du.prototype.isMeshDepthMaterial=true;class fu extends pr{constructor(e){super();this.type="MeshDistanceMaterial";this.referencePosition=new Zn;this.nearDistance=1;this.farDistance=1e3;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(e)}copy(e){super.copy(e);this.referencePosition.copy(e.referencePosition);this.nearDistance=e.nearDistance;this.farDistance=e.farDistance;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;return this}}fu.prototype.isMeshDistanceMaterial=true;var pu="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";var mu="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function gu(p,m,e){let g=new Cs;const f=new Un,y=new Un,v=new jn,s=[],o=[],x={},_=e.maxTextureSize;const b={0:he,1:L,2:de};const i=new xs({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Un},radius:{value:4}},vertexShader:mu,fragmentShader:pu});const r=i.clone();r.defines.HORIZONTAL_PASS=1;const t=new Xr;t.setAttribute("position",new Tr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const a=new us(t,i);const M=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=c;this.render=function(n,i,r){if(M.enabled===false)return;if(M.autoUpdate===false&&M.needsUpdate===false)return;if(n.length===0)return;const e=p.getRenderTarget();const t=p.getActiveCubeFace();const s=p.getActiveMipmapLevel();const o=p.state;o.setBlending(fe);o.buffers.color.setClear(1,1,1,1);o.buffers.depth.setTest(true);o.setScissorTest(false);for(let e=0,t=n.length;e<t;e++){const a=n[e];const c=a.shadow;if(c===undefined){console.warn("THREE.WebGLShadowMap:",a,"has no shadow.");continue}if(c.autoUpdate===false&&c.needsUpdate===false)continue;f.copy(c.mapSize);const l=c.getFrameExtents();f.multiply(l);y.copy(c.mapSize);if(f.x>_||f.y>_){if(f.x>_){y.x=Math.floor(_/l.x);f.x=y.x*l.x;c.mapSize.x=y.x}if(f.y>_){y.y=Math.floor(_/l.y);f.y=y.y*l.y;c.mapSize.y=y.y}}if(c.map===null&&!c.isPointLightShadow&&this.type===R){const h={minFilter:se,magFilter:se,format:Ke};c.map=new Xn(f.x,f.y,h);c.map.texture.name=a.name+".shadowMap";c.mapPass=new Xn(f.x,f.y,h);c.camera.updateProjectionMatrix()}if(c.map===null){const h={minFilter:ne,magFilter:ne,format:Ke};c.map=new Xn(f.x,f.y,h);c.map.texture.name=a.name+".shadowMap";c.camera.updateProjectionMatrix()}p.setRenderTarget(c.map);p.clear();const u=c.getViewportCount();for(let e=0;e<u;e++){const d=c.getViewport(e);v.set(y.x*d.x,y.y*d.y,y.x*d.z,y.y*d.w);o.viewport(v);c.updateMatrices(a,e);g=c.getFrustum();A(i,r,c.camera,a,this.type)}if(!c.isPointLightShadow&&this.type===R){w(c,r)}c.needsUpdate=false}M.needsUpdate=false;p.setRenderTarget(e,t,s)};function w(e,t){const n=m.update(a);i.uniforms.shadow_pass.value=e.map.texture;i.uniforms.resolution.value=e.mapSize;i.uniforms.radius.value=e.radius;p.setRenderTarget(e.mapPass);p.clear();p.renderBufferDirect(t,null,n,i,a,null);r.uniforms.shadow_pass.value=e.mapPass.texture;r.uniforms.resolution.value=e.mapSize;r.uniforms.radius.value=e.radius;p.setRenderTarget(e.map);p.clear();p.renderBufferDirect(t,null,n,r,a,null)}function E(e,t,n){const i=e<<0|t<<1|n<<2;let r=s[i];if(r===undefined){r=new du({depthPacking:rn,morphTargets:e,skinning:t});s[i]=r}return r}function T(e,t,n){const i=e<<0|t<<1|n<<2;let r=o[i];if(r===undefined){r=new fu({morphTargets:e,skinning:t});o[i]=r}return r}function S(n,i,r,e,t,s,o){let a=null;let c=E;let l=n.customDepthMaterial;if(e.isPointLight===true){c=T;l=n.customDistanceMaterial}if(l===undefined){let e=false;if(r.morphTargets===true){e=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0}let t=false;if(n.isSkinnedMesh===true){if(r.skinning===true){t=true}else{console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",n)}}const u=n.isInstancedMesh===true;a=c(e,t,u)}else{a=l}if(p.localClippingEnabled&&r.clipShadows===true&&r.clippingPlanes.length!==0){const h=a.uuid,d=r.uuid;let e=x[h];if(e===undefined){e={};x[h]=e}let t=e[d];if(t===undefined){t=a.clone();e[d]=t}a=t}a.visible=r.visible;a.wireframe=r.wireframe;if(o===R){a.side=r.shadowSide!==null?r.shadowSide:r.side}else{a.side=r.shadowSide!==null?r.shadowSide:b[r.side]}a.clipShadows=r.clipShadows;a.clippingPlanes=r.clippingPlanes;a.clipIntersection=r.clipIntersection;a.wireframeLinewidth=r.wireframeLinewidth;a.linewidth=r.linewidth;if(e.isPointLight===true&&a.isMeshDistanceMaterial===true){a.referencePosition.setFromMatrixPosition(e.matrixWorld);a.nearDistance=t;a.farDistance=s}return a}function A(n,i,r,s,o){if(n.visible===false)return;const e=n.layers.test(i.layers);if(e&&(n.isMesh||n.isLine||n.isPoints)){if((n.castShadow||n.receiveShadow&&o===R)&&(!n.frustumCulled||g.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const c=m.update(n);const l=n.material;if(Array.isArray(l)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const h=u[e];const d=l[h.materialIndex];if(d&&d.visible){const f=S(n,c,d,s,r.near,r.far,o);p.renderBufferDirect(r,null,c,f,n,h)}}}else if(l.visible){const f=S(n,c,l,s,r.near,r.far,o);p.renderBufferDirect(r,null,c,f,n,null)}}}const a=n.children;for(let e=0,t=a.length;e<t;e++){A(a[e],i,r,s,o)}}}function yu(u,e,t){const n=t.isWebGL2;function i(){let t=false;const s=new jn;let n=null;const o=new jn(0,0,0,0);return{setMask:function(e){if(n!==e&&!t){u.colorMask(e,e,e,e);n=e}},setLocked:function(e){t=e},setClear:function(e,t,n,i,r){if(r===true){e*=i;t*=i;n*=i}s.set(e,t,n,i);if(o.equals(s)===false){u.clearColor(e,t,n,i);o.copy(s)}},reset:function(){t=false;n=null;o.set(-1,0,0,0)}}}function r(){let t=false;let n=null;let i=null;let r=null;return{setTest:function(e){if(e){U(u.DEPTH_TEST)}else{H(u.DEPTH_TEST)}},setMask:function(e){if(n!==e&&!t){u.depthMask(e);n=e}},setFunc:function(e){if(i!==e){if(e){switch(e){case Fe:u.depthFunc(u.NEVER);break;case Oe:u.depthFunc(u.ALWAYS);break;case Be:u.depthFunc(u.LESS);break;case Ue:u.depthFunc(u.LEQUAL);break;case He:u.depthFunc(u.EQUAL);break;case ze:u.depthFunc(u.GEQUAL);break;case Ge:u.depthFunc(u.GREATER);break;case ke:u.depthFunc(u.NOTEQUAL);break;default:u.depthFunc(u.LEQUAL)}}else{u.depthFunc(u.LEQUAL)}i=e}},setLocked:function(e){t=e},setClear:function(e){if(r!==e){u.clearDepth(e);r=e}},reset:function(){t=false;n=null;i=null;r=null}}}function s(){let t=false;let n=null;let i=null;let r=null;let s=null;let o=null;let a=null;let c=null;let l=null;return{setTest:function(e){if(!t){if(e){U(u.STENCIL_TEST)}else{H(u.STENCIL_TEST)}}},setMask:function(e){if(n!==e&&!t){u.stencilMask(e);n=e}},setFunc:function(e,t,n){if(i!==e||r!==t||s!==n){u.stencilFunc(e,t,n);i=e;r=t;s=n}},setOp:function(e,t,n){if(o!==e||a!==t||c!==n){u.stencilOp(e,t,n);o=e;a=t;c=n}},setLocked:function(e){t=e},setClear:function(e){if(l!==e){u.clearStencil(e);l=e}},reset:function(){t=false;n=null;i=null;r=null;s=null;o=null;a=null;c=null;l=null}}}const o=new i;const a=new r;const c=new s;let l={};let h=null;let d={};let f=null;let p=false;let m=null;let g=null;let y=null;let v=null;let x=null;let _=null;let b=null;let M=false;let w=null;let E=null;let T=null;let S=null;let A=null;const R=u.getParameter(u.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let L=false;let C=0;const P=u.getParameter(u.VERSION);if(P.indexOf("WebGL")!==-1){C=parseFloat(/^WebGL (\d)/.exec(P)[1]);L=C>=1}else if(P.indexOf("OpenGL ES")!==-1){C=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]);L=C>=2}let I=null;let D={};const N=new jn(0,0,u.canvas.width,u.canvas.height);const F=new jn(0,0,u.canvas.width,u.canvas.height);function O(e,t,n){const i=new Uint8Array(4);const r=u.createTexture();u.bindTexture(e,r);u.texParameteri(e,u.TEXTURE_MIN_FILTER,u.NEAREST);u.texParameteri(e,u.TEXTURE_MAG_FILTER,u.NEAREST);for(let e=0;e<n;e++){u.texImage2D(t+e,0,u.RGBA,1,1,0,u.RGBA,u.UNSIGNED_BYTE,i)}return r}const B={};B[u.TEXTURE_2D]=O(u.TEXTURE_2D,u.TEXTURE_2D,1);B[u.TEXTURE_CUBE_MAP]=O(u.TEXTURE_CUBE_MAP,u.TEXTURE_CUBE_MAP_POSITIVE_X,6);o.setClear(0,0,0,1);a.setClear(1);c.setClear(0);U(u.DEPTH_TEST);a.setFunc(Ue);q(false);Y(le);U(u.CULL_FACE);j(fe);function U(e){if(l[e]!==true){u.enable(e);l[e]=true}}function H(e){if(l[e]!==false){u.disable(e);l[e]=false}}function z(e){if(e!==h){u.bindFramebuffer(u.FRAMEBUFFER,e);h=e}}function G(e,t){if(t===null&&h!==null)t=h;if(d[e]!==t){u.bindFramebuffer(e,t);d[e]=t;if(n){if(e===u.DRAW_FRAMEBUFFER){d[u.FRAMEBUFFER]=t}if(e===u.FRAMEBUFFER){d[u.DRAW_FRAMEBUFFER]=t}}}}function k(e){if(f!==e){u.useProgram(e);f=e;return true}return false}const V={[xe]:u.FUNC_ADD,[_e]:u.FUNC_SUBTRACT,[be]:u.FUNC_REVERSE_SUBTRACT};if(n){V[Me]=u.MIN;V[we]=u.MAX}else{const ae=e.get("EXT_blend_minmax");if(ae!==null){V[Me]=ae.MIN_EXT;V[we]=ae.MAX_EXT}}const W={[Ee]:u.ZERO,[Te]:u.ONE,[Se]:u.SRC_COLOR,[Re]:u.SRC_ALPHA,[Ne]:u.SRC_ALPHA_SATURATE,[Ie]:u.DST_COLOR,[Ce]:u.DST_ALPHA,[Ae]:u.ONE_MINUS_SRC_COLOR,[Le]:u.ONE_MINUS_SRC_ALPHA,[De]:u.ONE_MINUS_DST_COLOR,[Pe]:u.ONE_MINUS_DST_ALPHA};function j(e,t,n,i,r,s,o,a){if(e===fe){if(p===true){H(u.BLEND);p=false}return}if(p===false){U(u.BLEND);p=true}if(e!==ve){if(e!==m||a!==M){if(g!==xe||x!==xe){u.blendEquation(u.FUNC_ADD);g=xe;x=xe}if(a){switch(e){case pe:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case me:u.blendFunc(u.ONE,u.ONE);break;case ge:u.blendFuncSeparate(u.ZERO,u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ONE_MINUS_SRC_ALPHA);break;case ye:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}}else{switch(e){case pe:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case me:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case ge:u.blendFunc(u.ZERO,u.ONE_MINUS_SRC_COLOR);break;case ye:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}}y=null;v=null;_=null;b=null;m=e;M=a}return}r=r||t;s=s||n;o=o||i;if(t!==g||r!==x){u.blendEquationSeparate(V[t],V[r]);g=t;x=r}if(n!==y||i!==v||s!==_||o!==b){u.blendFuncSeparate(W[n],W[i],W[s],W[o]);y=n;v=i;_=s;b=o}m=e;M=null}function X(e,t){e.side===de?H(u.CULL_FACE):U(u.CULL_FACE);let n=e.side===he;if(t)n=!n;q(n);e.blending===pe&&e.transparent===false?j(fe):j(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha);a.setFunc(e.depthFunc);a.setTest(e.depthTest);a.setMask(e.depthWrite);o.setMask(e.colorWrite);const i=e.stencilWrite;c.setTest(i);if(i){c.setMask(e.stencilWriteMask);c.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask);c.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)}J(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits);e.alphaToCoverage===true?U(u.SAMPLE_ALPHA_TO_COVERAGE):H(u.SAMPLE_ALPHA_TO_COVERAGE)}function q(e){if(w!==e){if(e){u.frontFace(u.CW)}else{u.frontFace(u.CCW)}w=e}}function Y(e){if(e!==ce){U(u.CULL_FACE);if(e!==E){if(e===le){u.cullFace(u.BACK)}else if(e===ue){u.cullFace(u.FRONT)}else{u.cullFace(u.FRONT_AND_BACK)}}}else{H(u.CULL_FACE)}E=e}function Z(e){if(e!==T){if(L)u.lineWidth(e);T=e}}function J(e,t,n){if(e){U(u.POLYGON_OFFSET_FILL);if(S!==t||A!==n){u.polygonOffset(t,n);S=t;A=n}}else{H(u.POLYGON_OFFSET_FILL)}}function K(e){if(e){U(u.SCISSOR_TEST)}else{H(u.SCISSOR_TEST)}}function Q(e){if(e===undefined)e=u.TEXTURE0+R-1;if(I!==e){u.activeTexture(e);I=e}}function $(e,t){if(I===null){Q()}let n=D[I];if(n===undefined){n={type:undefined,texture:undefined};D[I]=n}if(n.type!==e||n.texture!==t){u.bindTexture(e,t||B[e]);n.type=e;n.texture=t}}function ee(){const e=D[I];if(e!==undefined&&e.type!==undefined){u.bindTexture(e.type,null);e.type=undefined;e.texture=undefined}}function te(){try{u.compressedTexImage2D.apply(u,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function ne(){try{u.texImage2D.apply(u,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function ie(){try{u.texImage3D.apply(u,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function re(e){if(N.equals(e)===false){u.scissor(e.x,e.y,e.z,e.w);N.copy(e)}}function se(e){if(F.equals(e)===false){u.viewport(e.x,e.y,e.z,e.w);F.copy(e)}}function oe(){u.disable(u.BLEND);u.disable(u.CULL_FACE);u.disable(u.DEPTH_TEST);u.disable(u.POLYGON_OFFSET_FILL);u.disable(u.SCISSOR_TEST);u.disable(u.STENCIL_TEST);u.disable(u.SAMPLE_ALPHA_TO_COVERAGE);u.blendEquation(u.FUNC_ADD);u.blendFunc(u.ONE,u.ZERO);u.blendFuncSeparate(u.ONE,u.ZERO,u.ONE,u.ZERO);u.colorMask(true,true,true,true);u.clearColor(0,0,0,0);u.depthMask(true);u.depthFunc(u.LESS);u.clearDepth(1);u.stencilMask(4294967295);u.stencilFunc(u.ALWAYS,0,4294967295);u.stencilOp(u.KEEP,u.KEEP,u.KEEP);u.clearStencil(0);u.cullFace(u.BACK);u.frontFace(u.CCW);u.polygonOffset(0,0);u.activeTexture(u.TEXTURE0);u.bindFramebuffer(u.FRAMEBUFFER,null);if(n===true){u.bindFramebuffer(u.DRAW_FRAMEBUFFER,null);u.bindFramebuffer(u.READ_FRAMEBUFFER,null)}u.useProgram(null);u.lineWidth(1);u.scissor(0,0,u.canvas.width,u.canvas.height);u.viewport(0,0,u.canvas.width,u.canvas.height);l={};I=null;D={};h=null;d={};f=null;p=false;m=null;g=null;y=null;v=null;x=null;_=null;b=null;M=false;w=null;E=null;T=null;S=null;A=null;N.set(0,0,u.canvas.width,u.canvas.height);F.set(0,0,u.canvas.width,u.canvas.height);o.reset();a.reset();c.reset()}return{buffers:{color:o,depth:a,stencil:c},enable:U,disable:H,bindFramebuffer:G,bindXRFramebuffer:z,useProgram:k,setBlending:j,setMaterial:X,setFlipSided:q,setCullFace:Y,setLineWidth:Z,setPolygonOffset:J,setScissorTest:K,activeTexture:Q,bindTexture:$,unbindTexture:ee,compressedTexImage2D:te,texImage2D:ne,texImage3D:ie,scissor:re,viewport:se,reset:oe}}function vu(p,r,m,f,s,g,y){const v=s.isWebGL2;const t=s.maxTextures;const x=s.maxCubemapSize;const d=s.maxTextureSize;const n=s.maxSamples;const i=new WeakMap;let u;let o=false;try{o=typeof OffscreenCanvas!=="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(e){}function h(e,t){return o?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function _(e,t,n,i){let r=1;if(e.width>i||e.height>i){r=i/Math.max(e.width,e.height)}if(r<1||t===true){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){const s=t?Bn.floorPowerOfTwo:Math.floor;const o=s(r*e.width);const a=s(r*e.height);if(u===undefined)u=h(o,a);const c=n?h(o,a):u;c.width=o;c.height=a;const l=c.getContext("2d");l.drawImage(e,0,0,o,a);console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+a+").");return c}else{if("data"in e){console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}}return e}function b(e){return Bn.isPowerOfTwo(e.width)&&Bn.isPowerOfTwo(e.height)}function M(e){if(v)return false;return e.wrapS!==ee||e.wrapT!==ee||e.minFilter!==ne&&e.minFilter!==se}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==ne&&e.minFilter!==se}function E(e,t,n,i){p.generateMipmap(e);const r=f.get(t);r.__maxMipLevel=Math.log2(Math.max(n,i))}function T(e,t,n){if(v===false)return t;if(e!==null){if(p[e]!==undefined)return p[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let i=t;if(t===p.RED){if(n===p.FLOAT)i=p.R32F;if(n===p.HALF_FLOAT)i=p.R16F;if(n===p.UNSIGNED_BYTE)i=p.R8}if(t===p.RGB){if(n===p.FLOAT)i=p.RGB32F;if(n===p.HALF_FLOAT)i=p.RGB16F;if(n===p.UNSIGNED_BYTE)i=p.RGB8}if(t===p.RGBA){if(n===p.FLOAT)i=p.RGBA32F;if(n===p.HALF_FLOAT)i=p.RGBA16F;if(n===p.UNSIGNED_BYTE)i=p.RGBA8}if(i===p.R16F||i===p.R32F||i===p.RGBA16F||i===p.RGBA32F){r.get("EXT_color_buffer_float")}return i}function a(e){if(e===ne||e===ie||e===re){return p.NEAREST}return p.LINEAR}function c(e){const t=e.target;t.removeEventListener("dispose",c);l(t);if(t.isVideoTexture){i.delete(t)}y.memory.textures--}function S(e){const t=e.target;t.removeEventListener("dispose",S);A(t);y.memory.textures--}function l(e){const t=f.get(e);if(t.__webglInit===undefined)return;p.deleteTexture(t.__webglTexture);f.remove(e)}function A(e){const t=e.texture;const n=f.get(e);const i=f.get(t);if(!e)return;if(i.__webglTexture!==undefined){p.deleteTexture(i.__webglTexture)}if(e.depthTexture){e.depthTexture.dispose()}if(e.isWebGLCubeRenderTarget){for(let e=0;e<6;e++){p.deleteFramebuffer(n.__webglFramebuffer[e]);if(n.__webglDepthbuffer)p.deleteRenderbuffer(n.__webglDepthbuffer[e])}}else{p.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer)p.deleteRenderbuffer(n.__webglDepthbuffer);if(n.__webglMultisampledFramebuffer)p.deleteFramebuffer(n.__webglMultisampledFramebuffer);if(n.__webglColorRenderbuffer)p.deleteRenderbuffer(n.__webglColorRenderbuffer);if(n.__webglDepthRenderbuffer)p.deleteRenderbuffer(n.__webglDepthRenderbuffer)}f.remove(t);f.remove(e)}let R=0;function e(){R=0}function L(){const e=R;if(e>=t){console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t)}R+=1;return e}function C(e,t){const n=f.get(e);if(e.isVideoTexture)Y(e);if(e.version>0&&n.__version!==e.version){const i=e.image;if(i===undefined){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined")}else if(i.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}else{U(n,e,t);return}}m.activeTexture(p.TEXTURE0+t);m.bindTexture(p.TEXTURE_2D,n.__webglTexture)}function P(e,t){const n=f.get(e);if(e.version>0&&n.__version!==e.version){U(n,e,t);return}m.activeTexture(p.TEXTURE0+t);m.bindTexture(p.TEXTURE_2D_ARRAY,n.__webglTexture)}function I(e,t){const n=f.get(e);if(e.version>0&&n.__version!==e.version){U(n,e,t);return}m.activeTexture(p.TEXTURE0+t);m.bindTexture(p.TEXTURE_3D,n.__webglTexture)}function D(e,t){const n=f.get(e);if(e.version>0&&n.__version!==e.version){H(n,e,t);return}m.activeTexture(p.TEXTURE0+t);m.bindTexture(p.TEXTURE_CUBE_MAP,n.__webglTexture)}const N={[$]:p.REPEAT,[ee]:p.CLAMP_TO_EDGE,[te]:p.MIRRORED_REPEAT};const F={[ne]:p.NEAREST,[ie]:p.NEAREST_MIPMAP_NEAREST,[re]:p.NEAREST_MIPMAP_LINEAR,[se]:p.LINEAR,[oe]:p.LINEAR_MIPMAP_NEAREST,[ae]:p.LINEAR_MIPMAP_LINEAR};function O(e,t,n){if(n){p.texParameteri(e,p.TEXTURE_WRAP_S,N[t.wrapS]);p.texParameteri(e,p.TEXTURE_WRAP_T,N[t.wrapT]);if(e===p.TEXTURE_3D||e===p.TEXTURE_2D_ARRAY){p.texParameteri(e,p.TEXTURE_WRAP_R,N[t.wrapR])}p.texParameteri(e,p.TEXTURE_MAG_FILTER,F[t.magFilter]);p.texParameteri(e,p.TEXTURE_MIN_FILTER,F[t.minFilter])}else{p.texParameteri(e,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE);p.texParameteri(e,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE);if(e===p.TEXTURE_3D||e===p.TEXTURE_2D_ARRAY){p.texParameteri(e,p.TEXTURE_WRAP_R,p.CLAMP_TO_EDGE)}if(t.wrapS!==ee||t.wrapT!==ee){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.")}p.texParameteri(e,p.TEXTURE_MAG_FILTER,a(t.magFilter));p.texParameteri(e,p.TEXTURE_MIN_FILTER,a(t.minFilter));if(t.minFilter!==ne&&t.minFilter!==se){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")}}if(r.has("EXT_texture_filter_anisotropic")===true){const i=r.get("EXT_texture_filter_anisotropic");if(t.type===qe&&r.has("OES_texture_float_linear")===false)return;if(v===false&&t.type===Ye&&r.has("OES_texture_half_float_linear")===false)return;if(t.anisotropy>1||f.get(t).__currentAnisotropy){p.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()));f.get(t).__currentAnisotropy=t.anisotropy}}}function B(e,t){if(e.__webglInit===undefined){e.__webglInit=true;t.addEventListener("dispose",c);e.__webglTexture=p.createTexture();y.memory.textures++}}function U(e,n,t){let i=p.TEXTURE_2D;if(n.isDataTexture2DArray)i=p.TEXTURE_2D_ARRAY;if(n.isDataTexture3D)i=p.TEXTURE_3D;B(e,n);m.activeTexture(p.TEXTURE0+t);m.bindTexture(i,e.__webglTexture);p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL,n.flipY);p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);p.pixelStorei(p.UNPACK_ALIGNMENT,n.unpackAlignment);p.pixelStorei(p.UNPACK_COLORSPACE_CONVERSION_WEBGL,p.NONE);const r=M(n)&&b(n.image)===false;const s=_(n.image,r,false,d);const o=b(s)||v,a=g.convert(n.format);let c=g.convert(n.type),l=T(n.internalFormat,a,c);O(i,n,o);let u;const h=n.mipmaps;if(n.isDepthTexture){l=p.DEPTH_COMPONENT;if(v){if(n.type===qe){l=p.DEPTH_COMPONENT32F}else if(n.type===Xe){l=p.DEPTH_COMPONENT24}else if(n.type===Ze){l=p.DEPTH24_STENCIL8}else{l=p.DEPTH_COMPONENT16}}else{if(n.type===qe){console.error("WebGLRenderer: Floating point depth texture requires WebGL2.")}}if(n.format===Qe&&l===p.DEPTH_COMPONENT){if(n.type!==je&&n.type!==Xe){console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.");n.type=je;c=g.convert(n.type)}}if(n.format===$e&&l===p.DEPTH_COMPONENT){l=p.DEPTH_STENCIL;if(n.type!==Ze){console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.");n.type=Ze;c=g.convert(n.type)}}m.texImage2D(p.TEXTURE_2D,0,l,s.width,s.height,0,a,c,null)}else if(n.isDataTexture){if(h.length>0&&o){for(let e=0,t=h.length;e<t;e++){u=h[e];m.texImage2D(p.TEXTURE_2D,e,l,u.width,u.height,0,a,c,u.data)}n.generateMipmaps=false;e.__maxMipLevel=h.length-1}else{m.texImage2D(p.TEXTURE_2D,0,l,s.width,s.height,0,a,c,s.data);e.__maxMipLevel=0}}else if(n.isCompressedTexture){for(let e=0,t=h.length;e<t;e++){u=h[e];if(n.format!==Ke&&n.format!==Je){if(a!==null){m.compressedTexImage2D(p.TEXTURE_2D,e,l,u.width,u.height,0,u.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{m.texImage2D(p.TEXTURE_2D,e,l,u.width,u.height,0,a,c,u.data)}}e.__maxMipLevel=h.length-1}else if(n.isDataTexture2DArray){m.texImage3D(p.TEXTURE_2D_ARRAY,0,l,s.width,s.height,s.depth,0,a,c,s.data);e.__maxMipLevel=0}else if(n.isDataTexture3D){m.texImage3D(p.TEXTURE_3D,0,l,s.width,s.height,s.depth,0,a,c,s.data);e.__maxMipLevel=0}else{if(h.length>0&&o){for(let e=0,t=h.length;e<t;e++){u=h[e];m.texImage2D(p.TEXTURE_2D,e,l,a,c,u)}n.generateMipmaps=false;e.__maxMipLevel=h.length-1}else{m.texImage2D(p.TEXTURE_2D,0,l,a,c,s);e.__maxMipLevel=0}}if(w(n,o)){E(i,n,s.width,s.height)}e.__version=n.version;if(n.onUpdate)n.onUpdate(n)}function H(e,n,t){if(n.image.length!==6)return;B(e,n);m.activeTexture(p.TEXTURE0+t);m.bindTexture(p.TEXTURE_CUBE_MAP,e.__webglTexture);p.pixelStorei(p.UNPACK_FLIP_Y_WEBGL,n.flipY);p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);p.pixelStorei(p.UNPACK_ALIGNMENT,n.unpackAlignment);p.pixelStorei(p.UNPACK_COLORSPACE_CONVERSION_WEBGL,p.NONE);const i=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture);const r=n.image[0]&&n.image[0].isDataTexture;const s=[];for(let e=0;e<6;e++){if(!i&&!r){s[e]=_(n.image[e],false,true,x)}else{s[e]=r?n.image[e].image:n.image[e]}}const o=s[0],a=b(o)||v,c=g.convert(n.format),l=g.convert(n.type),u=T(n.internalFormat,c,l);O(p.TEXTURE_CUBE_MAP,n,a);let h;if(i){for(let t=0;t<6;t++){h=s[t].mipmaps;for(let e=0;e<h.length;e++){const d=h[e];if(n.format!==Ke&&n.format!==Je){if(c!==null){m.compressedTexImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,u,d.width,d.height,0,d.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()")}}else{m.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,u,d.width,d.height,0,c,l,d.data)}}}e.__maxMipLevel=h.length-1}else{h=n.mipmaps;for(let t=0;t<6;t++){if(r){m.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,u,s[t].width,s[t].height,0,c,l,s[t].data);for(let e=0;e<h.length;e++){const d=h[e];const f=d.image[t].image;m.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,u,f.width,f.height,0,c,l,f.data)}}else{m.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,u,c,l,s[t]);for(let e=0;e<h.length;e++){const d=h[e];m.texImage2D(p.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,u,c,l,d.image[t])}}}e.__maxMipLevel=h.length}if(w(n,a)){E(p.TEXTURE_CUBE_MAP,n,o.width,o.height)}e.__version=n.version;if(n.onUpdate)n.onUpdate(n)}function z(e,t,n,i){const r=t.texture;const s=g.convert(r.format);const o=g.convert(r.type);const a=T(r.internalFormat,s,o);if(i===p.TEXTURE_3D||i===p.TEXTURE_2D_ARRAY){m.texImage3D(i,0,a,t.width,t.height,t.depth,0,s,o,null)}else{m.texImage2D(i,0,a,t.width,t.height,0,s,o,null)}m.bindFramebuffer(p.FRAMEBUFFER,e);p.framebufferTexture2D(p.FRAMEBUFFER,n,i,f.get(r).__webglTexture,0);m.bindFramebuffer(p.FRAMEBUFFER,null)}function G(t,n,i){p.bindRenderbuffer(p.RENDERBUFFER,t);if(n.depthBuffer&&!n.stencilBuffer){let e=p.DEPTH_COMPONENT16;if(i){const r=n.depthTexture;if(r&&r.isDepthTexture){if(r.type===qe){e=p.DEPTH_COMPONENT32F}else if(r.type===Xe){e=p.DEPTH_COMPONENT24}}const s=q(n);p.renderbufferStorageMultisample(p.RENDERBUFFER,s,e,n.width,n.height)}else{p.renderbufferStorage(p.RENDERBUFFER,e,n.width,n.height)}p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_ATTACHMENT,p.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const s=q(n);p.renderbufferStorageMultisample(p.RENDERBUFFER,s,p.DEPTH24_STENCIL8,n.width,n.height)}else{p.renderbufferStorage(p.RENDERBUFFER,p.DEPTH_STENCIL,n.width,n.height)}p.framebufferRenderbuffer(p.FRAMEBUFFER,p.DEPTH_STENCIL_ATTACHMENT,p.RENDERBUFFER,t)}else{const e=n.texture;const o=g.convert(e.format);const a=g.convert(e.type);const c=T(e.internalFormat,o,a);if(i){const s=q(n);p.renderbufferStorageMultisample(p.RENDERBUFFER,s,c,n.width,n.height)}else{p.renderbufferStorage(p.RENDERBUFFER,c,n.width,n.height)}}p.bindRenderbuffer(p.RENDERBUFFER,null)}function k(e,t){const n=t&&t.isWebGLCubeRenderTarget;if(n)throw new Error("Depth Texture with cube render targets is not supported");m.bindFramebuffer(p.FRAMEBUFFER,e);if(!(t.depthTexture&&t.depthTexture.isDepthTexture)){throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture")}if(!f.get(t.depthTexture).__webglTexture||t.depthTexture.image.width!==t.width||t.depthTexture.image.height!==t.height){t.depthTexture.image.width=t.width;t.depthTexture.image.height=t.height;t.depthTexture.needsUpdate=true}C(t.depthTexture,0);const i=f.get(t.depthTexture).__webglTexture;if(t.depthTexture.format===Qe){p.framebufferTexture2D(p.FRAMEBUFFER,p.DEPTH_ATTACHMENT,p.TEXTURE_2D,i,0)}else if(t.depthTexture.format===$e){p.framebufferTexture2D(p.FRAMEBUFFER,p.DEPTH_STENCIL_ATTACHMENT,p.TEXTURE_2D,i,0)}else{throw new Error("Unknown depthTexture format")}}function V(t){const n=f.get(t);const e=t.isWebGLCubeRenderTarget===true;if(t.depthTexture){if(e)throw new Error("target.depthTexture not supported in Cube render targets");k(n.__webglFramebuffer,t)}else{if(e){n.__webglDepthbuffer=[];for(let e=0;e<6;e++){m.bindFramebuffer(p.FRAMEBUFFER,n.__webglFramebuffer[e]);n.__webglDepthbuffer[e]=p.createRenderbuffer();G(n.__webglDepthbuffer[e],t,false)}}else{m.bindFramebuffer(p.FRAMEBUFFER,n.__webglFramebuffer);n.__webglDepthbuffer=p.createRenderbuffer();G(n.__webglDepthbuffer,t,false)}}m.bindFramebuffer(p.FRAMEBUFFER,null)}function W(t){const n=t.texture;const i=f.get(t);const r=f.get(n);t.addEventListener("dispose",S);r.__webglTexture=p.createTexture();r.__version=n.version;y.memory.textures++;const e=t.isWebGLCubeRenderTarget===true;const s=t.isWebGLMultisampleRenderTarget===true;const o=n.isDataTexture3D||n.isDataTexture2DArray;const a=b(t)||v;if(v&&n.format===Je&&(n.type===qe||n.type===Ye)){n.format=Ke;console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")}if(e){i.__webglFramebuffer=[];for(let e=0;e<6;e++){i.__webglFramebuffer[e]=p.createFramebuffer()}}else{i.__webglFramebuffer=p.createFramebuffer();if(s){if(v){i.__webglMultisampledFramebuffer=p.createFramebuffer();i.__webglColorRenderbuffer=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,i.__webglColorRenderbuffer);const c=g.convert(n.format);const l=g.convert(n.type);const u=T(n.internalFormat,c,l);const h=q(t);p.renderbufferStorageMultisample(p.RENDERBUFFER,h,u,t.width,t.height);m.bindFramebuffer(p.FRAMEBUFFER,i.__webglMultisampledFramebuffer);p.framebufferRenderbuffer(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.RENDERBUFFER,i.__webglColorRenderbuffer);p.bindRenderbuffer(p.RENDERBUFFER,null);if(t.depthBuffer){i.__webglDepthRenderbuffer=p.createRenderbuffer();G(i.__webglDepthRenderbuffer,t,true)}m.bindFramebuffer(p.FRAMEBUFFER,null)}else{console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}}if(e){m.bindTexture(p.TEXTURE_CUBE_MAP,r.__webglTexture);O(p.TEXTURE_CUBE_MAP,n,a);for(let e=0;e<6;e++){z(i.__webglFramebuffer[e],t,p.COLOR_ATTACHMENT0,p.TEXTURE_CUBE_MAP_POSITIVE_X+e)}if(w(n,a)){E(p.TEXTURE_CUBE_MAP,n,t.width,t.height)}m.bindTexture(p.TEXTURE_CUBE_MAP,null)}else{let e=p.TEXTURE_2D;if(o){if(v){const d=n.isDataTexture3D;e=d?p.TEXTURE_3D:p.TEXTURE_2D_ARRAY}else{console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")}}m.bindTexture(e,r.__webglTexture);O(e,n,a);z(i.__webglFramebuffer,t,p.COLOR_ATTACHMENT0,e);if(w(n,a)){E(p.TEXTURE_2D,n,t.width,t.height)}m.bindTexture(p.TEXTURE_2D,null)}if(t.depthBuffer){V(t)}}function j(e){const t=e.texture;const n=b(e)||v;if(w(t,n)){const i=e.isWebGLCubeRenderTarget?p.TEXTURE_CUBE_MAP:p.TEXTURE_2D;const r=f.get(t).__webglTexture;m.bindTexture(i,r);E(i,t,e.width,e.height);m.bindTexture(i,null)}}function X(t){if(t.isWebGLMultisampleRenderTarget){if(v){const n=t.width;const i=t.height;let e=p.COLOR_BUFFER_BIT;if(t.depthBuffer)e|=p.DEPTH_BUFFER_BIT;if(t.stencilBuffer)e|=p.STENCIL_BUFFER_BIT;const r=f.get(t);m.bindFramebuffer(p.READ_FRAMEBUFFER,r.__webglMultisampledFramebuffer);m.bindFramebuffer(p.DRAW_FRAMEBUFFER,r.__webglFramebuffer);p.blitFramebuffer(0,0,n,i,0,0,n,i,e,p.NEAREST);m.bindFramebuffer(p.READ_FRAMEBUFFER,null);m.bindFramebuffer(p.DRAW_FRAMEBUFFER,r.__webglMultisampledFramebuffer)}else{console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}}function q(e){return v&&e.isWebGLMultisampleRenderTarget?Math.min(n,e.samples):0}function Y(e){const t=y.render.frame;if(i.get(e)!==t){i.set(e,t);e.update()}}let Z=false;let J=false;function K(e,t){if(e&&e.isWebGLRenderTarget){if(Z===false){console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.");Z=true}e=e.texture}C(e,t)}function Q(e,t){if(e&&e.isWebGLCubeRenderTarget){if(J===false){console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.");J=true}e=e.texture}D(e,t)}this.allocateTextureUnit=L;this.resetTextureUnits=e;this.setTexture2D=C;this.setTexture2DArray=P;this.setTexture3D=I;this.setTextureCube=D;this.setupRenderTarget=W;this.updateRenderTargetMipmap=j;this.updateMultisampleRenderTarget=X;this.safeSetTexture2D=K;this.safeSetTextureCube=Q}function xu(n,i,e){const r=e.isWebGL2;function t(e){let t;if(e===We)return n.UNSIGNED_BYTE;if(e===N)return n.UNSIGNED_SHORT_4_4_4_4;if(e===F)return n.UNSIGNED_SHORT_5_5_5_1;if(e===O)return n.UNSIGNED_SHORT_5_6_5;if(e===A)return n.BYTE;if(e===I)return n.SHORT;if(e===je)return n.UNSIGNED_SHORT;if(e===D)return n.INT;if(e===Xe)return n.UNSIGNED_INT;if(e===qe)return n.FLOAT;if(e===Ye){if(r)return n.HALF_FLOAT;t=i.get("OES_texture_half_float");if(t!==null){return t.HALF_FLOAT_OES}else{return null}}if(e===B)return n.ALPHA;if(e===Je)return n.RGB;if(e===Ke)return n.RGBA;if(e===U)return n.LUMINANCE;if(e===H)return n.LUMINANCE_ALPHA;if(e===Qe)return n.DEPTH_COMPONENT;if(e===$e)return n.DEPTH_STENCIL;if(e===G)return n.RED;if(e===k)return n.RED_INTEGER;if(e===V)return n.RG;if(e===W)return n.RG_INTEGER;if(e===j)return n.RGB_INTEGER;if(e===X)return n.RGBA_INTEGER;if(e===q||e===Y||e===Z||e===J){t=i.get("WEBGL_compressed_texture_s3tc");if(t!==null){if(e===q)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Y)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Z)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===J)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}else{return null}}if(e===K||e===Q||e===et||e===tt){t=i.get("WEBGL_compressed_texture_pvrtc");if(t!==null){if(e===K)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Q)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===et)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===tt)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else{return null}}if(e===nt){t=i.get("WEBGL_compressed_texture_etc1");if(t!==null){return t.COMPRESSED_RGB_ETC1_WEBGL}else{return null}}if(e===it||e===rt){t=i.get("WEBGL_compressed_texture_etc");if(t!==null){if(e===it)return t.COMPRESSED_RGB8_ETC2;if(e===rt)return t.COMPRESSED_RGBA8_ETC2_EAC}}if(e===st||e===ot||e===at||e===ct||e===lt||e===ut||e===ht||e===dt||e===ft||e===pt||e===mt||e===gt||e===yt||e===vt||e===_t||e===bt||e===Mt||e===wt||e===Et||e===Tt||e===St||e===At||e===Rt||e===Lt||e===Ct||e===Pt||e===It||e===Dt){t=i.get("WEBGL_compressed_texture_astc");if(t!==null){return e}else{return null}}if(e===xt){t=i.get("EXT_texture_compression_bptc");if(t!==null){return e}else{return null}}if(e===Ze){if(r)return n.UNSIGNED_INT_24_8;t=i.get("WEBGL_depth_texture");if(t!==null){return t.UNSIGNED_INT_24_8_WEBGL}else{return null}}}return{convert:t}}class _u extends bs{constructor(e=[]){super();this.cameras=e}}_u.prototype.isArrayCamera=true;class bu extends Ki{constructor(){super();this.type="Group"}}bu.prototype.isGroup=true;function Mu(){this._targetRay=null;this._grip=null;this._hand=null}Object.assign(Mu.prototype,{constructor:Mu,getHandSpace:function(){if(this._hand===null){this._hand=new bu;this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false}}return this._hand},getTargetRaySpace:function(){if(this._targetRay===null){this._targetRay=new bu;this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false}return this._targetRay},getGripSpace:function(){if(this._grip===null){this._grip=new bu;this._grip.matrixAutoUpdate=false;this._grip.visible=false}return this._grip},dispatchEvent:function(e){if(this._targetRay!==null){this._targetRay.dispatchEvent(e)}if(this._grip!==null){this._grip.dispatchEvent(e)}if(this._hand!==null){this._hand.dispatchEvent(e)}return this},disconnect:function(e){this.dispatchEvent({type:"disconnected",data:e});if(this._targetRay!==null){this._targetRay.visible=false}if(this._grip!==null){this._grip.visible=false}if(this._hand!==null){this._hand.visible=false}return this},update:function(e,t,n){let i=null;let r=null;let s=null;const o=this._targetRay;const a=this._grip;const c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(o!==null){i=t.getPose(e.targetRaySpace,n);if(i!==null){o.matrix.fromArray(i.transform.matrix);o.matrix.decompose(o.position,o.rotation,o.scale)}}if(c&&e.hand){s=true;for(const p of e.hand.values()){const m=t.getJointPose(p,n);if(c.joints[p.jointName]===undefined){const g=new bu;g.matrixAutoUpdate=false;g.visible=false;c.joints[p.jointName]=g;c.add(g)}const g=c.joints[p.jointName];if(m!==null){g.matrix.fromArray(m.transform.matrix);g.matrix.decompose(g.position,g.rotation,g.scale);g.jointRadius=m.radius}g.visible=m!==null}const l=c.joints["index-finger-tip"];const u=c.joints["thumb-tip"];const h=l.position.distanceTo(u.position);const d=.02;const f=.005;if(c.inputState.pinching&&h>d+f){c.inputState.pinching=false;this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})}else if(!c.inputState.pinching&&h<=d-f){c.inputState.pinching=true;this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this})}}else{if(a!==null&&e.gripSpace){r=t.getPose(e.gripSpace,n);if(r!==null){a.matrix.fromArray(r.transform.matrix);a.matrix.decompose(a.position,a.rotation,a.scale)}}}}if(o!==null){o.visible=i!==null}if(a!==null){a.visible=r!==null}if(c!==null){c.visible=s!==null}return this}});function wu(e,r){const s=this;const u=e.state;let h=null;let o=1;let d=null;let a="local-floor";let f=null;const p=[];const c=new Map;const l=new bs;l.layers.enable(1);l.viewport=new jn;const m=new bs;m.layers.enable(2);m.viewport=new jn;const g=[l,m];const y=new _u;y.layers.enable(1);y.layers.enable(2);let v=null;let x=null;this.enabled=false;this.isPresenting=false;this.getController=function(e){let t=p[e];if(t===undefined){t=new Mu;p[e]=t}return t.getTargetRaySpace()};this.getControllerGrip=function(e){let t=p[e];if(t===undefined){t=new Mu;p[e]=t}return t.getGripSpace()};this.getHand=function(e){let t=p[e];if(t===undefined){t=new Mu;p[e]=t}return t.getHandSpace()};function _(e){const t=c.get(e.inputSource);if(t){t.dispatchEvent({type:e.type,data:e.inputSource})}}function b(){c.forEach(function(e,t){e.disconnect(t)});c.clear();v=null;x=null;u.bindXRFramebuffer(null);e.setRenderTarget(e.getRenderTarget());R.stop();s.isPresenting=false;s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(e){o=e;if(s.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")}};this.setReferenceSpaceType=function(e){a=e;if(s.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")}};this.getReferenceSpace=function(){return d};this.getSession=function(){return h};this.setSession=async function(e){h=e;if(h!==null){h.addEventListener("select",_);h.addEventListener("selectstart",_);h.addEventListener("selectend",_);h.addEventListener("squeeze",_);h.addEventListener("squeezestart",_);h.addEventListener("squeezeend",_);h.addEventListener("end",b);h.addEventListener("inputsourceschange",M);const t=r.getContextAttributes();if(t.xrCompatible!==true){await r.makeXRCompatible()}const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:o};const i=new XRWebGLLayer(h,r,n);h.updateRenderState({baseLayer:i});d=await h.requestReferenceSpace(a);R.setContext(h);R.start();s.isPresenting=true;s.dispatchEvent({type:"sessionstart"})}};function M(t){const n=h.inputSources;for(let e=0;e<p.length;e++){c.set(n[e],p[e])}for(let e=0;e<t.removed.length;e++){const i=t.removed[e];const r=c.get(i);if(r){r.dispatchEvent({type:"disconnected",data:i});c.delete(i)}}for(let e=0;e<t.added.length;e++){const i=t.added[e];const r=c.get(i);if(r){r.dispatchEvent({type:"connected",data:i})}}}const w=new Zn;const E=new Zn;function T(e,t,n){w.setFromMatrixPosition(t.matrixWorld);E.setFromMatrixPosition(n.matrixWorld);const i=w.distanceTo(E);const r=t.projectionMatrix.elements;const s=n.projectionMatrix.elements;const o=r[14]/(r[10]-1);const a=r[14]/(r[10]+1);const c=(r[9]+1)/r[5];const l=(r[9]-1)/r[5];const u=(r[8]-1)/r[0];const h=(s[8]+1)/s[0];const d=o*u;const f=o*h;const p=i/(-u+h);const m=p*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale);e.translateX(m);e.translateZ(p);e.matrixWorld.compose(e.position,e.quaternion,e.scale);e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+p;const y=a+p;const v=d-m;const x=f+(i-m);const _=c*a/y*g;const b=l*a/y*g;e.projectionMatrix.makePerspective(v,x,_,b,g,y)}function S(e,t){if(t===null){e.matrixWorld.copy(e.matrix)}else{e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix)}e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){y.near=m.near=l.near=e.near;y.far=m.far=l.far=e.far;if(v!==y.near||x!==y.far){h.updateRenderState({depthNear:y.near,depthFar:y.far});v=y.near;x=y.far}const t=e.parent;const n=y.cameras;S(y,t);for(let e=0;e<n.length;e++){S(n[e],t)}e.matrixWorld.copy(y.matrixWorld);e.matrix.copy(y.matrix);e.matrix.decompose(e.position,e.quaternion,e.scale);const i=e.children;for(let e=0,t=i.length;e<t;e++){i[e].updateMatrixWorld(true)}if(n.length===2){T(y,l,m)}else{y.projectionMatrix.copy(l.projectionMatrix)}return y};let A=null;function t(e,t){f=t.getViewerPose(d);if(f!==null){const i=f.views;const r=h.renderState.baseLayer;u.bindXRFramebuffer(r.framebuffer);let t=false;if(i.length!==y.cameras.length){y.cameras.length=0;t=true}for(let e=0;e<i.length;e++){const s=i[e];const o=r.getViewport(s);const a=g[e];a.matrix.fromArray(s.transform.matrix);a.projectionMatrix.fromArray(s.projectionMatrix);a.viewport.set(o.x,o.y,o.width,o.height);if(e===0){y.matrix.copy(a.matrix)}if(t===true){y.cameras.push(a)}}}const n=h.inputSources;for(let e=0;e<p.length;e++){const c=p[e];const l=n[e];c.update(l,t,d)}if(A)A(e,t)}const R=new Ps;R.setAnimationLoop(t);this.setAnimationLoop=function(e){A=e};this.dispose=function(){}}Object.assign(wu.prototype,Nn.prototype);function Eu(o){function e(e,t){e.fogColor.value.copy(t.color);if(t.isFog){e.fogNear.value=t.near;e.fogFar.value=t.far}else if(t.isFogExp2){e.fogDensity.value=t.density}}function t(e,t,n,i){if(t.isMeshBasicMaterial){r(e,t)}else if(t.isMeshLambertMaterial){r(e,t);u(e,t)}else if(t.isMeshToonMaterial){r(e,t);d(e,t)}else if(t.isMeshPhongMaterial){r(e,t);h(e,t)}else if(t.isMeshStandardMaterial){r(e,t);if(t.isMeshPhysicalMaterial){p(e,t)}else{f(e,t)}}else if(t.isMeshMatcapMaterial){r(e,t);m(e,t)}else if(t.isMeshDepthMaterial){r(e,t);g(e,t)}else if(t.isMeshDistanceMaterial){r(e,t);y(e,t)}else if(t.isMeshNormalMaterial){r(e,t);v(e,t)}else if(t.isLineBasicMaterial){s(e,t);if(t.isLineDashedMaterial){a(e,t)}}else if(t.isPointsMaterial){c(e,t,n,i)}else if(t.isSpriteMaterial){l(e,t)}else if(t.isShadowMaterial){e.color.value.copy(t.color);e.opacity.value=t.opacity}else if(t.isShaderMaterial){t.uniformsNeedUpdate=false}}function r(e,t){e.opacity.value=t.opacity;if(t.color){e.diffuse.value.copy(t.color)}if(t.emissive){e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity)}if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}if(t.specularMap){e.specularMap.value=t.specularMap}const n=o.get(t).envMap;if(n){e.envMap.value=n;e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1;e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio;const s=o.get(n).__maxMipLevel;if(s!==undefined){e.maxMipLevel.value=s}}if(t.lightMap){e.lightMap.value=t.lightMap;e.lightMapIntensity.value=t.lightMapIntensity}if(t.aoMap){e.aoMap.value=t.aoMap;e.aoMapIntensity.value=t.aoMapIntensity}let i;if(t.map){i=t.map}else if(t.specularMap){i=t.specularMap}else if(t.displacementMap){i=t.displacementMap}else if(t.normalMap){i=t.normalMap}else if(t.bumpMap){i=t.bumpMap}else if(t.roughnessMap){i=t.roughnessMap}else if(t.metalnessMap){i=t.metalnessMap}else if(t.alphaMap){i=t.alphaMap}else if(t.emissiveMap){i=t.emissiveMap}else if(t.clearcoatMap){i=t.clearcoatMap}else if(t.clearcoatNormalMap){i=t.clearcoatNormalMap}else if(t.clearcoatRoughnessMap){i=t.clearcoatRoughnessMap}if(i!==undefined){if(i.isWebGLRenderTarget){i=i.texture}if(i.matrixAutoUpdate===true){i.updateMatrix()}e.uvTransform.value.copy(i.matrix)}let r;if(t.aoMap){r=t.aoMap}else if(t.lightMap){r=t.lightMap}if(r!==undefined){if(r.isWebGLRenderTarget){r=r.texture}if(r.matrixAutoUpdate===true){r.updateMatrix()}e.uv2Transform.value.copy(r.matrix)}}function s(e,t){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity}function a(e,t){e.dashSize.value=t.dashSize;e.totalSize.value=t.dashSize+t.gapSize;e.scale.value=t.scale}function c(e,t,n,i){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.size.value=t.size*n;e.scale.value=i*.5;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}let r;if(t.map){r=t.map}else if(t.alphaMap){r=t.alphaMap}if(r!==undefined){if(r.matrixAutoUpdate===true){r.updateMatrix()}e.uvTransform.value.copy(r.matrix)}}function l(e,t){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.rotation.value=t.rotation;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}let n;if(t.map){n=t.map}else if(t.alphaMap){n=t.alphaMap}if(n!==undefined){if(n.matrixAutoUpdate===true){n.updateMatrix()}e.uvTransform.value.copy(n.matrix)}}function u(e,t){if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}}function h(e,t){e.specular.value.copy(t.specular);e.shininess.value=Math.max(t.shininess,1e-4);if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===he)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===he)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function d(e,t){if(t.gradientMap){e.gradientMap.value=t.gradientMap}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===he)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===he)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function f(e,t){e.roughness.value=t.roughness;e.metalness.value=t.metalness;if(t.roughnessMap){e.roughnessMap.value=t.roughnessMap}if(t.metalnessMap){e.metalnessMap.value=t.metalnessMap}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===he)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===he)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}const n=o.get(t).envMap;if(n){e.envMapIntensity.value=t.envMapIntensity}}function p(e,t){f(e,t);e.reflectivity.value=t.reflectivity;e.clearcoat.value=t.clearcoat;e.clearcoatRoughness.value=t.clearcoatRoughness;if(t.sheen)e.sheen.value.copy(t.sheen);if(t.clearcoatMap){e.clearcoatMap.value=t.clearcoatMap}if(t.clearcoatRoughnessMap){e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap}if(t.clearcoatNormalMap){e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale);e.clearcoatNormalMap.value=t.clearcoatNormalMap;if(t.side===he){e.clearcoatNormalScale.value.negate()}}e.transmission.value=t.transmission;if(t.transmissionMap){e.transmissionMap.value=t.transmissionMap}}function m(e,t){if(t.matcap){e.matcap.value=t.matcap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===he)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===he)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function g(e,t){if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function y(e,t){if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}e.referencePosition.value.copy(t.referencePosition);e.nearDistance.value=t.nearDistance;e.farDistance.value=t.farDistance}function v(e,t){if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===he)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===he)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function Tu(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.style.display="block";return e}function Su(e){e=e||{};const s=e.canvas!==undefined?e.canvas:Tu(),t=e.context!==undefined?e.context:null,n=e.alpha!==undefined?e.alpha:false,i=e.depth!==undefined?e.depth:true,r=e.stencil!==undefined?e.stencil:true,o=e.antialias!==undefined?e.antialias:false,a=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:true,c=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:false,l=e.powerPreference!==undefined?e.powerPreference:"default",u=e.failIfMajorPerformanceCaveat!==undefined?e.failIfMajorPerformanceCaveat:false;let d=null;let E=null;const h=[];const f=[];this.domElement=s;this.debug={checkShaderErrors:true};this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.clippingPlanes=[];this.localClippingEnabled=false;this.gammaFactor=2;this.outputEncoding=Yt;this.physicallyCorrectLights=false;this.toneMapping=Ve;this.toneMappingExposure=1;const T=this;let p=false;let m=0;let g=0;let S=null;let A=-1;let R=null;const y=new jn;const v=new jn;let x=null;let _=s.width;let L=s.height;let C=1;let b=null;let M=null;const w=new jn(0,0,_,L);const P=new jn(0,0,_,L);let I=false;const D=new Cs;let N=false;let F=false;const O=new Si;const B=new Zn;const U={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function H(){return S===null?C:1}let z=t;function G(t,n){for(let e=0;e<t.length;e++){const i=t[e];const r=s.getContext(i,n);if(r!==null)return r}return null}try{const Pe={alpha:n,depth:i,stencil:r,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:u};s.addEventListener("webglcontextlost",de,false);s.addEventListener("webglcontextrestored",fe,false);if(z===null){const Ie=["webgl2","webgl","experimental-webgl"];if(T.isWebGL1Renderer===true){Ie.shift()}z=G(Ie,Pe);if(z===null){if(G(Ie)){throw new Error("Error creating WebGL context with your selected attributes.")}else{throw new Error("Error creating WebGL context.")}}}if(z.getShaderPrecisionFormat===undefined){z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}}catch(e){console.error("THREE.WebGLRenderer: "+e.message);throw e}let k,V,W,j;let X,q,Y,Z,J,K;let Q,$,ee,te,ne,ie;let re,se,oe,ae;let ce,le;function ue(){k=new hc(z);V=new cc(z,k,e);k.init(V);ce=new xu(z,k,V);W=new yu(z,k,V);j=new pc(z);X=new eu;q=new vu(z,k,W,X,V,ce,j);Y=new uc(T);Z=new Is(z,V);le=new oc(z,k,Z,V);J=new dc(z,Z,j,le);K=new vc(z,J,Z,j);se=new yc(z);ne=new lc(X);Q=new $l(T,Y,k,V,le,ne);$=new Eu(X);ee=new ru(X);te=new hu(k,V);re=new sc(T,Y,W,K,a);ie=new gu(T,K,V);oe=new ac(z,k,j,V);ae=new fc(z,k,j,V);j.programs=Q.programs;T.capabilities=V;T.extensions=k;T.properties=X;T.renderLists=ee;T.shadowMap=ie;T.state=W;T.info=j}ue();const he=new wu(T,z);this.xr=he;this.getContext=function(){return z};this.getContextAttributes=function(){return z.getContextAttributes()};this.forceContextLoss=function(){const e=k.get("WEBGL_lose_context");if(e)e.loseContext()};this.forceContextRestore=function(){const e=k.get("WEBGL_lose_context");if(e)e.restoreContext()};this.getPixelRatio=function(){return C};this.setPixelRatio=function(e){if(e===undefined)return;C=e;this.setSize(_,L,false)};this.getSize=function(e){if(e===undefined){console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument");e=new Un}return e.set(_,L)};this.setSize=function(e,t,n){if(he.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}_=e;L=t;s.width=Math.floor(e*C);s.height=Math.floor(t*C);if(n!==false){s.style.width=e+"px";s.style.height=t+"px"}this.setViewport(0,0,e,t)};this.getDrawingBufferSize=function(e){if(e===undefined){console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument");e=new Un}return e.set(_*C,L*C).floor()};this.setDrawingBufferSize=function(e,t,n){_=e;L=t;C=n;s.width=Math.floor(e*n);s.height=Math.floor(t*n);this.setViewport(0,0,e,t)};this.getCurrentViewport=function(e){if(e===undefined){console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument");e=new jn}return e.copy(y)};this.getViewport=function(e){return e.copy(w)};this.setViewport=function(e,t,n,i){if(e.isVector4){w.set(e.x,e.y,e.z,e.w)}else{w.set(e,t,n,i)}W.viewport(y.copy(w).multiplyScalar(C).floor())};this.getScissor=function(e){return e.copy(P)};this.setScissor=function(e,t,n,i){if(e.isVector4){P.set(e.x,e.y,e.z,e.w)}else{P.set(e,t,n,i)}W.scissor(v.copy(P).multiplyScalar(C).floor())};this.getScissorTest=function(){return I};this.setScissorTest=function(e){W.setScissorTest(I=e)};this.setOpaqueSort=function(e){b=e};this.setTransparentSort=function(e){M=e};this.getClearColor=function(e){if(e===undefined){console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument");e=new br}return e.copy(re.getClearColor())};this.setClearColor=function(){re.setClearColor.apply(re,arguments)};this.getClearAlpha=function(){return re.getClearAlpha()};this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)};this.clear=function(e,t,n){let i=0;if(e===undefined||e)i|=z.COLOR_BUFFER_BIT;if(t===undefined||t)i|=z.DEPTH_BUFFER_BIT;if(n===undefined||n)i|=z.STENCIL_BUFFER_BIT;z.clear(i)};this.clearColor=function(){this.clear(true,false,false)};this.clearDepth=function(){this.clear(false,true,false)};this.clearStencil=function(){this.clear(false,false,true)};this.dispose=function(){s.removeEventListener("webglcontextlost",de,false);s.removeEventListener("webglcontextrestored",fe,false);ee.dispose();te.dispose();X.dispose();Y.dispose();K.dispose();le.dispose();he.dispose();he.removeEventListener("sessionstart",_e);he.removeEventListener("sessionend",be);Me.stop()};function de(e){e.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");p=true}function fe(){console.log("THREE.WebGLRenderer: Context Restored.");p=false;const e=j.autoReset;const t=ie.enabled;const n=ie.autoUpdate;const i=ie.needsUpdate;const r=ie.type;ue();j.autoReset=e;ie.enabled=t;ie.autoUpdate=n;ie.needsUpdate=i;ie.type=r}function pe(e){const t=e.target;t.removeEventListener("dispose",pe);me(t)}function me(e){ge(e);X.remove(e)}function ge(e){const t=X.get(e).programs;if(t!==undefined){t.forEach(function(e){Q.releaseProgram(e)})}}function ye(e,t){e.render(function(e){T.renderBufferImmediate(e,t)})}this.renderBufferImmediate=function(e,t){le.initAttributes();const n=X.get(e);if(e.hasPositions&&!n.position)n.position=z.createBuffer();if(e.hasNormals&&!n.normal)n.normal=z.createBuffer();if(e.hasUvs&&!n.uv)n.uv=z.createBuffer();if(e.hasColors&&!n.color)n.color=z.createBuffer();const i=t.getAttributes();if(e.hasPositions){z.bindBuffer(z.ARRAY_BUFFER,n.position);z.bufferData(z.ARRAY_BUFFER,e.positionArray,z.DYNAMIC_DRAW);le.enableAttribute(i.position);z.vertexAttribPointer(i.position,3,z.FLOAT,false,0,0)}if(e.hasNormals){z.bindBuffer(z.ARRAY_BUFFER,n.normal);z.bufferData(z.ARRAY_BUFFER,e.normalArray,z.DYNAMIC_DRAW);le.enableAttribute(i.normal);z.vertexAttribPointer(i.normal,3,z.FLOAT,false,0,0)}if(e.hasUvs){z.bindBuffer(z.ARRAY_BUFFER,n.uv);z.bufferData(z.ARRAY_BUFFER,e.uvArray,z.DYNAMIC_DRAW);le.enableAttribute(i.uv);z.vertexAttribPointer(i.uv,2,z.FLOAT,false,0,0)}if(e.hasColors){z.bindBuffer(z.ARRAY_BUFFER,n.color);z.bufferData(z.ARRAY_BUFFER,e.colorArray,z.DYNAMIC_DRAW);le.enableAttribute(i.color);z.vertexAttribPointer(i.color,3,z.FLOAT,false,0,0)}le.disableUnusedAttributes();z.drawArrays(z.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,n,i,r,s){if(t===null)t=U;const o=r.isMesh&&r.matrixWorld.determinant()<0;const a=Re(e,t,i,r);W.setMaterial(i,o);let c=n.index;const l=n.attributes.position;if(c===null){if(l===undefined||l.count===0)return}else if(c.count===0){return}let u=1;if(i.wireframe===true){c=J.getWireframeAttribute(n);u=2}if(i.morphTargets||i.morphNormals){se.update(r,n,i,a)}le.setup(r,i,a,n,c);let h;let d=oe;if(c!==null){h=Z.get(c);d=ae;d.setIndex(h)}const f=c!==null?c.count:l.count;const p=n.drawRange.start*u;const m=n.drawRange.count*u;const g=s!==null?s.start*u:0;const y=s!==null?s.count*u:Infinity;const v=Math.max(p,g);const x=Math.min(f,p+m,g+y)-1;const _=Math.max(0,x-v+1);if(_===0)return;if(r.isMesh){if(i.wireframe===true){W.setLineWidth(i.wireframeLinewidth*H());d.setMode(z.LINES)}else{d.setMode(z.TRIANGLES)}}else if(r.isLine){let e=i.linewidth;if(e===undefined)e=1;W.setLineWidth(e*H());if(r.isLineSegments){d.setMode(z.LINES)}else if(r.isLineLoop){d.setMode(z.LINE_LOOP)}else{d.setMode(z.LINE_STRIP)}}else if(r.isPoints){d.setMode(z.POINTS)}else if(r.isSprite){d.setMode(z.TRIANGLES)}if(r.isInstancedMesh){d.renderInstances(v,_,r.count)}else if(n.isInstancedBufferGeometry){const b=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(v,_,b)}else{d.render(v,_)}};this.compile=function(r,t){E=te.get(r);E.init();r.traverseVisible(function(e){if(e.isLight&&e.layers.test(t.layers)){E.pushLight(e);if(e.castShadow){E.pushShadow(e)}}});E.setupLights();r.traverse(function(t){const n=t.material;if(n){if(Array.isArray(n)){for(let e=0;e<n.length;e++){const i=n[e];Se(i,r,t)}}else{Se(n,r,t)}}})};let ve=null;function xe(e){if(ve)ve(e)}function _e(){Me.stop()}function be(){Me.start()}const Me=new Ps;Me.setAnimationLoop(xe);if(typeof window!=="undefined")Me.setContext(window);this.setAnimationLoop=function(e){ve=e;he.setAnimationLoop(e);e===null?Me.stop():Me.start()};he.addEventListener("sessionstart",_e);he.addEventListener("sessionend",be);this.render=function(e,t){let n,i;if(arguments[2]!==undefined){console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.");n=arguments[2]}if(arguments[3]!==undefined){console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.");i=arguments[3]}if(t!==undefined&&t.isCamera!==true){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===true)return;if(e.autoUpdate===true)e.updateMatrixWorld();if(t.parent===null)t.updateMatrixWorld();if(he.enabled===true&&he.isPresenting===true){t=he.getCamera(t)}if(e.isScene===true)e.onBeforeRender(T,e,t,n||S);E=te.get(e,f.length);E.init();f.push(E);O.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);D.setFromProjectionMatrix(O);F=this.localClippingEnabled;N=ne.init(this.clippingPlanes,F,t);d=ee.get(e,h.length);d.init();h.push(d);we(e,t,0,T.sortObjects);d.finish();if(T.sortObjects===true){d.sort(b,M)}if(N===true)ne.beginShadows();const r=E.state.shadowsArray;ie.render(r,e,t);E.setupLights();E.setupLightsView(t);if(N===true)ne.endShadows();if(this.info.autoReset===true)this.info.reset();if(n!==undefined){this.setRenderTarget(n)}re.render(d,e,t,i);const s=d.opaque;const o=d.transparent;if(s.length>0)Ee(s,e,t);if(o.length>0)Ee(o,e,t);if(S!==null){q.updateRenderTargetMipmap(S);q.updateMultisampleRenderTarget(S)}if(e.isScene===true)e.onAfterRender(T,e,t);W.buffers.depth.setTest(true);W.buffers.depth.setMask(true);W.buffers.color.setMask(true);W.setPolygonOffset(false);le.resetDefaultState();A=-1;R=null;f.pop();if(f.length>0){E=f[f.length-1]}else{E=null}h.pop();if(h.length>0){d=h[h.length-1]}else{d=null}};function we(n,i,r,s){if(n.visible===false)return;const e=n.layers.test(i.layers);if(e){if(n.isGroup){r=n.renderOrder}else if(n.isLOD){if(n.autoUpdate===true)n.update(i)}else if(n.isLight){E.pushLight(n);if(n.castShadow){E.pushShadow(n)}}else if(n.isSprite){if(!n.frustumCulled||D.intersectsSprite(n)){if(s){B.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O)}const a=K.update(n);const c=n.material;if(c.visible){d.push(n,a,c,r,B.z,null)}}}else if(n.isImmediateRenderObject){if(s){B.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O)}d.push(n,null,n.material,r,B.z,null)}else if(n.isMesh||n.isLine||n.isPoints){if(n.isSkinnedMesh){if(n.skeleton.frame!==j.render.frame){n.skeleton.update();n.skeleton.frame=j.render.frame}}if(!n.frustumCulled||D.intersectsObject(n)){if(s){B.setFromMatrixPosition(n.matrixWorld).applyMatrix4(O)}const a=K.update(n);const c=n.material;if(Array.isArray(c)){const l=a.groups;for(let e=0,t=l.length;e<t;e++){const u=l[e];const h=c[u.materialIndex];if(h&&h.visible){d.push(n,a,h,r,B.z,u)}}}else if(c.visible){d.push(n,a,c,r,B.z,null)}}}}const o=n.children;for(let e=0,t=o.length;e<t;e++){we(o[e],i,r,s)}}function Ee(n,i,r){const s=i.isScene===true?i.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){const o=n[e];const a=o.object;const c=o.geometry;const l=s===null?o.material:s;const u=o.group;if(r.isArrayCamera){const h=r.cameras;for(let e=0,t=h.length;e<t;e++){const d=h[e];if(a.layers.test(d.layers)){W.viewport(y.copy(d.viewport));E.setupLightsView(d);Te(a,i,d,c,l,u)}}}else{Te(a,i,r,c,l,u)}}}function Te(e,t,n,i,r,s){e.onBeforeRender(T,t,n,i,r,s);e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld);e.normalMatrix.getNormalMatrix(e.modelViewMatrix);if(e.isImmediateRenderObject){const o=Re(n,t,r,e);W.setMaterial(r);le.reset();ye(e,o)}else{T.renderBufferDirect(n,t,i,r,e,s)}e.onAfterRender(T,t,n,i,r,s)}function Se(e,t,n){if(t.isScene!==true)t=U;const i=X.get(e);const r=E.state.lights;const s=E.state.shadowsArray;const o=r.state.version;const a=Q.getParameters(e,r.state,s,t,n);const c=Q.getProgramCacheKey(a);let l=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null;i.fog=t.fog;i.envMap=Y.get(e.envMap||i.environment);if(l===undefined){e.addEventListener("dispose",pe);l=new Map;i.programs=l}let u=l.get(c);if(u!==undefined){if(i.currentProgram===u&&i.lightsStateVersion===o){Ae(e,a);return u}}else{a.uniforms=Q.getUniforms(e);e.onBeforeCompile(a,T);u=Q.acquireProgram(a,c);l.set(c,u);i.uniforms=a.uniforms}const h=i.uniforms;if(!e.isShaderMaterial&&!e.isRawShaderMaterial||e.clipping===true){h.clippingPlanes=ne.uniform}Ae(e,a);i.needsLights=Ce(e);i.lightsStateVersion=o;if(i.needsLights){h.ambientLightColor.value=r.state.ambient;h.lightProbe.value=r.state.probe;h.directionalLights.value=r.state.directional;h.directionalLightShadows.value=r.state.directionalShadow;h.spotLights.value=r.state.spot;h.spotLightShadows.value=r.state.spotShadow;h.rectAreaLights.value=r.state.rectArea;h.ltc_1.value=r.state.rectAreaLTC1;h.ltc_2.value=r.state.rectAreaLTC2;h.pointLights.value=r.state.point;h.pointLightShadows.value=r.state.pointShadow;h.hemisphereLights.value=r.state.hemi;h.directionalShadowMap.value=r.state.directionalShadowMap;h.directionalShadowMatrix.value=r.state.directionalShadowMatrix;h.spotShadowMap.value=r.state.spotShadowMap;h.spotShadowMatrix.value=r.state.spotShadowMatrix;h.pointShadowMap.value=r.state.pointShadowMap;h.pointShadowMatrix.value=r.state.pointShadowMatrix}const d=u.getUniforms();const f=El.seqWithValue(d.seq,h);i.currentProgram=u;i.uniformsList=f;return u}function Ae(e,t){const n=X.get(e);n.outputEncoding=t.outputEncoding;n.instancing=t.instancing;n.numClippingPlanes=t.numClippingPlanes;n.numIntersection=t.numClipIntersection;n.vertexAlphas=t.vertexAlphas}function Re(e,t,n,i){if(t.isScene!==true)t=U;q.resetTextureUnits();const r=t.fog;const s=n.isMeshStandardMaterial?t.environment:null;const o=S===null?T.outputEncoding:S.texture.encoding;const a=Y.get(n.envMap||s);const c=n.vertexColors===true&&i.geometry.attributes.color&&i.geometry.attributes.color.itemSize===4;const l=X.get(n);const u=E.state.lights;if(N===true){if(F===true||e!==R){const v=e===R&&n.id===A;ne.setState(n,e,v)}}let h=false;if(n.version===l.__version){if(l.needsLights&&l.lightsStateVersion!==u.state.version){h=true}else if(l.outputEncoding!==o){h=true}else if(i.isInstancedMesh&&l.instancing===false){h=true}else if(!i.isInstancedMesh&&l.instancing===true){h=true}else if(l.envMap!==a){h=true}else if(n.fog&&l.fog!==r){h=true}else if(l.numClippingPlanes!==undefined&&(l.numClippingPlanes!==ne.numPlanes||l.numIntersection!==ne.numIntersection)){h=true}else if(l.vertexAlphas!==c){h=true}}else{h=true;l.__version=n.version}let d=l.currentProgram;if(h===true){d=Se(n,t,i)}let f=false;let p=false;let m=false;const g=d.getUniforms(),y=l.uniforms;if(W.useProgram(d.program)){f=true;p=true;m=true}if(n.id!==A){A=n.id;p=true}if(f||R!==e){g.setValue(z,"projectionMatrix",e.projectionMatrix);if(V.logarithmicDepthBuffer){g.setValue(z,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2))}if(R!==e){R=e;p=true;m=true}if(n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const x=g.map.cameraPosition;if(x!==undefined){x.setValue(z,B.setFromMatrixPosition(e.matrixWorld))}}if(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial){g.setValue(z,"isOrthographic",e.isOrthographicCamera===true)}if(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning){g.setValue(z,"viewMatrix",e.matrixWorldInverse)}}if(n.skinning){g.setOptional(z,i,"bindMatrix");g.setOptional(z,i,"bindMatrixInverse");const _=i.skeleton;if(_){const b=_.bones;if(V.floatVertexTextures){if(_.boneTexture===null){let e=Math.sqrt(b.length*4);e=Bn.ceilPowerOfTwo(e);e=Math.max(e,4);const M=new Float32Array(e*e*4);M.set(_.boneMatrices);const w=new As(M,e,e,Ke,qe);_.boneMatrices=M;_.boneTexture=w;_.boneTextureSize=e}g.setValue(z,"boneTexture",_.boneTexture,q);g.setValue(z,"boneTextureSize",_.boneTextureSize)}else{g.setOptional(z,_,"boneMatrices")}}}if(p||l.receiveShadow!==i.receiveShadow){l.receiveShadow=i.receiveShadow;g.setValue(z,"receiveShadow",i.receiveShadow)}if(p){g.setValue(z,"toneMappingExposure",T.toneMappingExposure);if(l.needsLights){Le(y,m)}if(r&&n.fog){$.refreshFogUniforms(y,r)}$.refreshMaterialUniforms(y,n,C,L);El.upload(z,l.uniformsList,y,q)}if(n.isShaderMaterial&&n.uniformsNeedUpdate===true){El.upload(z,l.uniformsList,y,q);n.uniformsNeedUpdate=false}if(n.isSpriteMaterial){g.setValue(z,"center",i.center)}g.setValue(z,"modelViewMatrix",i.modelViewMatrix);g.setValue(z,"normalMatrix",i.normalMatrix);g.setValue(z,"modelMatrix",i.matrixWorld);return d}function Le(e,t){e.ambientLightColor.needsUpdate=t;e.lightProbe.needsUpdate=t;e.directionalLights.needsUpdate=t;e.directionalLightShadows.needsUpdate=t;e.pointLights.needsUpdate=t;e.pointLightShadows.needsUpdate=t;e.spotLights.needsUpdate=t;e.spotLightShadows.needsUpdate=t;e.rectAreaLights.needsUpdate=t;e.hemisphereLights.needsUpdate=t}function Ce(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&e.lights===true}this.getActiveCubeFace=function(){return m};this.getActiveMipmapLevel=function(){return g};this.getRenderTarget=function(){return S};this.setRenderTarget=function(e,t=0,n=0){S=e;m=t;g=n;if(e&&X.get(e).__webglFramebuffer===undefined){q.setupRenderTarget(e)}let i=null;let r=false;let s=false;if(e){const o=e.texture;if(o.isDataTexture3D||o.isDataTexture2DArray){s=true}const a=X.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget){i=a[t];r=true}else if(e.isWebGLMultisampleRenderTarget){i=X.get(e).__webglMultisampledFramebuffer}else{i=a}y.copy(e.viewport);v.copy(e.scissor);x=e.scissorTest}else{y.copy(w).multiplyScalar(C).floor();v.copy(P).multiplyScalar(C).floor();x=I}W.bindFramebuffer(z.FRAMEBUFFER,i);W.viewport(y);W.scissor(v);W.setScissorTest(x);if(r){const c=X.get(e.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+t,c.__webglTexture,n)}else if(s){const c=X.get(e.texture);const l=t||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,c.__webglTexture,n||0,l)}};this.readRenderTargetPixels=function(e,t,n,i,r,s,o){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let a=X.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&o!==undefined){a=a[o]}if(a){W.bindFramebuffer(z.FRAMEBUFFER,a);try{const c=e.texture;const l=c.format;const u=c.type;if(l!==Ke&&ce.convert(l)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const h=u===Ye&&(k.has("EXT_color_buffer_half_float")||V.isWebGL2&&k.has("EXT_color_buffer_float"));if(u!==We&&ce.convert(u)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(u===qe&&(V.isWebGL2||k.has("OES_texture_float")||k.has("WEBGL_color_buffer_float")))&&!h){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(z.checkFramebufferStatus(z.FRAMEBUFFER)===z.FRAMEBUFFER_COMPLETE){if(t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r){z.readPixels(t,n,i,r,ce.convert(l),ce.convert(u),s)}}else{console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}}finally{const a=S!==null?X.get(S).__webglFramebuffer:null;W.bindFramebuffer(z.FRAMEBUFFER,a)}}};this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n);const r=Math.floor(t.image.width*i);const s=Math.floor(t.image.height*i);const o=ce.convert(t.format);q.setTexture2D(t,0);z.copyTexImage2D(z.TEXTURE_2D,n,o,e.x,e.y,r,s,0);W.unbindTexture()};this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width;const s=t.image.height;const o=ce.convert(n.format);const a=ce.convert(n.type);q.setTexture2D(n,0);z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,n.flipY);z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);z.pixelStorei(z.UNPACK_ALIGNMENT,n.unpackAlignment);if(t.isDataTexture){z.texSubImage2D(z.TEXTURE_2D,i,e.x,e.y,r,s,o,a,t.image.data)}else{if(t.isCompressedTexture){z.compressedTexSubImage2D(z.TEXTURE_2D,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data)}else{z.texSubImage2D(z.TEXTURE_2D,i,e.x,e.y,o,a,t.image)}}if(i===0&&n.generateMipmaps)z.generateMipmap(z.TEXTURE_2D);W.unbindTexture()};this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(T.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const{width:s,height:o,data:a}=n.image;const c=ce.convert(i.format);const l=ce.convert(i.type);let u;if(i.isDataTexture3D){q.setTexture3D(i,0);u=z.TEXTURE_3D}else if(i.isDataTexture2DArray){q.setTexture2DArray(i,0);u=z.TEXTURE_2D_ARRAY}else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,i.flipY);z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha);z.pixelStorei(z.UNPACK_ALIGNMENT,i.unpackAlignment);const h=z.getParameter(z.UNPACK_ROW_LENGTH);const d=z.getParameter(z.UNPACK_IMAGE_HEIGHT);const f=z.getParameter(z.UNPACK_SKIP_PIXELS);const p=z.getParameter(z.UNPACK_SKIP_ROWS);const m=z.getParameter(z.UNPACK_SKIP_IMAGES);z.pixelStorei(z.UNPACK_ROW_LENGTH,s);z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,o);z.pixelStorei(z.UNPACK_SKIP_PIXELS,e.min.x);z.pixelStorei(z.UNPACK_SKIP_ROWS,e.min.y);z.pixelStorei(z.UNPACK_SKIP_IMAGES,e.min.z);z.texSubImage3D(u,r,t.x,t.y,t.z,e.max.x-e.min.x+1,e.max.y-e.min.y+1,e.max.z-e.min.z+1,c,l,a);z.pixelStorei(z.UNPACK_ROW_LENGTH,h);z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,d);z.pixelStorei(z.UNPACK_SKIP_PIXELS,f);z.pixelStorei(z.UNPACK_SKIP_ROWS,p);z.pixelStorei(z.UNPACK_SKIP_IMAGES,m);if(r===0&&i.generateMipmaps)z.generateMipmap(u);W.unbindTexture()};this.initTexture=function(e){q.setTexture2D(e,0);W.unbindTexture()};this.resetState=function(){m=0;g=0;S=null;W.reset();le.reset()};if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}class Au extends Su{}Au.prototype.isWebGL1Renderer=true;class Ru{constructor(e,t=25e-5){this.name="";this.color=new br(e);this.density=t}clone(){return new Ru(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ru.prototype.isFogExp2=true;class Lu{constructor(e,t=1,n=1e3){this.name="";this.color=new br(e);this.near=t;this.far=n}clone(){return new Lu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Lu.prototype.isFog=true;class Cu extends Ki{constructor(){super();this.type="Scene";this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}copy(e,t){super.copy(e,t);if(e.background!==null)this.background=e.background.clone();if(e.environment!==null)this.environment=e.environment.clone();if(e.fog!==null)this.fog=e.fog.clone();if(e.overrideMaterial!==null)this.overrideMaterial=e.overrideMaterial.clone();this.autoUpdate=e.autoUpdate;this.matrixAutoUpdate=e.matrixAutoUpdate;return this}toJSON(e){const t=super.toJSON(e);if(this.background!==null)t.object.background=this.background.toJSON(e);if(this.environment!==null)t.object.environment=this.environment.toJSON(e);if(this.fog!==null)t.object.fog=this.fog.toJSON();return t}}Cu.prototype.isScene=true;function Pu(e,t){this.array=e;this.stride=t;this.count=e!==undefined?e.length/t:0;this.usage=wn;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=Bn.generateUUID()}Object.defineProperty(Pu.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Pu.prototype,{isInterleavedBuffer:true,onUploadCallback:function(){},setUsage:function(e){this.usage=e;return this},copy:function(e){this.array=new e.array.constructor(e.array);this.count=e.count;this.stride=e.stride;this.usage=e.usage;return this},copyAt:function(n,i,r){n*=this.stride;r*=i.stride;for(let e=0,t=this.stride;e<t;e++){this.array[n+e]=i.array[r+e]}return this},set:function(e,t=0){this.array.set(e,t);return this},clone:function(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=Bn.generateUUID()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer}const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const n=new Pu(t,this.stride);n.setUsage(this.usage);return n},onUpload:function(e){this.onUploadCallback=e;return this},toJSON:function(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=Bn.generateUUID()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))}return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Iu=new Zn;function Du(e,t,n,i){this.name="";this.data=e;this.itemSize=t;this.offset=n;this.normalized=i===true}Object.defineProperties(Du.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(Du.prototype,{isInterleavedBufferAttribute:true,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++){Iu.x=this.getX(e);Iu.y=this.getY(e);Iu.z=this.getZ(e);Iu.applyMatrix4(n);this.setXYZ(e,Iu.x,Iu.y,Iu.z)}return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++){Iu.x=this.getX(e);Iu.y=this.getY(e);Iu.z=this.getZ(e);Iu.applyNormalMatrix(n);this.setXYZ(e,Iu.x,Iu.y,Iu.z)}return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++){Iu.x=this.getX(e);Iu.y=this.getY(e);Iu.z=this.getZ(e);Iu.transformDirection(n);this.setXYZ(e,Iu.x,Iu.y,Iu.z)}return this},setX:function(e,t){this.data.array[e*this.data.stride+this.offset]=t;return this},setY:function(e,t){this.data.array[e*this.data.stride+this.offset+1]=t;return this},setZ:function(e,t){this.data.array[e*this.data.stride+this.offset+2]=t;return this},setW:function(e,t){this.data.array[e*this.data.stride+this.offset+3]=t;return this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=n;return this},setXYZ:function(e,t,n,i){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=n;this.data.array[e+2]=i;return this},setXYZW:function(e,t,n,i,r){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=n;this.data.array[e+2]=i;this.data.array[e+3]=r;return this},clone:function(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++){t.push(this.data.array[n+e])}}return new Tr(new this.array.constructor(t),this.itemSize,this.normalized)}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.clone(e)}return new Du(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},toJSON:function(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++){t.push(this.data.array[n+e])}}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}});class Nu extends pr{constructor(e){super();this.type="SpriteMaterial";this.color=new br(16777215);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.rotation=e.rotation;this.sizeAttenuation=e.sizeAttenuation;return this}}Nu.prototype.isSpriteMaterial=true;let Fu;const Ou=new Zn;const Bu=new Zn;const Uu=new Zn;const Hu=new Un;const zu=new Un;const Gu=new Si;const ku=new Zn;const Vu=new Zn;const Wu=new Zn;const ju=new Un;const Xu=new Un;const qu=new Un;class Yu extends Ki{constructor(e){super();this.type="Sprite";if(Fu===undefined){Fu=new Xr;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);const n=new Pu(t,5);Fu.setIndex([0,1,2,0,2,3]);Fu.setAttribute("position",new Du(n,3,0,false));Fu.setAttribute("uv",new Du(n,2,3,false))}this.geometry=Fu;this.material=e!==undefined?e:new Nu;this.center=new Un(.5,.5)}raycast(e,t){if(e.camera===null){console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.')}Bu.setFromMatrixScale(this.matrixWorld);Gu.copy(e.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld);Uu.setFromMatrixPosition(this.modelViewMatrix);if(e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){Bu.multiplyScalar(-Uu.z)}const n=this.material.rotation;let i,r;if(n!==0){r=Math.cos(n);i=Math.sin(n)}const s=this.center;Zu(ku.set(-.5,-.5,0),Uu,s,Bu,i,r);Zu(Vu.set(.5,-.5,0),Uu,s,Bu,i,r);Zu(Wu.set(.5,.5,0),Uu,s,Bu,i,r);ju.set(0,0);Xu.set(1,0);qu.set(1,1);let o=e.ray.intersectTriangle(ku,Vu,Wu,false,Ou);if(o===null){Zu(Vu.set(-.5,.5,0),Uu,s,Bu,i,r);Xu.set(0,1);o=e.ray.intersectTriangle(ku,Wu,Vu,false,Ou);if(o===null){return}}const a=e.ray.origin.distanceTo(Ou);if(a<e.near||a>e.far)return;t.push({distance:a,point:Ou.clone(),uv:dr.getUV(Ou,ku,Vu,Wu,ju,Xu,qu,new Un),face:null,object:this})}copy(e){super.copy(e);if(e.center!==undefined)this.center.copy(e.center);this.material=e.material;return this}}Yu.prototype.isSprite=true;function Zu(e,t,n,i,r,s){Hu.subVectors(e,n).addScalar(.5).multiply(i);if(r!==undefined){zu.x=s*Hu.x-r*Hu.y;zu.y=r*Hu.x+s*Hu.y}else{zu.copy(Hu)}e.copy(t);e.x+=zu.x;e.y+=zu.y;e.applyMatrix4(Gu)}const Ju=new Zn;const Ku=new Zn;class Qu extends Ki{constructor(){super();this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]},isLOD:{value:true}});this.autoUpdate=true}copy(e){super.copy(e,false);const n=e.levels;for(let e=0,t=n.length;e<t;e++){const i=n[e];this.addLevel(i.object.clone(),i.distance)}this.autoUpdate=e.autoUpdate;return this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length;i++){if(t<n[i].distance){break}}n.splice(i,0,{distance:t,object:e});this.add(e);return this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){const i=this.levels;if(i.length>0){let e,t;for(e=1,t=i.length;e<t;e++){if(n<i[e].distance){break}}return i[e-1].object}return null}raycast(e,t){const n=this.levels;if(n.length>0){Ju.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ju);this.getObjectForDistance(i).raycast(e,t)}}update(n){const i=this.levels;if(i.length>1){Ju.setFromMatrixPosition(n.matrixWorld);Ku.setFromMatrixPosition(this.matrixWorld);const r=Ju.distanceTo(Ku)/n.zoom;i[0].object.visible=true;let e,t;for(e=1,t=i.length;e<t;e++){if(r>=i[e].distance){i[e-1].object.visible=false;i[e].object.visible=true}else{break}}this._currentLevel=e-1;for(;e<t;e++){i[e].object.visible=false}}}toJSON(e){const n=super.toJSON(e);if(this.autoUpdate===false)n.object.autoUpdate=false;n.object.levels=[];const i=this.levels;for(let e=0,t=i.length;e<t;e++){const r=i[e];n.object.levels.push({object:r.object.uuid,distance:r.distance})}return n}}const $u=new Zn;const eh=new jn;const th=new jn;const nh=new Zn;const ih=new Si;function rh(e,t){us.call(this,e,t);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new Si;this.bindMatrixInverse=new Si}rh.prototype=Object.assign(Object.create(us.prototype),{constructor:rh,isSkinnedMesh:true,copy:function(e){us.prototype.copy.call(this,e);this.bindMode=e.bindMode;this.bindMatrix.copy(e.bindMatrix);this.bindMatrixInverse.copy(e.bindMatrixInverse);this.skeleton=e.skeleton;return this},bind:function(e,t){this.skeleton=e;if(t===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();t=this.matrixWorld}this.bindMatrix.copy(t);this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new jn;const i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){n.x=i.getX(e);n.y=i.getY(e);n.z=i.getZ(e);n.w=i.getW(e);const r=1/n.manhattanLength();if(r!==Infinity){n.multiplyScalar(r)}else{n.set(1,0,0,0)}i.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(e){us.prototype.updateMatrixWorld.call(this,e);if(this.bindMode==="attached"){this.bindMatrixInverse.copy(this.matrixWorld).invert()}else if(this.bindMode==="detached"){this.bindMatrixInverse.copy(this.bindMatrix).invert()}else{console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},boneTransform:function(e,t){const n=this.skeleton;const i=this.geometry;eh.fromBufferAttribute(i.attributes.skinIndex,e);th.fromBufferAttribute(i.attributes.skinWeight,e);$u.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix);t.set(0,0,0);for(let e=0;e<4;e++){const r=th.getComponent(e);if(r!==0){const s=eh.getComponent(e);ih.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]);t.addScaledVector(nh.copy($u).applyMatrix4(ih),r)}}return t.applyMatrix4(this.bindMatrixInverse)}});function sh(){Ki.call(this);this.type="Bone"}sh.prototype=Object.assign(Object.create(Ki.prototype),{constructor:sh,isBone:true});const oh=new Si;const ah=new Si;class ch{constructor(e=[],t=[]){this.uuid=Bn.generateUUID();this.bones=e.slice(0);this.boneInverses=t;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init()}init(){const e=this.bones;const t=this.boneInverses;this.boneMatrices=new Float32Array(e.length*16);if(t.length===0){this.calculateInverses()}else{if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.");this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){this.boneInverses.push(new Si)}}}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Si;if(this.bones[e]){n.copy(this.bones[e].matrixWorld).invert()}this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];if(n){n.matrixWorld.copy(this.boneInverses[e]).invert()}}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];if(n){if(n.parent&&n.parent.isBone){n.matrix.copy(n.parent.matrixWorld).invert();n.matrix.multiply(n.matrixWorld)}else{n.matrix.copy(n.matrixWorld)}n.matrix.decompose(n.position,n.quaternion,n.scale)}}}update(){const n=this.bones;const i=this.boneInverses;const r=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=n.length;e<t;e++){const s=n[e]?n[e].matrixWorld:ah;oh.multiplyMatrices(s,i[e]);oh.toArray(r,e*16)}if(e!==null){e.needsUpdate=true}}clone(){return new ch(this.bones,this.boneInverses)}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];if(i.name===n){return i}}return undefined}dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null}}fromJSON(n,i){this.uuid=n.uuid;for(let t=0,e=n.bones.length;t<e;t++){const r=n.bones[t];let e=i[r];if(e===undefined){console.warn("THREE.Skeleton: No bone found with UUID:",r);e=new sh}this.bones.push(e);this.boneInverses.push((new Si).fromArray(n.boneInverses[t]))}this.init();return this}toJSON(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const i=this.bones;const r=this.boneInverses;for(let e=0,t=i.length;e<t;e++){const s=i[e];n.bones.push(s.uuid);const o=r[e];n.boneInverses.push(o.toArray())}return n}}const lh=new Si;const uh=new Si;const hh=[];const dh=new us;function fh(e,t,n){us.call(this,e,t);this.instanceMatrix=new Tr(new Float32Array(n*16),16);this.instanceColor=null;this.count=n;this.frustumCulled=false}fh.prototype=Object.assign(Object.create(us.prototype),{constructor:fh,isInstancedMesh:true,copy:function(e){us.prototype.copy.call(this,e);this.instanceMatrix.copy(e.instanceMatrix);if(e.instanceColor!==null)this.instanceColor=e.instanceColor.clone();this.count=e.count;return this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,i){const t=this.matrixWorld;const r=this.count;dh.geometry=this.geometry;dh.material=this.material;if(dh.material===undefined)return;for(let n=0;n<r;n++){this.getMatrixAt(n,lh);uh.multiplyMatrices(t,lh);dh.matrixWorld=uh;dh.raycast(e,hh);for(let e=0,t=hh.length;e<t;e++){const s=hh[e];s.instanceId=n;s.object=this;i.push(s)}hh.length=0}},setColorAt:function(e,t){if(this.instanceColor===null){this.instanceColor=new Tr(new Float32Array(this.count*3),3)}t.toArray(this.instanceColor.array,e*3)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class ph extends pr{constructor(e){super();this.type="LineBasicMaterial";this.color=new br(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.morphTargets=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.linewidth=e.linewidth;this.linecap=e.linecap;this.linejoin=e.linejoin;this.morphTargets=e.morphTargets;return this}}ph.prototype.isLineBasicMaterial=true;const mh=new Zn;const gh=new Zn;const yh=new Si;const vh=new Ti;const xh=new yi;function _h(e=new Xr,t=new ph){Ki.call(this);this.type="Line";this.geometry=e;this.material=t;this.updateMorphTargets()}_h.prototype=Object.assign(Object.create(Ki.prototype),{constructor:_h,isLine:true,copy:function(e){Ki.prototype.copy.call(this,e);this.material=e.material;this.geometry=e.geometry;return this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(e.index===null){const n=e.attributes.position;const i=[0];for(let e=1,t=n.count;e<t;e++){mh.fromBufferAttribute(n,e-1);gh.fromBufferAttribute(n,e);i[e]=i[e-1];i[e]+=mh.distanceTo(gh)}e.setAttribute("lineDistance",new Nr(i,1))}else{console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}}else if(e.isGeometry){console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}return this},raycast:function(n,i){const e=this.geometry;const t=this.matrixWorld;const r=n.params.Line.threshold;const s=e.drawRange;if(e.boundingSphere===null)e.computeBoundingSphere();xh.copy(e.boundingSphere);xh.applyMatrix4(t);xh.radius+=r;if(n.ray.intersectsSphere(xh)===false)return;yh.copy(t).invert();vh.copy(n.ray).applyMatrix4(yh);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3);const a=o*o;const c=new Zn;const l=new Zn;const u=new Zn;const h=new Zn;const d=this.isLineSegments?2:1;if(e.isBufferGeometry){const f=e.index;const p=e.attributes;const m=p.position;if(f!==null){const g=Math.max(0,s.start);const y=Math.min(f.count,s.start+s.count);for(let e=g,t=y-1;e<t;e+=d){const v=f.getX(e);const x=f.getX(e+1);c.fromBufferAttribute(m,v);l.fromBufferAttribute(m,x);const _=vh.distanceSqToSegment(c,l,h,u);if(_>a)continue;h.applyMatrix4(this.matrixWorld);const b=n.ray.origin.distanceTo(h);if(b<n.near||b>n.far)continue;i.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,s.start);const y=Math.min(m.count,s.start+s.count);for(let e=g,t=y-1;e<t;e+=d){c.fromBufferAttribute(m,e);l.fromBufferAttribute(m,e+1);const _=vh.distanceSqToSegment(c,l,h,u);if(_>a)continue;h.applyMatrix4(this.matrixWorld);const b=n.ray.origin.distanceTo(h);if(b<n.near||b>n.far)continue;i.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}}else if(e.isGeometry){console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const r=i[e].name||String(e);this.morphTargetInfluences.push(0);this.morphTargetDictionary[r]=e}}}}else{const s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}});const bh=new Zn;const Mh=new Zn;function wh(e,t){_h.call(this,e,t);this.type="LineSegments"}wh.prototype=Object.assign(Object.create(_h.prototype),{constructor:wh,isLineSegments:true,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry){if(e.index===null){const n=e.attributes.position;const i=[];for(let e=0,t=n.count;e<t;e+=2){bh.fromBufferAttribute(n,e);Mh.fromBufferAttribute(n,e+1);i[e]=e===0?0:i[e-1];i[e+1]=i[e]+bh.distanceTo(Mh)}e.setAttribute("lineDistance",new Nr(i,1))}else{console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}}else if(e.isGeometry){console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}return this}});class Eh extends _h{constructor(e,t){super(e,t);this.type="LineLoop"}}Eh.prototype.isLineLoop=true;class Th extends pr{constructor(e){super();this.type="PointsMaterial";this.color=new br(16777215);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.size=e.size;this.sizeAttenuation=e.sizeAttenuation;this.morphTargets=e.morphTargets;return this}}Th.prototype.isPointsMaterial=true;const Sh=new Si;const Ah=new Ti;const Rh=new yi;const Lh=new Zn;function Ch(e=new Xr,t=new Th){Ki.call(this);this.type="Points";this.geometry=e;this.material=t;this.updateMorphTargets()}Ch.prototype=Object.assign(Object.create(Ki.prototype),{constructor:Ch,isPoints:true,copy:function(e){Ki.prototype.copy.call(this,e);this.material=e.material;this.geometry=e.geometry;return this},raycast:function(n,i){const e=this.geometry;const r=this.matrixWorld;const t=n.params.Points.threshold;const s=e.drawRange;if(e.boundingSphere===null)e.computeBoundingSphere();Rh.copy(e.boundingSphere);Rh.applyMatrix4(r);Rh.radius+=t;if(n.ray.intersectsSphere(Rh)===false)return;Sh.copy(r).invert();Ah.copy(n.ray).applyMatrix4(Sh);const o=t/((this.scale.x+this.scale.y+this.scale.z)/3);const a=o*o;if(e.isBufferGeometry){const c=e.index;const l=e.attributes;const u=l.position;if(c!==null){const h=Math.max(0,s.start);const d=Math.min(c.count,s.start+s.count);for(let e=h,t=d;e<t;e++){const f=c.getX(e);Lh.fromBufferAttribute(u,f);Ph(Lh,f,a,r,n,i,this)}}else{const h=Math.max(0,s.start);const d=Math.min(u.count,s.start+s.count);for(let e=h,t=d;e<t;e++){Lh.fromBufferAttribute(u,e);Ph(Lh,e,a,r,n,i,this)}}}else{console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const r=i[e].name||String(e);this.morphTargetInfluences.push(0);this.morphTargetDictionary[r]=e}}}}else{const s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}});function Ph(e,t,n,i,r,s,o){const a=Ah.distanceSqToPoint(e);if(a<n){const c=new Zn;Ah.closestPointToPoint(e,c);c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:o})}}class Ih extends Vn{constructor(e,t,n,i,r,s,o,a,c){super(e,t,n,i,r,s,o,a,c);this.format=o!==undefined?o:Je;this.minFilter=s!==undefined?s:se;this.magFilter=r!==undefined?r:se;this.generateMipmaps=false;const l=this;function u(){l.needsUpdate=true;e.requestVideoFrameCallback(u)}if("requestVideoFrameCallback"in e){e.requestVideoFrameCallback(u)}}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;const t="requestVideoFrameCallback"in e;if(t===false&&e.readyState>=e.HAVE_CURRENT_DATA){this.needsUpdate=true}}}Ih.prototype.isVideoTexture=true;class Dh extends Vn{constructor(e,t,n,i,r,s,o,a,c,l,u,h){super(null,s,o,a,c,l,i,r,u,h);this.image={width:t,height:n};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false}}Dh.prototype.isCompressedTexture=true;class Nh extends Vn{constructor(e,t,n,i,r,s,o,a,c){super(e,t,n,i,r,s,o,a,c);this.needsUpdate=true}}Nh.prototype.isCanvasTexture=true;class Fh extends Vn{constructor(e,t,n,i,r,s,o,a,c,l){l=l!==undefined?l:Qe;if(l!==Qe&&l!==$e){throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat")}if(n===undefined&&l===Qe)n=je;if(n===undefined&&l===$e)n=Ze;super(null,i,r,s,o,a,l,n,c);this.image={width:e,height:t};this.magFilter=o!==undefined?o:ne;this.minFilter=a!==undefined?a:ne;this.flipY=false;this.generateMipmaps=false}}Fh.prototype.isDepthTexture=true;class Oh extends Xr{constructor(n=1,i=8,r=0,s=Math.PI*2){super();this.type="CircleGeometry";this.parameters={radius:n,segments:i,thetaStart:r,thetaLength:s};i=Math.max(3,i);const t=[];const o=[];const a=[];const c=[];const l=new Zn;const u=new Un;o.push(0,0,0);a.push(0,0,1);c.push(.5,.5);for(let e=0,t=3;e<=i;e++,t+=3){const h=r+e/i*s;l.x=n*Math.cos(h);l.y=n*Math.sin(h);o.push(l.x,l.y,l.z);a.push(0,0,1);u.x=(o[t]/n+1)/2;u.y=(o[t+1]/n+1)/2;c.push(u.x,u.y)}for(let e=1;e<=i;e++){t.push(e,e+1,0)}this.setIndex(t);this.setAttribute("position",new Nr(o,3));this.setAttribute("normal",new Nr(a,3));this.setAttribute("uv",new Nr(c,2))}}class Bh extends Xr{constructor(g=1,y=1,v=1,x=8,_=1,e=false,b=0,M=Math.PI*2){super();this.type="CylinderGeometry";this.parameters={radiusTop:g,radiusBottom:y,height:v,radialSegments:x,heightSegments:_,openEnded:e,thetaStart:b,thetaLength:M};const w=this;x=Math.floor(x);_=Math.floor(_);const E=[];const T=[];const S=[];const A=[];let R=0;const L=[];const C=v/2;let P=0;t();if(e===false){if(g>0)n(true);if(y>0)n(false)}this.setIndex(E);this.setAttribute("position",new Nr(T,3));this.setAttribute("normal",new Nr(S,3));this.setAttribute("uv",new Nr(A,2));function t(){const t=new Zn;const n=new Zn;let i=0;const r=(y-g)/v;for(let e=0;e<=_;e++){const s=[];const o=e/_;const a=o*(y-g)+g;for(let e=0;e<=x;e++){const c=e/x;const l=c*M+b;const u=Math.sin(l);const h=Math.cos(l);n.x=a*u;n.y=-o*v+C;n.z=a*h;T.push(n.x,n.y,n.z);t.set(u,r,h).normalize();S.push(t.x,t.y,t.z);A.push(c,1-o);s.push(R++)}L.push(s)}for(let t=0;t<x;t++){for(let e=0;e<_;e++){const d=L[e][t];const f=L[e+1][t];const p=L[e+1][t+1];const m=L[e][t+1];E.push(d,f,m);E.push(f,p,m);i+=6}}w.addGroup(P,i,0);P+=i}function n(t){const n=R;const i=new Un;const r=new Zn;let s=0;const o=t===true?g:y;const a=t===true?1:-1;for(let e=1;e<=x;e++){T.push(0,C*a,0);S.push(0,a,0);A.push(.5,.5);R++}const c=R;for(let e=0;e<=x;e++){const l=e/x;const u=l*M+b;const h=Math.cos(u);const d=Math.sin(u);r.x=o*d;r.y=C*a;r.z=o*h;T.push(r.x,r.y,r.z);S.push(0,a,0);i.x=h*.5+.5;i.y=d*.5*a+.5;A.push(i.x,i.y);R++}for(let e=0;e<x;e++){const f=n+e;const p=c+e;if(t===true){E.push(p,p+1,f)}else{E.push(p+1,p,f)}s+=3}w.addGroup(P,s,t===true?1:2);P+=s}}}class Uh extends Bh{constructor(e=1,t=1,n=8,i=1,r=false,s=0,o=Math.PI*2){super(0,e,t,n,i,r,s,o);this.type="ConeGeometry";this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class Hh extends Xr{constructor(i,s,e=1,t=0){super();this.type="PolyhedronGeometry";this.parameters={vertices:i,indices:s,radius:e,detail:t};const u=[];const h=[];n(t);r(e);a();this.setAttribute("position",new Nr(u,3));this.setAttribute("normal",new Nr(u.slice(),3));this.setAttribute("uv",new Nr(h,2));if(t===0){this.computeVertexNormals()}else{this.normalizeNormals()}function n(t){const n=new Zn;const i=new Zn;const r=new Zn;for(let e=0;e<s.length;e+=3){l(s[e+0],n);l(s[e+1],i);l(s[e+2],r);o(n,i,r,t)}}function o(e,n,i,t){const r=t+1;const s=[];for(let t=0;t<=r;t++){s[t]=[];const o=e.clone().lerp(i,t/r);const a=n.clone().lerp(i,t/r);const c=r-t;for(let e=0;e<=c;e++){if(e===0&&t===r){s[t][e]=o}else{s[t][e]=o.clone().lerp(a,e/c)}}}for(let t=0;t<r;t++){for(let e=0;e<2*(r-t)-1;e++){const l=Math.floor(e/2);if(e%2===0){d(s[t][l+1]);d(s[t+1][l]);d(s[t][l])}else{d(s[t][l+1]);d(s[t+1][l+1]);d(s[t+1][l])}}}}function r(t){const n=new Zn;for(let e=0;e<u.length;e+=3){n.x=u[e+0];n.y=u[e+1];n.z=u[e+2];n.normalize().multiplyScalar(t);u[e+0]=n.x;u[e+1]=n.y;u[e+2]=n.z}}function a(){const t=new Zn;for(let e=0;e<u.length;e+=3){t.x=u[e+0];t.y=u[e+1];t.z=u[e+2];const n=m(t)/2/Math.PI+.5;const i=g(t)/Math.PI+.5;h.push(n,1-i)}f();c()}function c(){for(let e=0;e<h.length;e+=6){const t=h[e+0];const n=h[e+2];const i=h[e+4];const r=Math.max(t,n,i);const s=Math.min(t,n,i);if(r>.9&&s<.1){if(t<.2)h[e+0]+=1;if(n<.2)h[e+2]+=1;if(i<.2)h[e+4]+=1}}}function d(e){u.push(e.x,e.y,e.z)}function l(e,t){const n=e*3;t.x=i[n+0];t.y=i[n+1];t.z=i[n+2]}function f(){const n=new Zn;const i=new Zn;const r=new Zn;const s=new Zn;const o=new Un;const a=new Un;const c=new Un;for(let e=0,t=0;e<u.length;e+=9,t+=6){n.set(u[e+0],u[e+1],u[e+2]);i.set(u[e+3],u[e+4],u[e+5]);r.set(u[e+6],u[e+7],u[e+8]);o.set(h[t+0],h[t+1]);a.set(h[t+2],h[t+3]);c.set(h[t+4],h[t+5]);s.copy(n).add(i).add(r).divideScalar(3);const l=m(s);p(o,t+0,n,l);p(a,t+2,i,l);p(c,t+4,r,l)}}function p(e,t,n,i){if(i<0&&e.x===1){h[t]=e.x-1}if(n.x===0&&n.z===0){h[t]=i/2/Math.PI+.5}}function m(e){return Math.atan2(e.z,-e.x)}function g(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}}}class zh extends Hh{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;const i=1/n;const r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i];const s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,s,e,t);this.type="DodecahedronGeometry";this.parameters={radius:e,detail:t}}}const Gh=new Zn;const kh=new Zn;const Vh=new Zn;const Wh=new dr;class jh extends Xr{constructor(e,t){super();this.type="EdgesGeometry";this.parameters={thresholdAngle:t};t=t!==undefined?t:1;if(e.isGeometry===true){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const n=4;const i=Math.pow(10,n);const r=Math.cos(Bn.DEG2RAD*t);const s=e.getIndex();const o=e.getAttribute("position");const a=s?s.count:o.count;const c=[0,0,0];const l=["a","b","c"];const u=new Array(3);const h={};const d=[];for(let e=0;e<a;e+=3){if(s){c[0]=s.getX(e);c[1]=s.getX(e+1);c[2]=s.getX(e+2)}else{c[0]=e;c[1]=e+1;c[2]=e+2}const{a:f,b:p,c:m}=Wh;f.fromBufferAttribute(o,c[0]);p.fromBufferAttribute(o,c[1]);m.fromBufferAttribute(o,c[2]);Wh.getNormal(Vh);u[0]=`${Math.round(f.x*i)},${Math.round(f.y*i)},${Math.round(f.z*i)}`;u[1]=`${Math.round(p.x*i)},${Math.round(p.y*i)},${Math.round(p.z*i)}`;u[2]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`;if(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]){continue}for(let e=0;e<3;e++){const g=(e+1)%3;const y=u[e];const v=u[g];const x=Wh[l[e]];const _=Wh[l[g]];const b=`${y}_${v}`;const M=`${v}_${y}`;if(M in h&&h[M]){if(Vh.dot(h[M].normal)<=r){d.push(x.x,x.y,x.z);d.push(_.x,_.y,_.z)}h[M]=null}else if(!(b in h)){h[b]={index0:c[e],index1:c[g],normal:Vh.clone()}}}}for(const w in h){if(h[w]){const{index0:E,index1:T}=h[w];Gh.fromBufferAttribute(o,E);kh.fromBufferAttribute(o,T);d.push(Gh.x,Gh.y,Gh.z);d.push(kh.x,kh.y,kh.z)}}this.setAttribute("position",new Nr(d,3))}}const Xh={triangulate:function(t,e,n){n=n||2;const i=e&&e.length;const r=i?e[0]*n:t.length;let s=qh(t,0,r,n,true);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,u,h,d,f;if(i)s=ed(t,e,s,n);if(t.length>80*n){a=l=t[0];c=u=t[1];for(let e=n;e<r;e+=n){h=t[e];d=t[e+1];if(h<a)a=h;if(d<c)c=d;if(h>l)l=h;if(d>u)u=d}f=Math.max(l-a,u-c);f=f!==0?1/f:0}Zh(s,o,n,a,c,f);return o}};function qh(e,t,n,i,r){let s,o;if(r===wd(e,t,n,i)>0){for(s=t;s<n;s+=i)o=_d(s,e[s],e[s+1],o)}else{for(s=n-i;s>=t;s-=i)o=_d(s,e[s],e[s+1],o)}if(o&&dd(o,o.next)){bd(o);o=o.next}return o}function Yh(e,t){if(!e)return e;if(!t)t=e;let n=e,i;do{i=false;if(!n.steiner&&(dd(n,n.next)||hd(n.prev,n,n.next)===0)){bd(n);n=t=n.prev;if(n===n.next)break;i=true}else{n=n.next}}while(i||n!==t);return t}function Zh(e,t,n,i,r,s,o){if(!e)return;if(!o&&s)sd(e,i,r,s);let a=e,c,l;while(e.prev!==e.next){c=e.prev;l=e.next;if(s?Kh(e,i,r,s):Jh(e)){t.push(c.i/n);t.push(e.i/n);t.push(l.i/n);bd(e);e=l.next;a=l.next;continue}e=l;if(e===a){if(!o){Zh(Yh(e),t,n,i,r,s,1)}else if(o===1){e=Qh(Yh(e),t,n);Zh(e,t,n,i,r,s,2)}else if(o===2){$h(e,t,n,i,r,s)}break}}}function Jh(e){const t=e.prev,n=e,i=e.next;if(hd(t,n,i)>=0)return false;let r=e.next.next;while(r!==e.prev){if(ld(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&hd(r.prev,r,r.next)>=0)return false;r=r.next}return true}function Kh(e,t,n,i){const r=e.prev,s=e,o=e.next;if(hd(r,s,o)>=0)return false;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,u=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y;const h=ad(a,c,t,n,i),d=ad(l,u,t,n,i);let f=e.prevZ,p=e.nextZ;while(f&&f.z>=h&&p&&p.z<=d){if(f!==e.prev&&f!==e.next&&ld(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&hd(f.prev,f,f.next)>=0)return false;f=f.prevZ;if(p!==e.prev&&p!==e.next&&ld(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&hd(p.prev,p,p.next)>=0)return false;p=p.nextZ}while(f&&f.z>=h){if(f!==e.prev&&f!==e.next&&ld(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&hd(f.prev,f,f.next)>=0)return false;f=f.prevZ}while(p&&p.z<=d){if(p!==e.prev&&p!==e.next&&ld(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&hd(p.prev,p,p.next)>=0)return false;p=p.nextZ}return true}function Qh(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;if(!dd(r,s)&&fd(r,i,i.next,s)&&yd(r,s)&&yd(s,r)){t.push(r.i/n);t.push(i.i/n);t.push(s.i/n);bd(i);bd(i.next);i=e=s}i=i.next}while(i!==e);return Yh(i)}function $h(e,n,i,r,s,o){let a=e;do{let t=a.next.next;while(t!==a.prev){if(a.i!==t.i&&ud(a,t)){let e=xd(a,t);a=Yh(a,a.next);e=Yh(e,e.next);Zh(a,n,i,r,s,o);Zh(e,n,i,r,s,o);return}t=t.next}a=a.next}while(a!==e)}function ed(e,t,n,i){const r=[];let s,o,a,c,l;for(s=0,o=t.length;s<o;s++){a=t[s]*i;c=s<o-1?t[s+1]*i:e.length;l=qh(e,a,c,i,false);if(l===l.next)l.steiner=true;r.push(cd(l))}r.sort(td);for(s=0;s<r.length;s++){nd(r[s],n);n=Yh(n,n.next)}return n}function td(e,t){return e.x-t.x}function nd(e,t){t=id(e,t);if(t){const n=xd(t,e);Yh(t,t.next);Yh(n,n.next)}}function id(e,t){let n=t;const i=e.x;const r=e.y;let s=-Infinity,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const d=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(d<=i&&d>s){s=d;if(d===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let u=Infinity,h;n=o;do{if(i>=n.x&&n.x>=c&&i!==n.x&&ld(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)){h=Math.abs(r-n.y)/(i-n.x);if(yd(n,e)&&(h<u||h===u&&(n.x>o.x||n.x===o.x&&rd(o,n)))){o=n;u=h}}n=n.next}while(n!==a);return o}function rd(e,t){return hd(e.prev,e,t.prev)<0&&hd(t.next,e,e.next)<0}function sd(e,t,n,i){let r=e;do{if(r.z===null)r.z=ad(r.x,r.y,t,n,i);r.prevZ=r.prev;r.nextZ=r.next;r=r.next}while(r!==e);r.prevZ.nextZ=null;r.prevZ=null;od(r)}function od(e){let t,n,i,r,s,o,a,c,l=1;do{n=e;e=null;s=null;o=0;while(n){o++;i=n;a=0;for(t=0;t<l;t++){a++;i=i.nextZ;if(!i)break}c=l;while(a>0||c>0&&i){if(a!==0&&(c===0||!i||n.z<=i.z)){r=n;n=n.nextZ;a--}else{r=i;i=i.nextZ;c--}if(s)s.nextZ=r;else e=r;r.prevZ=s;s=r}n=i}s.nextZ=null;l*=2}while(o>1);return e}function ad(e,t,n,i,r){e=32767*(e-n)*r;t=32767*(t-i)*r;e=(e|e<<8)&16711935;e=(e|e<<4)&252645135;e=(e|e<<2)&858993459;e=(e|e<<1)&1431655765;t=(t|t<<8)&16711935;t=(t|t<<4)&252645135;t=(t|t<<2)&858993459;t=(t|t<<1)&1431655765;return e|t<<1}function cd(e){let t=e,n=e;do{if(t.x<n.x||t.x===n.x&&t.y<n.y)n=t;t=t.next}while(t!==e);return n}function ld(e,t,n,i,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function ud(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!gd(e,t)&&(yd(e,t)&&yd(t,e)&&vd(e,t)&&(hd(e.prev,e,t.prev)||hd(e,t.prev,t))||dd(e,t)&&hd(e.prev,e,e.next)>0&&hd(t.prev,t,t.next)>0)}function hd(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function dd(e,t){return e.x===t.x&&e.y===t.y}function fd(e,t,n,i){const r=md(hd(e,t,n));const s=md(hd(e,t,i));const o=md(hd(n,i,e));const a=md(hd(n,i,t));if(r!==s&&o!==a)return true;if(r===0&&pd(e,n,t))return true;if(s===0&&pd(e,i,t))return true;if(o===0&&pd(n,e,i))return true;if(a===0&&pd(n,t,i))return true;return false}function pd(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function md(e){return e>0?1:e<0?-1:0}function gd(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&fd(n,n.next,e,t))return true;n=n.next}while(n!==e);return false}function yd(e,t){return hd(e.prev,e,e.next)<0?hd(e,t,e.next)>=0&&hd(e,e.prev,t)>=0:hd(e,t,e.prev)<0||hd(e,e.next,t)<0}function vd(e,t){let n=e,i=false;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{if(n.y>s!==n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x)i=!i;n=n.next}while(n!==e);return i}function xd(e,t){const n=new Md(e.i,e.x,e.y),i=new Md(t.i,t.x,t.y),r=e.next,s=t.prev;e.next=t;t.prev=e;n.next=r;r.prev=n;i.next=n;n.prev=i;s.next=i;i.prev=s;return i}function _d(e,t,n,i){const r=new Md(e,t,n);if(!i){r.prev=r;r.next=r}else{r.next=i.next;r.prev=i;i.next.prev=r;i.next=r}return r}function bd(e){e.next.prev=e.prev;e.prev.next=e.next;if(e.prevZ)e.prevZ.nextZ=e.nextZ;if(e.nextZ)e.nextZ.prevZ=e.prevZ}function Md(e,t,n){this.i=e;this.x=t;this.y=n;this.prev=null;this.next=null;this.z=null;this.prevZ=null;this.nextZ=null;this.steiner=false}function wd(n,i,r,s){let o=0;for(let e=i,t=r-s;e<r;e+=s){o+=(n[t]-n[e])*(n[e+1]+n[t+1]);t=e}return o}const Ed={area:function(n){const i=n.length;let r=0;for(let e=i-1,t=0;t<i;e=t++){r+=n[e].x*n[t].y-n[t].x*n[e].y}return r*.5},isClockWise:function(e){return Ed.area(e)<0},triangulateShape:function(e,t){const n=[];const i=[];const r=[];Td(e);Sd(n,e);let s=e.length;t.forEach(Td);for(let e=0;e<t.length;e++){i.push(s);s+=t[e].length;Sd(n,t[e])}const o=Xh.triangulate(n,i);for(let e=0;e<o.length;e+=3){r.push(o.slice(e,e+3))}return r}};function Td(e){const t=e.length;if(t>2&&e[t-1].equals(e[0])){e.pop()}}function Sd(t,n){for(let e=0;e<n.length;e++){t.push(n[e].x);t.push(n[e].y)}}class Ad extends Xr{constructor(n,j){super();this.type="ExtrudeGeometry";this.parameters={shapes:n,options:j};n=Array.isArray(n)?n:[n];const X=this;const q=[];const Y=[];for(let e=0,t=n.length;e<t;e++){const r=n[e];i(r)}this.setAttribute("position",new Nr(q,3));this.setAttribute("uv",new Nr(Y,2));this.computeVertexNormals();function i(e){const i=[];const t=j.curveSegments!==undefined?j.curveSegments:12;const h=j.steps!==undefined?j.steps:1;let n=j.depth!==undefined?j.depth:100;let r=j.bevelEnabled!==undefined?j.bevelEnabled:true;let s=j.bevelThickness!==undefined?j.bevelThickness:6;let o=j.bevelSize!==undefined?j.bevelSize:s-2;let a=j.bevelOffset!==undefined?j.bevelOffset:0;let d=j.bevelSegments!==undefined?j.bevelSegments:3;const c=j.extrudePath;const l=j.UVGenerator!==undefined?j.UVGenerator:Rd;if(j.amount!==undefined){console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth.");n=j.amount}let u,f=false;let p,m,g,y;if(c){u=c.getSpacedPoints(h);f=true;r=false;p=c.computeFrenetFrames(h,false);m=new Zn;g=new Zn;y=new Zn}if(!r){d=0;s=0;o=0;a=0}const v=e.extractPoints(t);let x=v.shape;const _=v.holes;const b=!Ed.isClockWise(x);if(b){x=x.reverse();for(let e=0,t=_.length;e<t;e++){const G=_[e];if(Ed.isClockWise(G)){_[e]=G.reverse()}}}const M=Ed.triangulateShape(x,_);const w=x;for(let e=0,t=_.length;e<t;e++){const G=_[e];x=x.concat(G)}function E(e,t,n){if(!t)console.error("THREE.ExtrudeGeometry: vec does not exist");return t.clone().multiplyScalar(n).add(e)}const T=x.length,S=M.length;function A(e,t,n){let i,r,s;const o=e.x-t.x,a=e.y-t.y;const c=n.x-e.x,l=n.y-e.y;const u=o*o+a*a;const h=o*l-a*c;if(Math.abs(h)>Number.EPSILON){const d=Math.sqrt(u);const f=Math.sqrt(c*c+l*l);const p=t.x-a/d;const m=t.y+o/d;const g=n.x-l/f;const y=n.y+c/f;const v=((g-p)*l-(y-m)*c)/(o*l-a*c);i=p+o*v-e.x;r=m+a*v-e.y;const x=i*i+r*r;if(x<=2){return new Un(i,r)}else{s=Math.sqrt(x/2)}}else{let e=false;if(o>Number.EPSILON){if(c>Number.EPSILON){e=true}}else{if(o<-Number.EPSILON){if(c<-Number.EPSILON){e=true}}else{if(Math.sign(a)===Math.sign(l)){e=true}}}if(e){i=-a;r=o;s=Math.sqrt(u)}else{i=o;r=a;s=Math.sqrt(u/2)}}return new Un(i/s,r/s)}const R=[];for(let e=0,t=w.length,n=t-1,i=e+1;e<t;e++,n++,i++){if(n===t)n=0;if(i===t)i=0;R[e]=A(w[e],w[n],w[i])}const L=[];let C,P=R.concat();for(let e=0,t=_.length;e<t;e++){const G=_[e];C=[];for(let e=0,t=G.length,n=t-1,i=e+1;e<t;e++,n++,i++){if(n===t)n=0;if(i===t)i=0;C[e]=A(G[e],G[n],G[i])}L.push(C);P=P.concat(C)}for(let e=0;e<d;e++){const k=e/d;const V=s*Math.cos(k*Math.PI/2);const I=o*Math.sin(k*Math.PI/2)+a;for(let e=0,t=w.length;e<t;e++){const W=E(w[e],R[e],I);O(W.x,W.y,-V)}for(let e=0,t=_.length;e<t;e++){const G=_[e];C=L[e];for(let e=0,t=G.length;e<t;e++){const W=E(G[e],C[e],I);O(W.x,W.y,-V)}}}const I=o+a;for(let e=0;e<T;e++){const W=r?E(x[e],P[e],I):x[e];if(!f){O(W.x,W.y,0)}else{g.copy(p.normals[0]).multiplyScalar(W.x);m.copy(p.binormals[0]).multiplyScalar(W.y);y.copy(u[0]).add(g).add(m);O(y.x,y.y,y.z)}}for(let t=1;t<=h;t++){for(let e=0;e<T;e++){const W=r?E(x[e],P[e],I):x[e];if(!f){O(W.x,W.y,n/h*t)}else{g.copy(p.normals[t]).multiplyScalar(W.x);m.copy(p.binormals[t]).multiplyScalar(W.y);y.copy(u[t]).add(g).add(m);O(y.x,y.y,y.z)}}}for(let e=d-1;e>=0;e--){const k=e/d;const V=s*Math.cos(k*Math.PI/2);const I=o*Math.sin(k*Math.PI/2)+a;for(let e=0,t=w.length;e<t;e++){const W=E(w[e],R[e],I);O(W.x,W.y,n+V)}for(let e=0,t=_.length;e<t;e++){const G=_[e];C=L[e];for(let e=0,t=G.length;e<t;e++){const W=E(G[e],C[e],I);if(!f){O(W.x,W.y,n+V)}else{O(W.x,W.y+u[h-1].y,u[h-1].x+V)}}}}D();N();function D(){const e=q.length/3;if(r){let e=0;let t=T*e;for(let e=0;e<S;e++){const n=M[e];B(n[2]+t,n[1]+t,n[0]+t)}e=h+d*2;t=T*e;for(let e=0;e<S;e++){const n=M[e];B(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<S;e++){const n=M[e];B(n[2],n[1],n[0])}for(let e=0;e<S;e++){const n=M[e];B(n[0]+T*h,n[1]+T*h,n[2]+T*h)}}X.addGroup(e,q.length/3-e,0)}function N(){const e=q.length/3;let n=0;F(w,n);n+=w.length;for(let t=0,e=_.length;t<e;t++){const e=_[t];F(e,n);n+=e.length}X.addGroup(e,q.length/3-e,1)}function F(e,i){let t=e.length;while(--t>=0){const r=t;let n=t-1;if(n<0)n=e.length-1;for(let e=0,t=h+d*2;e<t;e++){const s=T*e;const o=T*(e+1);const a=i+r+s,c=i+n+s,l=i+n+o,u=i+r+o;U(a,c,l,u)}}}function O(e,t,n){i.push(e);i.push(t);i.push(n)}function B(e,t,n){H(e);H(t);H(n);const i=q.length/3;const r=l.generateTopUV(X,q,i-3,i-2,i-1);z(r[0]);z(r[1]);z(r[2])}function U(e,t,n,i){H(e);H(t);H(i);H(t);H(n);H(i);const r=q.length/3;const s=l.generateSideWallUV(X,q,r-6,r-3,r-2,r-1);z(s[0]);z(s[1]);z(s[3]);z(s[1]);z(s[2]);z(s[3])}function H(e){q.push(i[e*3+0]);q.push(i[e*3+1]);q.push(i[e*3+2])}function z(e){Y.push(e.x);Y.push(e.y)}}}toJSON(){const e=Xr.prototype.toJSON.call(this);const t=this.parameters.shapes;const n=this.parameters.options;return Ld(t,n,e)}}const Rd={generateTopUV:function(e,t,n,i,r){const s=t[n*3];const o=t[n*3+1];const a=t[i*3];const c=t[i*3+1];const l=t[r*3];const u=t[r*3+1];return[new Un(s,o),new Un(a,c),new Un(l,u)]},generateSideWallUV:function(e,t,n,i,r,s){const o=t[n*3];const a=t[n*3+1];const c=t[n*3+2];const l=t[i*3];const u=t[i*3+1];const h=t[i*3+2];const d=t[r*3];const f=t[r*3+1];const p=t[r*3+2];const m=t[s*3];const g=t[s*3+1];const y=t[s*3+2];if(Math.abs(a-u)<.01){return[new Un(o,1-c),new Un(l,1-h),new Un(d,1-p),new Un(m,1-y)]}else{return[new Un(a,1-c),new Un(u,1-h),new Un(f,1-p),new Un(g,1-y)]}}};function Ld(n,e,i){i.shapes=[];if(Array.isArray(n)){for(let e=0,t=n.length;e<t;e++){const r=n[e];i.shapes.push(r.uuid)}}else{i.shapes.push(n.uuid)}if(e.extrudePath!==undefined)i.options.extrudePath=e.extrudePath.toJSON();return i}class Cd extends Hh{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;const i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];const r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t);this.type="IcosahedronGeometry";this.parameters={radius:e,detail:t}}}class Pd extends Xr{constructor(n,i=12,e=0,r=Math.PI*2){super();this.type="LatheGeometry";this.parameters={points:n,segments:i,phiStart:e,phiLength:r};i=Math.floor(i);r=Bn.clamp(r,0,Math.PI*2);const s=[];const o=[];const a=[];const c=1/i;const l=new Zn;const u=new Un;for(let t=0;t<=i;t++){const h=e+t*c*r;const d=Math.sin(h);const f=Math.cos(h);for(let e=0;e<=n.length-1;e++){l.x=n[e].x*d;l.y=n[e].y;l.z=n[e].x*f;o.push(l.x,l.y,l.z);u.x=t/i;u.y=e/(n.length-1);a.push(u.x,u.y)}}for(let t=0;t<i;t++){for(let e=0;e<n.length-1;e++){const p=e+t*n.length;const m=p;const g=p+n.length;const y=p+n.length+1;const v=p+1;s.push(m,g,v);s.push(g,y,v)}}this.setIndex(s);this.setAttribute("position",new Nr(o,3));this.setAttribute("uv",new Nr(a,2));this.computeVertexNormals();if(r===Math.PI*2){const x=this.attributes.normal.array;const _=new Zn;const b=new Zn;const M=new Zn;const p=i*n.length*3;for(let e=0,t=0;e<n.length;e++,t+=3){_.x=x[t+0];_.y=x[t+1];_.z=x[t+2];b.x=x[p+t+0];b.y=x[p+t+1];b.z=x[p+t+2];M.addVectors(_,b).normalize();x[t+0]=x[p+t+0]=M.x;x[t+1]=x[p+t+1]=M.y;x[t+2]=x[p+t+2]=M.z}}}}class Id extends Hh{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t);this.type="OctahedronGeometry";this.parameters={radius:e,detail:t}}}function Dd(t,n,i){Xr.call(this);this.type="ParametricGeometry";this.parameters={func:t,slices:n,stacks:i};const r=[];const s=[];const o=[];const a=[];const c=1e-5;const l=new Zn;const u=new Zn,h=new Zn;const d=new Zn,f=new Zn;if(t.length<3){console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.")}const p=n+1;for(let e=0;e<=i;e++){const m=e/i;for(let e=0;e<=n;e++){const g=e/n;t(g,m,u);s.push(u.x,u.y,u.z);if(g-c>=0){t(g-c,m,h);d.subVectors(u,h)}else{t(g+c,m,h);d.subVectors(h,u)}if(m-c>=0){t(g,m-c,h);f.subVectors(u,h)}else{t(g,m+c,h);f.subVectors(h,u)}l.crossVectors(d,f).normalize();o.push(l.x,l.y,l.z);a.push(g,m)}}for(let t=0;t<i;t++){for(let e=0;e<n;e++){const y=t*p+e;const v=t*p+e+1;const x=(t+1)*p+e+1;const _=(t+1)*p+e;r.push(y,v,_);r.push(v,x,_)}}this.setIndex(r);this.setAttribute("position",new Nr(s,3));this.setAttribute("normal",new Nr(o,3));this.setAttribute("uv",new Nr(a,2))}Dd.prototype=Object.create(Xr.prototype);Dd.prototype.constructor=Dd;class Nd extends Xr{constructor(e=.5,t=1,n=8,i=1,r=0,s=Math.PI*2){super();this.type="RingGeometry";this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s};n=Math.max(3,n);i=Math.max(1,i);const o=[];const a=[];const c=[];const l=[];let u=e;const h=(t-e)/i;const d=new Zn;const f=new Un;for(let e=0;e<=i;e++){for(let e=0;e<=n;e++){const p=r+e/n*s;d.x=u*Math.cos(p);d.y=u*Math.sin(p);a.push(d.x,d.y,d.z);c.push(0,0,1);f.x=(d.x/t+1)/2;f.y=(d.y/t+1)/2;l.push(f.x,f.y)}u+=h}for(let e=0;e<i;e++){const m=e*(n+1);for(let e=0;e<n;e++){const p=e+m;const g=p;const y=p+n+1;const v=p+n+2;const x=p+1;o.push(g,y,x);o.push(y,v,x)}}this.setIndex(o);this.setAttribute("position",new Nr(a,3));this.setAttribute("normal",new Nr(c,3));this.setAttribute("uv",new Nr(l,2))}}class Fd extends Xr{constructor(t,d=12){super();this.type="ShapeGeometry";this.parameters={shapes:t,curveSegments:d};const f=[];const p=[];const m=[];const g=[];let n=0;let y=0;if(Array.isArray(t)===false){i(t)}else{for(let e=0;e<t.length;e++){i(t[e]);this.addGroup(n,y,e);n+=y;y=0}}this.setIndex(f);this.setAttribute("position",new Nr(p,3));this.setAttribute("normal",new Nr(m,3));this.setAttribute("uv",new Nr(g,2));function i(e){const n=p.length/3;const t=e.extractPoints(d);let i=t.shape;const r=t.holes;if(Ed.isClockWise(i)===false){i=i.reverse()}for(let e=0,t=r.length;e<t;e++){const o=r[e];if(Ed.isClockWise(o)===true){r[e]=o.reverse()}}const s=Ed.triangulateShape(i,r);for(let e=0,t=r.length;e<t;e++){const o=r[e];i=i.concat(o)}for(let e=0,t=i.length;e<t;e++){const a=i[e];p.push(a.x,a.y,0);m.push(0,0,1);g.push(a.x,a.y)}for(let e=0,t=s.length;e<t;e++){const c=s[e];const l=c[0]+n;const u=c[1]+n;const h=c[2]+n;f.push(l,u,h);y+=3}}}toJSON(){const e=Xr.prototype.toJSON.call(this);const t=this.parameters.shapes;return Od(t,e)}}function Od(n,i){i.shapes=[];if(Array.isArray(n)){for(let e=0,t=n.length;e<t;e++){const r=n[e];i.shapes.push(r.uuid)}}else{i.shapes.push(n.uuid)}return i}class Bd extends Xr{constructor(n=1,i=8,r=6,s=0,o=Math.PI*2,a=0,c=Math.PI){super();this.type="SphereGeometry";this.parameters={radius:n,widthSegments:i,heightSegments:r,phiStart:s,phiLength:o,thetaStart:a,thetaLength:c};i=Math.max(3,Math.floor(i));r=Math.max(2,Math.floor(r));const l=Math.min(a+c,Math.PI);let u=0;const h=[];const d=new Zn;const f=new Zn;const p=[];const m=[];const g=[];const y=[];for(let e=0;e<=r;e++){const v=[];const x=e/r;let t=0;if(e==0&&a==0){t=.5/i}else if(e==r&&l==Math.PI){t=-.5/i}for(let e=0;e<=i;e++){const _=e/i;d.x=-n*Math.cos(s+_*o)*Math.sin(a+x*c);d.y=n*Math.cos(a+x*c);d.z=n*Math.sin(s+_*o)*Math.sin(a+x*c);m.push(d.x,d.y,d.z);f.copy(d).normalize();g.push(f.x,f.y,f.z);y.push(_+t,1-x);v.push(u++)}h.push(v)}for(let t=0;t<r;t++){for(let e=0;e<i;e++){const b=h[t][e+1];const M=h[t][e];const w=h[t+1][e];const E=h[t+1][e+1];if(t!==0||a>0)p.push(b,M,E);if(t!==r-1||l<Math.PI)p.push(M,w,E)}}this.setIndex(p);this.setAttribute("position",new Nr(m,3));this.setAttribute("normal",new Nr(g,3));this.setAttribute("uv",new Nr(y,2))}}class Ud extends Hh{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t);this.type="TetrahedronGeometry";this.parameters={radius:e,detail:t}}}class Hd extends Ad{constructor(e,t={}){const n=t.font;if(!(n&&n.isFont)){console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font.");return new Xr}const i=n.generateShapes(e,t.size);t.depth=t.height!==undefined?t.height:50;if(t.bevelThickness===undefined)t.bevelThickness=10;if(t.bevelSize===undefined)t.bevelSize=8;if(t.bevelEnabled===undefined)t.bevelEnabled=false;super(i,t);this.type="TextGeometry"}}class zd extends Xr{constructor(n=1,i=.4,r=8,s=6,o=Math.PI*2){super();this.type="TorusGeometry";this.parameters={radius:n,tube:i,radialSegments:r,tubularSegments:s,arc:o};r=Math.floor(r);s=Math.floor(s);const a=[];const c=[];const l=[];const u=[];const h=new Zn;const d=new Zn;const f=new Zn;for(let t=0;t<=r;t++){for(let e=0;e<=s;e++){const p=e/s*o;const m=t/r*Math.PI*2;d.x=(n+i*Math.cos(m))*Math.cos(p);d.y=(n+i*Math.cos(m))*Math.sin(p);d.z=i*Math.sin(m);c.push(d.x,d.y,d.z);h.x=n*Math.cos(p);h.y=n*Math.sin(p);f.subVectors(d,h).normalize();l.push(f.x,f.y,f.z);u.push(e/s);u.push(t/r)}}for(let t=1;t<=r;t++){for(let e=1;e<=s;e++){const g=(s+1)*t+e-1;const y=(s+1)*(t-1)+e-1;const v=(s+1)*(t-1)+e;const x=(s+1)*t+e;a.push(g,y,x);a.push(y,v,x)}}this.setIndex(a);this.setAttribute("position",new Nr(c,3));this.setAttribute("normal",new Nr(l,3));this.setAttribute("uv",new Nr(u,2))}}class Gd extends Xr{constructor(e=1,n=.4,i=64,r=8,s=2,o=3){super();this.type="TorusKnotGeometry";this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o};i=Math.floor(i);r=Math.floor(r);const a=[];const c=[];const l=[];const u=[];const h=new Zn;const d=new Zn;const f=new Zn;const p=new Zn;const m=new Zn;const g=new Zn;const y=new Zn;for(let t=0;t<=i;++t){const x=t/i*s*Math.PI*2;v(x,s,o,e,f);v(x+.01,s,o,e,p);g.subVectors(p,f);y.addVectors(p,f);m.crossVectors(g,y);y.crossVectors(m,g);m.normalize();y.normalize();for(let e=0;e<=r;++e){const _=e/r*Math.PI*2;const b=-n*Math.cos(_);const M=n*Math.sin(_);h.x=f.x+(b*y.x+M*m.x);h.y=f.y+(b*y.y+M*m.y);h.z=f.z+(b*y.z+M*m.z);c.push(h.x,h.y,h.z);d.subVectors(h,f).normalize();l.push(d.x,d.y,d.z);u.push(t/i);u.push(e/r)}}for(let t=1;t<=i;t++){for(let e=1;e<=r;e++){const w=(r+1)*(t-1)+(e-1);const E=(r+1)*t+(e-1);const T=(r+1)*t+e;const S=(r+1)*(t-1)+e;a.push(w,E,S);a.push(E,T,S)}}this.setIndex(a);this.setAttribute("position",new Nr(c,3));this.setAttribute("normal",new Nr(l,3));this.setAttribute("uv",new Nr(u,2));function v(e,t,n,i,r){const s=Math.cos(e);const o=Math.sin(e);const a=n/t*e;const c=Math.cos(a);r.x=i*(2+c)*.5*s;r.y=i*(2+c)*o*.5;r.z=i*Math.sin(a)*.5}}}class kd extends Xr{constructor(o,a=64,c=1,l=8,e=false){super();this.type="TubeGeometry";this.parameters={path:o,tubularSegments:a,radius:c,radialSegments:l,closed:e};const u=o.computeFrenetFrames(a,e);this.tangents=u.tangents;this.normals=u.normals;this.binormals=u.binormals;const h=new Zn;const d=new Zn;const n=new Un;let f=new Zn;const p=[];const m=[];const i=[];const g=[];t();this.setIndex(g);this.setAttribute("position",new Nr(p,3));this.setAttribute("normal",new Nr(m,3));this.setAttribute("uv",new Nr(i,2));function t(){for(let e=0;e<a;e++){r(e)}r(e===false?a:0);y();s()}function r(e){f=o.getPointAt(e/a,f);const t=u.normals[e];const n=u.binormals[e];for(let e=0;e<=l;e++){const i=e/l*Math.PI*2;const r=Math.sin(i);const s=-Math.cos(i);d.x=s*t.x+r*n.x;d.y=s*t.y+r*n.y;d.z=s*t.z+r*n.z;d.normalize();m.push(d.x,d.y,d.z);h.x=f.x+c*d.x;h.y=f.y+c*d.y;h.z=f.z+c*d.z;p.push(h.x,h.y,h.z)}}function s(){for(let t=1;t<=a;t++){for(let e=1;e<=l;e++){const n=(l+1)*(t-1)+(e-1);const i=(l+1)*t+(e-1);const r=(l+1)*t+e;const s=(l+1)*(t-1)+e;g.push(n,i,s);g.push(i,r,s)}}}function y(){for(let t=0;t<=a;t++){for(let e=0;e<=l;e++){n.x=t/a;n.y=e/l;i.push(n.x,n.y)}}}}toJSON(){const e=Xr.prototype.toJSON.call(this);e.path=this.parameters.path.toJSON();return e}}class Vd extends Xr{constructor(e){super();this.type="WireframeGeometry";if(e.isGeometry===true){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const i=[];const r=[0,0],s={};const o=new Zn;if(e.index!==null){const a=e.attributes.position;const c=e.index;let n=e.groups;if(n.length===0){n=[{start:0,count:c.count,materialIndex:0}]}for(let e=0,t=n.length;e<t;++e){const l=n[e];const u=l.start;const h=l.count;for(let t=u,e=u+h;t<e;t+=3){for(let e=0;e<3;e++){const d=c.getX(t+e);const f=c.getX(t+(e+1)%3);r[0]=Math.min(d,f);r[1]=Math.max(d,f);const p=r[0]+","+r[1];if(s[p]===undefined){s[p]={index1:r[0],index2:r[1]}}}}}for(const p in s){const t=s[p];o.fromBufferAttribute(a,t.index1);i.push(o.x,o.y,o.z);o.fromBufferAttribute(a,t.index2);i.push(o.x,o.y,o.z)}}else{const a=e.attributes.position;for(let t=0,e=a.count/3;t<e;t++){for(let e=0;e<3;e++){const n=3*t+e;o.fromBufferAttribute(a,n);i.push(o.x,o.y,o.z);const m=3*t+(e+1)%3;o.fromBufferAttribute(a,m);i.push(o.x,o.y,o.z)}}}this.setAttribute("position",new Nr(i,3))}}var Wd=Object.freeze({__proto__:null,BoxGeometry:fs,BoxBufferGeometry:fs,CircleGeometry:Oh,CircleBufferGeometry:Oh,ConeGeometry:Uh,ConeBufferGeometry:Uh,CylinderGeometry:Bh,CylinderBufferGeometry:Bh,DodecahedronGeometry:zh,DodecahedronBufferGeometry:zh,EdgesGeometry:jh,ExtrudeGeometry:Ad,ExtrudeBufferGeometry:Ad,IcosahedronGeometry:Cd,IcosahedronBufferGeometry:Cd,LatheGeometry:Pd,LatheBufferGeometry:Pd,OctahedronGeometry:Id,OctahedronBufferGeometry:Id,ParametricGeometry:Dd,ParametricBufferGeometry:Dd,PlaneGeometry:Ds,PlaneBufferGeometry:Ds,PolyhedronGeometry:Hh,PolyhedronBufferGeometry:Hh,RingGeometry:Nd,RingBufferGeometry:Nd,ShapeGeometry:Fd,ShapeBufferGeometry:Fd,SphereGeometry:Bd,SphereBufferGeometry:Bd,TetrahedronGeometry:Ud,TetrahedronBufferGeometry:Ud,TextGeometry:Hd,TextBufferGeometry:Hd,TorusGeometry:zd,TorusBufferGeometry:zd,TorusKnotGeometry:Gd,TorusKnotBufferGeometry:Gd,TubeGeometry:kd,TubeBufferGeometry:kd,WireframeGeometry:Vd});class jd extends pr{constructor(e){super();this.type="ShadowMaterial";this.color=new br(0);this.transparent=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);return this}}jd.prototype.isShadowMaterial=true;class Xd extends xs{constructor(e){super(e);this.type="RawShaderMaterial"}}Xd.prototype.isRawShaderMaterial=true;function qd(e){pr.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new br(16777215);this.roughness=1;this.metalness=0;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new br(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=sn;this.normalScale=new Un(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.vertexTangents=false;this.setValues(e)}qd.prototype=Object.create(pr.prototype);qd.prototype.constructor=qd;qd.prototype.isMeshStandardMaterial=true;qd.prototype.copy=function(e){pr.prototype.copy.call(this,e);this.defines={STANDARD:""};this.color.copy(e.color);this.roughness=e.roughness;this.metalness=e.metalness;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.roughnessMap=e.roughnessMap;this.metalnessMap=e.metalnessMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.envMapIntensity=e.envMapIntensity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.flatShading=e.flatShading;this.vertexTangents=e.vertexTangents;return this};function Yd(e){qd.call(this);this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.clearcoat=0;this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Un(1,1);this.clearcoatNormalMap=null;this.reflectivity=.5;Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Bn.clamp(2.5*(e-1)/(e+1),0,1)}});this.sheen=null;this.transmission=0;this.transmissionMap=null;this.setValues(e)}Yd.prototype=Object.create(qd.prototype);Yd.prototype.constructor=Yd;Yd.prototype.isMeshPhysicalMaterial=true;Yd.prototype.copy=function(e){qd.prototype.copy.call(this,e);this.defines={STANDARD:"",PHYSICAL:""};this.clearcoat=e.clearcoat;this.clearcoatMap=e.clearcoatMap;this.clearcoatRoughness=e.clearcoatRoughness;this.clearcoatRoughnessMap=e.clearcoatRoughnessMap;this.clearcoatNormalMap=e.clearcoatNormalMap;this.clearcoatNormalScale.copy(e.clearcoatNormalScale);this.reflectivity=e.reflectivity;if(e.sheen){this.sheen=(this.sheen||new br).copy(e.sheen)}else{this.sheen=null}this.transmission=e.transmission;this.transmissionMap=e.transmissionMap;return this};class Zd extends pr{constructor(e){super();this.type="MeshPhongMaterial";this.color=new br(16777215);this.specular=new br(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new br(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=sn;this.normalScale=new Un(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=u;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.specular.copy(e.specular);this.shininess=e.shininess;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.flatShading=e.flatShading;return this}}Zd.prototype.isMeshPhongMaterial=true;class Jd extends pr{constructor(e){super();this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new br(16777215);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new br(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=sn;this.normalScale=new Un(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.gradientMap=e.gradientMap;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this}}Jd.prototype.isMeshToonMaterial=true;class Kd extends pr{constructor(e){super();this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=sn;this.normalScale=new Un(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(e)}copy(e){super.copy(e);this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.flatShading=e.flatShading;return this}}Kd.prototype.isMeshNormalMaterial=true;class Qd extends pr{constructor(e){super();this.type="MeshLambertMaterial";this.color=new br(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new br(0);this.emissiveIntensity=1;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=u;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this}}Qd.prototype.isMeshLambertMaterial=true;class $d extends pr{constructor(e){super();this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new br(16777215);this.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=sn;this.normalScale=new Un(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(e)}copy(e){super.copy(e);this.defines={MATCAP:""};this.color.copy(e.color);this.matcap=e.matcap;this.map=e.map;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.flatShading=e.flatShading;return this}}$d.prototype.isMeshMatcapMaterial=true;class ef extends ph{constructor(e){super();this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(e)}copy(e){super.copy(e);this.scale=e.scale;this.dashSize=e.dashSize;this.gapSize=e.gapSize;return this}}ef.prototype.isLineDashedMaterial=true;var tf=Object.freeze({__proto__:null,ShadowMaterial:jd,SpriteMaterial:Nu,RawShaderMaterial:Xd,ShaderMaterial:xs,PointsMaterial:Th,MeshPhysicalMaterial:Yd,MeshStandardMaterial:qd,MeshPhongMaterial:Zd,MeshToonMaterial:Jd,MeshNormalMaterial:Kd,MeshLambertMaterial:Qd,MeshDepthMaterial:du,MeshDistanceMaterial:fu,MeshBasicMaterial:Mr,MeshMatcapMaterial:$d,LineDashedMaterial:ef,LineBasicMaterial:ph,Material:pr});const nf={arraySlice:function(e,t,n){if(nf.isTypedArray(e)){return new e.constructor(e.subarray(t,n!==undefined?n:e.length))}return e.slice(t,n)},convertArray:function(e,t,n){if(!e||!n&&e.constructor===t)return e;if(typeof t.BYTES_PER_ELEMENT==="number"){return new t(e)}return Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){function e(e,t){return n[e]-n[t]}const t=n.length;const i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;i.sort(e);return i},sortedArray:function(n,i,r){const s=n.length;const o=new n.constructor(s);for(let e=0,t=0;t!==s;++e){const a=r[e]*i;for(let e=0;e!==i;++e){o[t++]=n[a+e]}}return o},flattenJSON:function(e,t,n,i){let r=1,s=e[0];while(s!==undefined&&s[i]===undefined){s=e[r++]}if(s===undefined)return;let o=s[i];if(o===undefined)return;if(Array.isArray(o)){do{o=s[i];if(o!==undefined){t.push(s.time);n.push.apply(n,o)}s=e[r++]}while(s!==undefined)}else if(o.toArray!==undefined){do{o=s[i];if(o!==undefined){t.push(s.time);o.toArray(n,n.length)}s=e[r++]}while(s!==undefined)}else{do{o=s[i];if(o!==undefined){t.push(s.time);n.push(o)}s=e[r++]}while(s!==undefined)}},subclip:function(e,t,n,i,r=30){const s=e.clone();s.name=t;const o=[];for(let e=0;e<s.tracks.length;++e){const c=s.tracks[e];const l=c.getValueSize();const u=[];const h=[];for(let t=0;t<c.times.length;++t){const d=c.times[t]*r;if(d<n||d>=i)continue;u.push(c.times[t]);for(let e=0;e<l;++e){h.push(c.values[t*l+e])}}if(u.length===0)continue;c.times=nf.convertArray(u,c.times.constructor);c.values=nf.convertArray(h,c.values.constructor);o.push(c)}s.tracks=o;let a=Infinity;for(let e=0;e<s.tracks.length;++e){if(a>s.tracks[e].times[0]){a=s.tracks[e].times[0]}}for(let e=0;e<s.tracks.length;++e){s.tracks[e].shift(-1*a)}s.resetDuration();return s},makeClipAdditive:function(r,e=0,s=r,t=30){if(t<=0)t=30;const n=s.tracks.length;const o=e/t;for(let i=0;i<n;++i){const a=s.tracks[i];const c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=r.tracks.find(function(e){return e.name===a.name&&e.ValueTypeName===c});if(l===undefined)continue;let e=0;const u=a.getValueSize();if(a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){e=u/3}let t=0;const h=l.getValueSize();if(l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){t=h/3}const d=a.times.length-1;let n;if(o<=a.times[0]){const p=e;const m=u-e;n=nf.arraySlice(a.values,p,m)}else if(o>=a.times[d]){const p=d*u+e;const m=p+u-e;n=nf.arraySlice(a.values,p,m)}else{const g=a.createInterpolant();const p=e;const m=u-e;g.evaluate(o);n=nf.arraySlice(g.resultBuffer,p,m)}if(c==="quaternion"){const y=(new Yn).fromArray(n).normalize().conjugate();y.toArray(n)}const f=l.times.length;for(let e=0;e<f;++e){const v=e*h+t;if(c==="quaternion"){Yn.multiplyQuaternionsFlat(l.values,v,n,0,l.values,v)}else{const x=h-t*2;for(let e=0;e<x;++e){l.values[v+e]-=n[e]}}}}r.blendMode=Wt;return r}};function rf(e,t,n,i){this.parameterPositions=e;this._cachedIndex=0;this.resultBuffer=i!==undefined?i:new t.constructor(n);this.sampleValues=t;this.valueSize=n}Object.assign(rf.prototype,{evaluate:function(t){const n=this.parameterPositions;let i=this._cachedIndex,r=n[i],s=n[i-1];e:{t:{let e;n:{i:if(!(t<r)){for(let e=i+2;;){if(r===undefined){if(t<s)break i;i=n.length;this._cachedIndex=i;return this.afterEnd_(i-1,t,s)}if(i===e)break;s=r;r=n[++i];if(t<r){break t}}e=n.length;break n}if(!(t>=s)){const o=n[1];if(t<o){i=2;s=o}for(let e=i-2;;){if(s===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,r)}if(i===e)break;r=s;s=n[--i-1];if(t>=s){break t}}e=i;i=0;break n}break e}while(i<e){const a=i+e>>>1;if(t<n[a]){e=a}else{i=a+1}}r=n[i];s=n[i-1];if(s===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,r)}if(r===undefined){i=n.length;this._cachedIndex=i;return this.afterEnd_(i-1,s,t)}}this._cachedIndex=i;this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e){t[e]=n[r+e]}return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(rf.prototype,{beforeStart_:rf.prototype.copySampleValue_,afterEnd_:rf.prototype.copySampleValue_});function sf(e,t,n,i){rf.call(this,e,t,n,i);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0}sf.prototype=Object.assign(Object.create(rf.prototype),{constructor:sf,DefaultSettings_:{endingStart:zt,endingEnd:zt},intervalChanged_:function(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,o=i[r],a=i[s];if(o===undefined){switch(this.getSettings_().endingStart){case Gt:r=e;o=2*t-n;break;case kt:r=i.length-2;o=t+i[r]-i[r+1];break;default:r=e;o=n}}if(a===undefined){switch(this.getSettings_().endingEnd){case Gt:s=e;a=2*n-t;break;case kt:s=1;a=n+i[1]-i[0];break;default:s=e-1;a=t}}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-o);this._weightNext=c/(a-n);this._offsetPrev=r*l;this._offsetNext=s*l},interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-t)/(i-t),p=f*f,m=p*f;const g=-h*m+2*h*p-h*f;const y=(1+h)*m+(-1.5-2*h)*p+(-.5+h)*f+1;const v=(-1-d)*m+(1.5+d)*p+.5*f;const x=d*m-d*p;for(let e=0;e!==o;++e){r[e]=g*s[l+e]+y*s[c+e]+v*s[a+e]+x*s[u+e]}return r}});function of(e,t,n,i){rf.call(this,e,t,n,i)}of.prototype=Object.assign(Object.create(rf.prototype),{constructor:of,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=(n-t)/(i-t),u=1-l;for(let e=0;e!==o;++e){r[e]=s[c+e]*u+s[a+e]*l}return r}});function af(e,t,n,i){rf.call(this,e,t,n,i)}af.prototype=Object.assign(Object.create(rf.prototype),{constructor:af,interpolate_:function(e){return this.copySampleValue_(e-1)}});class cf{constructor(e,t,n,i){if(e===undefined)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===undefined||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e;this.times=nf.convertArray(t,this.TimeBufferType);this.values=nf.convertArray(n,this.ValueBufferType);this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON){n=t.toJSON(e)}else{n={name:e.name,times:nf.convertArray(e.times,Array),values:nf.convertArray(e.values,Array)};const i=e.getInterpolation();if(i!==e.DefaultInterpolation){n.interpolation=i}}n.type=e.ValueTypeName;return n}InterpolantFactoryMethodDiscrete(e){return new af(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new of(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new sf(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Bt:t=this.InterpolantFactoryMethodDiscrete;break;case Ut:t=this.InterpolantFactoryMethodLinear;break;case Ht:t=this.InterpolantFactoryMethodSmooth;break}if(t===undefined){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(e!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation)}else{throw new Error(n)}}console.warn("THREE.KeyframeTrack:",n);return this}this.createInterpolant=t;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Bt;case this.InterpolantFactoryMethodLinear:return Ut;case this.InterpolantFactoryMethodSmooth:return Ht}}getValueSize(){return this.values.length/this.times.length}shift(n){if(n!==0){const i=this.times;for(let e=0,t=i.length;e!==t;++e){i[e]+=n}}return this}scale(n){if(n!==1){const i=this.times;for(let e=0,t=i.length;e!==t;++e){i[e]*=n}}return this}trim(e,t){const n=this.times,i=n.length;let r=0,s=i-1;while(r!==i&&n[r]<e){++r}while(s!==-1&&n[s]>t){--s}++s;if(r!==0||s!==i){if(r>=s){s=Math.max(s,1);r=s-1}const o=this.getValueSize();this.times=nf.arraySlice(n,r,s);this.values=nf.arraySlice(this.values,r*o,s*o)}return this}validate(){let n=true;const e=this.getValueSize();if(e-Math.floor(e)!==0){console.error("THREE.KeyframeTrack: Invalid value size in track.",this);n=false}const t=this.times,i=this.values,r=t.length;if(r===0){console.error("THREE.KeyframeTrack: Track is empty.",this);n=false}let s=null;for(let e=0;e!==r;e++){const o=t[e];if(typeof o==="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,o);n=false;break}if(s!==null&&s>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,o,s);n=false;break}s=o}if(i!==undefined){if(nf.isTypedArray(i)){for(let e=0,t=i.length;e!==t;++e){const a=i[e];if(isNaN(a)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,a);n=false;break}}}}return n}optimize(){const n=nf.arraySlice(this.times),i=nf.arraySlice(this.values),r=this.getValueSize(),s=this.getInterpolation()===Ht,o=n.length-1;let a=1;for(let e=1;e<o;++e){let t=false;const c=n[e];const l=n[e+1];if(c!==l&&(e!==1||c!==n[0])){if(!s){const u=e*r,h=u-r,d=u+r;for(let e=0;e!==r;++e){const f=i[u+e];if(f!==i[h+e]||f!==i[d+e]){t=true;break}}}else{t=true}}if(t){if(e!==a){n[a]=n[e];const p=e*r,m=a*r;for(let e=0;e!==r;++e){i[m+e]=i[p+e]}}++a}}if(o>0){n[a]=n[o];for(let e=o*r,t=a*r,n=0;n!==r;++n){i[t+n]=i[e+n]}++a}if(a!==n.length){this.times=nf.arraySlice(n,0,a);this.values=nf.arraySlice(i,0,a*r)}else{this.times=n;this.values=i}return this}clone(){const e=nf.arraySlice(this.times,0);const t=nf.arraySlice(this.values,0);const n=this.constructor;const i=new n(this.name,e,t);i.createInterpolant=this.createInterpolant;return i}}cf.prototype.TimeBufferType=Float32Array;cf.prototype.ValueBufferType=Float32Array;cf.prototype.DefaultInterpolation=Ut;class lf extends cf{}lf.prototype.ValueTypeName="bool";lf.prototype.ValueBufferType=Array;lf.prototype.DefaultInterpolation=Bt;lf.prototype.InterpolantFactoryMethodLinear=undefined;lf.prototype.InterpolantFactoryMethodSmooth=undefined;class uf extends cf{}uf.prototype.ValueTypeName="color";class hf extends cf{}hf.prototype.ValueTypeName="number";function df(e,t,n,i){rf.call(this,e,t,n,i)}df.prototype=Object.assign(Object.create(rf.prototype),{constructor:df,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(i-t);let c=e*o;for(let e=c+o;c!==e;c+=4){Yn.slerpFlat(r,0,s,c-o,s,c,a)}return r}});class ff extends cf{InterpolantFactoryMethodLinear(e){return new df(this.times,this.values,this.getValueSize(),e)}}ff.prototype.ValueTypeName="quaternion";ff.prototype.DefaultInterpolation=Ut;ff.prototype.InterpolantFactoryMethodSmooth=undefined;class pf extends cf{}pf.prototype.ValueTypeName="string";pf.prototype.ValueBufferType=Array;pf.prototype.DefaultInterpolation=Bt;pf.prototype.InterpolantFactoryMethodLinear=undefined;pf.prototype.InterpolantFactoryMethodSmooth=undefined;class mf extends cf{}mf.prototype.ValueTypeName="vector";class gf{constructor(e,t=-1,n,i=Vt){this.name=e;this.tracks=n;this.duration=t;this.blendMode=i;this.uuid=Bn.generateUUID();if(this.duration<0){this.resetDuration()}}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let e=0,t=i.length;e!==t;++e){n.push(vf(i[e]).scale(r))}const t=new this(e.name,e.duration,n,e.blendMode);t.uuid=e.uuid;return t}static toJSON(e){const n=[],i=e.tracks;const t={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=i.length;e!==t;++e){n.push(cf.toJSON(i[e]))}return t}static CreateFromMorphTargetSequence(e,i,r,s){const o=i.length;const a=[];for(let n=0;n<o;n++){let e=[];let t=[];e.push((n+o-1)%o,n,(n+1)%o);t.push(0,1,0);const c=nf.getKeyframeOrder(e);e=nf.sortedArray(e,1,c);t=nf.sortedArray(t,1,c);if(!s&&e[0]===0){e.push(o);t.push(t[0])}a.push(new hf(".morphTargetInfluences["+i[n].name+"]",e,t).scale(1/r))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let e=0;e<n.length;e++){if(n[e].name===t){return n[e]}}return null}static CreateClipsFromMorphTargetSequences(n,e,t){const i={};const r=/^([\w-]*?)([\d]+)$/;for(let e=0,t=n.length;e<t;e++){const o=n[e];const a=o.name.match(r);if(a&&a.length>1){const c=a[1];let e=i[c];if(!e){i[c]=e=[]}e.push(o)}}const s=[];for(const c in i){s.push(this.CreateFromMorphTargetSequence(c,i[c],e,t))}return s}static parseAnimation(e,t){if(!e){console.error("THREE.AnimationClip: No animation in JSONLoader data.");return null}const n=function(e,t,n,i,r){if(n.length!==0){const s=[];const o=[];nf.flattenJSON(n,s,o,i);if(s.length!==0){r.push(new e(t,s,o))}}};const i=[];const r=e.name||"default";const s=e.fps||30;const o=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let e=0;e<c.length;e++){const u=c[e].keys;if(!u||u.length===0)continue;if(u[0].morphTargets){const h={};let t;for(t=0;t<u.length;t++){if(u[t].morphTargets){for(let e=0;e<u[t].morphTargets.length;e++){h[u[t].morphTargets[e]]=-1}}}for(const d in h){const f=[];const p=[];for(let e=0;e!==u[t].morphTargets.length;++e){const m=u[t];f.push(m.time);p.push(m.morphTarget===d?1:0)}i.push(new hf(".morphTargetInfluence["+d+"]",f,p))}a=h.length*(s||1)}else{const g=".bones["+t[e].name+"]";n(mf,g+".position",u,"pos",i);n(ff,g+".quaternion",u,"rot",i);n(mf,g+".scale",u,"scl",i)}}if(i.length===0){return null}const l=new this(r,a,i,o);return l}resetDuration(){const n=this.tracks;let i=0;for(let e=0,t=n.length;e!==t;++e){const r=this.tracks[e];i=Math.max(i,r.times[r.times.length-1])}this.duration=i;return this}trim(){for(let e=0;e<this.tracks.length;e++){this.tracks[e].trim(0,this.duration)}return this}validate(){let t=true;for(let e=0;e<this.tracks.length;e++){t=t&&this.tracks[e].validate()}return t}optimize(){for(let e=0;e<this.tracks.length;e++){this.tracks[e].optimize()}return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++){t.push(this.tracks[e].clone())}return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function yf(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return hf;case"vector":case"vector2":case"vector3":case"vector4":return mf;case"color":return uf;case"quaternion":return ff;case"bool":case"boolean":return lf;case"string":return pf}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function vf(e){if(e.type===undefined){throw new Error("THREE.KeyframeTrack: track type undefined, can not parse")}const t=yf(e.type);if(e.times===undefined){const n=[],i=[];nf.flattenJSON(e.keys,n,i,"value");e.times=n;e.values=i}if(t.parse!==undefined){return t.parse(e)}else{return new t(e.name,e.times,e.values,e.interpolation)}}const xf={enabled:false,files:{},add:function(e,t){if(this.enabled===false)return;this.files[e]=t},get:function(e){if(this.enabled===false)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function _f(e,t,n){const i=this;let r=false;let s=0;let o=0;let a=undefined;const c=[];this.onStart=undefined;this.onLoad=e;this.onProgress=t;this.onError=n;this.itemStart=function(e){o++;if(r===false){if(i.onStart!==undefined){i.onStart(e,s,o)}}r=true};this.itemEnd=function(e){s++;if(i.onProgress!==undefined){i.onProgress(e,s,o)}if(s===o){r=false;if(i.onLoad!==undefined){i.onLoad()}}};this.itemError=function(e){if(i.onError!==undefined){i.onError(e)}};this.resolveURL=function(e){if(a){return a(e)}return e};this.setURLModifier=function(e){a=e;return this};this.addHandler=function(e,t){c.push(e,t);return this};this.removeHandler=function(e){const t=c.indexOf(e);if(t!==-1){c.splice(t,2)}return this};this.getHandler=function(n){for(let e=0,t=c.length;e<t;e+=2){const i=c[e];const r=c[e+1];if(i.global)i.lastIndex=0;if(i.test(n)){return r}}return null}}const bf=new _f;function Mf(e){this.manager=e!==undefined?e:bf;this.crossOrigin="anonymous";this.withCredentials=false;this.path="";this.resourcePath="";this.requestHeader={}}Object.assign(Mf.prototype,{load:function(){},loadAsync:function(n,i){const r=this;return new Promise(function(e,t){r.load(n,e,i,t)})},parse:function(){},setCrossOrigin:function(e){this.crossOrigin=e;return this},setWithCredentials:function(e){this.withCredentials=e;return this},setPath:function(e){this.path=e;return this},setResourcePath:function(e){this.resourcePath=e;return this},setRequestHeader:function(e){this.requestHeader=e;return this}});const wf={};function Ef(e){Mf.call(this,e)}Ef.prototype=Object.assign(Object.create(Mf.prototype),{constructor:Ef,load:function(o,n,e,i){if(o===undefined)o="";if(this.path!==undefined)o=this.path+o;o=this.manager.resolveURL(o);const a=this;const t=xf.get(o);if(t!==undefined){a.manager.itemStart(o);setTimeout(function(){if(n)n(t);a.manager.itemEnd(o)},0);return t}if(wf[o]!==undefined){wf[o].push({onLoad:n,onProgress:e,onError:i});return}const r=/^data:(.*?)(;base64)?,(.*)$/;const s=o.match(r);let c;if(s){const l=s[1];const u=!!s[2];let t=s[3];t=decodeURIComponent(t);if(u)t=atob(t);try{let e;const h=(this.responseType||"").toLowerCase();switch(h){case"arraybuffer":case"blob":const d=new Uint8Array(t.length);for(let e=0;e<t.length;e++){d[e]=t.charCodeAt(e)}if(h==="blob"){e=new Blob([d.buffer],{type:l})}else{e=d.buffer}break;case"document":const f=new DOMParser;e=f.parseFromString(t,l);break;case"json":e=JSON.parse(t);break;default:e=t;break}setTimeout(function(){if(n)n(e);a.manager.itemEnd(o)},0)}catch(e){setTimeout(function(){if(i)i(e);a.manager.itemError(o);a.manager.itemEnd(o)},0)}}else{wf[o]=[];wf[o].push({onLoad:n,onProgress:e,onError:i});c=new XMLHttpRequest;c.open("GET",o,true);c.addEventListener("load",function(n){const i=this.response;const r=wf[o];delete wf[o];if(this.status===200||this.status===0){if(this.status===0)console.warn("THREE.FileLoader: HTTP Status 0 received.");xf.add(o,i);for(let e=0,t=r.length;e<t;e++){const s=r[e];if(s.onLoad)s.onLoad(i)}a.manager.itemEnd(o)}else{for(let e=0,t=r.length;e<t;e++){const s=r[e];if(s.onError)s.onError(n)}a.manager.itemError(o);a.manager.itemEnd(o)}},false);c.addEventListener("progress",function(n){const i=wf[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];if(r.onProgress)r.onProgress(n)}},false);c.addEventListener("error",function(n){const i=wf[o];delete wf[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];if(r.onError)r.onError(n)}a.manager.itemError(o);a.manager.itemEnd(o)},false);c.addEventListener("abort",function(n){const i=wf[o];delete wf[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];if(r.onError)r.onError(n)}a.manager.itemError(o);a.manager.itemEnd(o)},false);if(this.responseType!==undefined)c.responseType=this.responseType;if(this.withCredentials!==undefined)c.withCredentials=this.withCredentials;if(c.overrideMimeType)c.overrideMimeType(this.mimeType!==undefined?this.mimeType:"text/plain");for(const p in this.requestHeader){c.setRequestHeader(p,this.requestHeader[p])}c.send(null)}a.manager.itemStart(o);return c},setResponseType:function(e){this.responseType=e;return this},setMimeType:function(e){this.mimeType=e;return this}});class Tf extends Mf{constructor(e){super(e)}load(t,n,e,i){const r=this;const s=new Ef(this.manager);s.setPath(this.path);s.setRequestHeader(this.requestHeader);s.setWithCredentials(this.withCredentials);s.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){if(i){i(e)}else{console.error(e)}r.manager.itemError(t)}},e,i)}parse(t){const n=[];for(let e=0;e<t.length;e++){const i=gf.parse(t[e]);n.push(i)}return n}}function Sf(e){Mf.call(this,e)}Sf.prototype=Object.assign(Object.create(Mf.prototype),{constructor:Sf,load:function(i,r,e,t){const s=this;const o=[];const a=new Dh;const c=new Ef(this.manager);c.setPath(this.path);c.setResponseType("arraybuffer");c.setRequestHeader(this.requestHeader);c.setWithCredentials(s.withCredentials);let l=0;function n(n){c.load(i[n],function(e){const t=s.parse(e,true);o[n]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps};l+=1;if(l===6){if(t.mipmapCount===1)a.minFilter=se;a.image=o;a.format=t.format;a.needsUpdate=true;if(r)r(a)}},e,t)}if(Array.isArray(i)){for(let e=0,t=i.length;e<t;++e){n(e)}}else{c.load(i,function(e){const n=s.parse(e,true);if(n.isCubemap){const i=n.mipmaps.length/n.mipmapCount;for(let t=0;t<i;t++){o[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++){o[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]);o[t].format=n.format;o[t].width=n.width;o[t].height=n.height}}a.image=o}else{a.image.width=n.width;a.image.height=n.height;a.mipmaps=n.mipmaps}if(n.mipmapCount===1){a.minFilter=se}a.format=n.format;a.needsUpdate=true;if(r)r(a)},e,t)}return a}});class Af extends Mf{constructor(e){super(e)}load(t,e,n,i){if(this.path!==undefined)t=this.path+t;t=this.manager.resolveURL(t);const r=this;const s=xf.get(t);if(s!==undefined){r.manager.itemStart(t);setTimeout(function(){if(e)e(s);r.manager.itemEnd(t)},0);return s}const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,false);o.removeEventListener("error",c,false);xf.add(t,this);if(e)e(this);r.manager.itemEnd(t)}function c(e){o.removeEventListener("load",a,false);o.removeEventListener("error",c,false);if(i)i(e);r.manager.itemError(t);r.manager.itemEnd(t)}o.addEventListener("load",a,false);o.addEventListener("error",c,false);if(t.substr(0,5)!=="data:"){if(this.crossOrigin!==undefined)o.crossOrigin=this.crossOrigin}r.manager.itemStart(t);o.src=t;return o}}class Rf extends Mf{constructor(e){super(e)}load(n,i,e,r){const s=new Ts;const o=new Af(this.manager);o.setCrossOrigin(this.crossOrigin);o.setPath(this.path);let a=0;function t(t){o.load(n[t],function(e){s.images[t]=e;a++;if(a===6){s.needsUpdate=true;if(i)i(s)}},undefined,r)}for(let e=0;e<n.length;++e){t(e)}return s}}function Lf(e){Mf.call(this,e)}Lf.prototype=Object.assign(Object.create(Mf.prototype),{constructor:Lf,load:function(e,n,t,i){const r=this;const s=new As;const o=new Ef(this.manager);o.setResponseType("arraybuffer");o.setRequestHeader(this.requestHeader);o.setPath(this.path);o.setWithCredentials(r.withCredentials);o.load(e,function(e){const t=r.parse(e);if(!t)return;if(t.image!==undefined){s.image=t.image}else if(t.data!==undefined){s.image.width=t.width;s.image.height=t.height;s.image.data=t.data}s.wrapS=t.wrapS!==undefined?t.wrapS:ee;s.wrapT=t.wrapT!==undefined?t.wrapT:ee;s.magFilter=t.magFilter!==undefined?t.magFilter:se;s.minFilter=t.minFilter!==undefined?t.minFilter:se;s.anisotropy=t.anisotropy!==undefined?t.anisotropy:1;if(t.encoding!==undefined){s.encoding=t.encoding}if(t.flipY!==undefined){s.flipY=t.flipY}if(t.format!==undefined){s.format=t.format}if(t.type!==undefined){s.type=t.type}if(t.mipmaps!==undefined){s.mipmaps=t.mipmaps;s.minFilter=ae}if(t.mipmapCount===1){s.minFilter=se}if(t.generateMipmaps!==undefined){s.generateMipmaps=t.generateMipmaps}s.needsUpdate=true;if(n)n(s,t)},t,i);return s}});function Cf(e){Mf.call(this,e)}Cf.prototype=Object.assign(Object.create(Mf.prototype),{constructor:Cf,load:function(n,i,e,t){const r=new Vn;const s=new Af(this.manager);s.setCrossOrigin(this.crossOrigin);s.setPath(this.path);s.load(n,function(e){r.image=e;const t=n.search(/\.jpe?g($|\?)/i)>0||n.search(/^data\:image\/jpeg/)===0;r.format=t?Je:Ke;r.needsUpdate=true;if(i!==undefined){i(r)}},e,t);return r}});function Pf(){this.type="Curve";this.arcLengthDivisions=200}Object.assign(Pf.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(t=5){const n=[];for(let e=0;e<=t;e++){n.push(this.getPoint(e/t))}return n},getSpacedPoints:function(t=5){const n=[];for(let e=0;e<=t;e++){n.push(this.getPointAt(e/t))}return n},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(t){if(t===undefined)t=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;const n=[];let i,r=this.getPoint(0);let s=0;n.push(0);for(let e=1;e<=t;e++){i=this.getPoint(e/t);s+=i.distanceTo(r);n.push(s);r=i}this.cacheArcLengths=n;return n},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;if(t){s=t}else{s=e*n[r-1]}let o=0,a=r-1,c;while(o<=a){i=Math.floor(o+(a-o)/2);c=n[i]-s;if(c<0){o=i+1}else if(c>0){a=i-1}else{a=i;break}}i=a;if(n[i]===s){return i/(r-1)}const l=n[i];const u=n[i+1];const h=u-l;const d=(s-l)/h;const f=(i+d)/(r-1);return f},getTangent:function(e,t){const n=1e-4;let i=e-n;let r=e+n;if(i<0)i=0;if(r>1)r=1;const s=this.getPoint(i);const o=this.getPoint(r);const a=t||(s.isVector2?new Un:new Zn);a.copy(o).sub(s).normalize();return a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(n,e){const t=new Zn;const i=[];const r=[];const s=[];const o=new Zn;const a=new Si;for(let e=0;e<=n;e++){const d=e/n;i[e]=this.getTangentAt(d,new Zn);i[e].normalize()}r[0]=new Zn;s[0]=new Zn;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x);const u=Math.abs(i[0].y);const h=Math.abs(i[0].z);if(l<=c){c=l;t.set(1,0,0)}if(u<=c){c=u;t.set(0,1,0)}if(h<=c){t.set(0,0,1)}o.crossVectors(i[0],t).normalize();r[0].crossVectors(i[0],o);s[0].crossVectors(i[0],r[0]);for(let e=1;e<=n;e++){r[e]=r[e-1].clone();s[e]=s[e-1].clone();o.crossVectors(i[e-1],i[e]);if(o.length()>Number.EPSILON){o.normalize();const f=Math.acos(Bn.clamp(i[e-1].dot(i[e]),-1,1));r[e].applyMatrix4(a.makeRotationAxis(o,f))}s[e].crossVectors(i[e],r[e])}if(e===true){let t=Math.acos(Bn.clamp(r[0].dot(r[n]),-1,1));t/=n;if(i[0].dot(o.crossVectors(r[0],r[n]))>0){t=-t}for(let e=1;e<=n;e++){r[e].applyMatrix4(a.makeRotationAxis(i[e],t*e));s[e].crossVectors(i[e],r[e])}}return{tangents:i,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.arcLengthDivisions=e.arcLengthDivisions;return this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};e.arcLengthDivisions=this.arcLengthDivisions;e.type=this.type;return e},fromJSON:function(e){this.arcLengthDivisions=e.arcLengthDivisions;return this}});class If extends Pf{constructor(e=0,t=0,n=1,i=1,r=0,s=Math.PI*2,o=false,a=0){super();this.type="EllipseCurve";this.aX=e;this.aY=t;this.xRadius=n;this.yRadius=i;this.aStartAngle=r;this.aEndAngle=s;this.aClockwise=o;this.aRotation=a}getPoint(e,t){const n=t||new Un;const i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;while(r<0)r+=i;while(r>i)r-=i;if(r<Number.EPSILON){if(s){r=0}else{r=i}}if(this.aClockwise===true&&!s){if(r===i){r=-i}else{r=r-i}}const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o);let c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const l=Math.cos(this.aRotation);const u=Math.sin(this.aRotation);const h=a-this.aX;const d=c-this.aY;a=h*l-d*u+this.aX;c=h*u+d*l+this.aY}return n.set(a,c)}copy(e){super.copy(e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this}toJSON(){const e=super.toJSON();e.aX=this.aX;e.aY=this.aY;e.xRadius=this.xRadius;e.yRadius=this.yRadius;e.aStartAngle=this.aStartAngle;e.aEndAngle=this.aEndAngle;e.aClockwise=this.aClockwise;e.aRotation=this.aRotation;return e}fromJSON(e){super.fromJSON(e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this}}If.prototype.isEllipseCurve=true;class Df extends If{constructor(e,t,n,i,r,s){super(e,t,n,n,i,r,s);this.type="ArcCurve"}}Df.prototype.isArcCurve=true;function Nf(){let r=0,s=0,o=0,a=0;function l(e,t,n,i){r=e;s=n;o=-3*e+3*t-2*n-i;a=2*e-2*t+n+i}return{initCatmullRom:function(e,t,n,i,r){l(t,n,r*(n-e),r*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,r,s,o){let a=(t-e)/r-(n-e)/(r+s)+(n-t)/s;let c=(n-t)/s-(i-t)/(s+o)+(i-n)/o;a*=s;c*=s;l(t,n,a,c)},calc:function(e){const t=e*e;const n=t*e;return r+s*e+o*t+a*n}}}const Ff=new Zn;const Of=new Nf,Bf=new Nf,Uf=new Nf;class Hf extends Pf{constructor(e=[],t=false,n="centripetal",i=.5){super();this.type="CatmullRomCurve3";this.points=e;this.closed=t;this.curveType=n;this.tension=i}getPoint(e,t=new Zn){const n=t;const i=this.points;const r=i.length;const s=(r-(this.closed?0:1))*e;let o=Math.floor(s);let a=s-o;if(this.closed){o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r}else if(a===0&&o===r-1){o=r-2;a=1}let c,l;if(this.closed||o>0){c=i[(o-1)%r]}else{Ff.subVectors(i[0],i[1]).add(i[0]);c=Ff}const u=i[o%r];const h=i[(o+1)%r];if(this.closed||o+2<r){l=i[(o+2)%r]}else{Ff.subVectors(i[r-1],i[r-2]).add(i[r-1]);l=Ff}if(this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let e=Math.pow(c.distanceToSquared(u),d);let t=Math.pow(u.distanceToSquared(h),d);let n=Math.pow(h.distanceToSquared(l),d);if(t<1e-4)t=1;if(e<1e-4)e=t;if(n<1e-4)n=t;Of.initNonuniformCatmullRom(c.x,u.x,h.x,l.x,e,t,n);Bf.initNonuniformCatmullRom(c.y,u.y,h.y,l.y,e,t,n);Uf.initNonuniformCatmullRom(c.z,u.z,h.z,l.z,e,t,n)}else if(this.curveType==="catmullrom"){Of.initCatmullRom(c.x,u.x,h.x,l.x,this.tension);Bf.initCatmullRom(c.y,u.y,h.y,l.y,this.tension);Uf.initCatmullRom(c.z,u.z,h.z,l.z,this.tension)}n.set(Of.calc(a),Bf.calc(a),Uf.calc(a));return n}copy(n){super.copy(n);this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}this.closed=n.closed;this.curveType=n.curveType;this.tension=n.tension;return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}n.closed=this.closed;n.curveType=this.curveType;n.tension=this.tension;return n}fromJSON(n){super.fromJSON(n);this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push((new Zn).fromArray(i))}this.closed=n.closed;this.curveType=n.curveType;this.tension=n.tension;return this}}Hf.prototype.isCatmullRomCurve3=true;function zf(e,t,n,i,r){const s=(i-t)*.5;const o=(r-n)*.5;const a=e*e;const c=e*a;return(2*n-2*i+s+o)*c+(-3*n+3*i-2*s-o)*a+s*e+n}function Gf(e,t){const n=1-e;return n*n*t}function kf(e,t){return 2*(1-e)*e*t}function Vf(e,t){return e*e*t}function Wf(e,t,n,i){return Gf(e,t)+kf(e,n)+Vf(e,i)}function jf(e,t){const n=1-e;return n*n*n*t}function Xf(e,t){const n=1-e;return 3*n*n*e*t}function qf(e,t){return 3*(1-e)*e*e*t}function Yf(e,t){return e*e*e*t}function Zf(e,t,n,i,r){return jf(e,t)+Xf(e,n)+qf(e,i)+Yf(e,r)}class Jf extends Pf{constructor(e=new Un,t=new Un,n=new Un,i=new Un){super();this.type="CubicBezierCurve";this.v0=e;this.v1=t;this.v2=n;this.v3=i}getPoint(e,t=new Un){const n=t;const i=this.v0,r=this.v1,s=this.v2,o=this.v3;n.set(Zf(e,i.x,r.x,s.x,o.x),Zf(e,i.y,r.y,s.y,o.y));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this}}Jf.prototype.isCubicBezierCurve=true;class Kf extends Pf{constructor(e=new Zn,t=new Zn,n=new Zn,i=new Zn){super();this.type="CubicBezierCurve3";this.v0=e;this.v1=t;this.v2=n;this.v3=i}getPoint(e,t=new Zn){const n=t;const i=this.v0,r=this.v1,s=this.v2,o=this.v3;n.set(Zf(e,i.x,r.x,s.x,o.x),Zf(e,i.y,r.y,s.y,o.y),Zf(e,i.z,r.z,s.z,o.z));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this}}Kf.prototype.isCubicBezierCurve3=true;class Qf extends Pf{constructor(e=new Un,t=new Un){super();this.type="LineCurve";this.v1=e;this.v2=t}getPoint(e,t=new Un){const n=t;if(e===1){n.copy(this.v2)}else{n.copy(this.v2).sub(this.v1);n.multiplyScalar(e).add(this.v1)}return n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Un;n.copy(this.v2).sub(this.v1).normalize();return n}copy(e){super.copy(e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}Qf.prototype.isLineCurve=true;class $f extends Pf{constructor(e=new Zn,t=new Zn){super();this.type="LineCurve3";this.isLineCurve3=true;this.v1=e;this.v2=t}getPoint(e,t=new Zn){const n=t;if(e===1){n.copy(this.v2)}else{n.copy(this.v2).sub(this.v1);n.multiplyScalar(e).add(this.v1)}return n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){super.copy(e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}class ep extends Pf{constructor(e=new Un,t=new Un,n=new Un){super();this.type="QuadraticBezierCurve";this.v0=e;this.v1=t;this.v2=n}getPoint(e,t=new Un){const n=t;const i=this.v0,r=this.v1,s=this.v2;n.set(Wf(e,i.x,r.x,s.x),Wf(e,i.y,r.y,s.y));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}ep.prototype.isQuadraticBezierCurve=true;class tp extends Pf{constructor(e=new Zn,t=new Zn,n=new Zn){super();this.type="QuadraticBezierCurve3";this.v0=e;this.v1=t;this.v2=n}getPoint(e,t=new Zn){const n=t;const i=this.v0,r=this.v1,s=this.v2;n.set(Wf(e,i.x,r.x,s.x),Wf(e,i.y,r.y,s.y),Wf(e,i.z,r.z,s.z));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}tp.prototype.isQuadraticBezierCurve3=true;class np extends Pf{constructor(e=[]){super();this.type="SplineCurve";this.points=e}getPoint(e,t=new Un){const n=t;const i=this.points;const r=(i.length-1)*e;const s=Math.floor(r);const o=r-s;const a=i[s===0?s:s-1];const c=i[s];const l=i[s>i.length-2?i.length-1:s+1];const u=i[s>i.length-3?i.length-1:s+2];n.set(zf(o,a.x,c.x,l.x,u.x),zf(o,a.y,c.y,l.y,u.y));return n}copy(n){super.copy(n);this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n}fromJSON(n){super.fromJSON(n);this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push((new Un).fromArray(i))}return this}}np.prototype.isSplineCurve=true;var ip=Object.freeze({__proto__:null,ArcCurve:Df,CatmullRomCurve3:Hf,CubicBezierCurve:Jf,CubicBezierCurve3:Kf,EllipseCurve:If,LineCurve:Qf,LineCurve3:$f,QuadraticBezierCurve:ep,QuadraticBezierCurve3:tp,SplineCurve:np});class rp extends Pf{constructor(){super();this.type="CurvePath";this.curves=[];this.autoClose=false}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);const t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){this.curves.push(new Qf(t,e))}}getPoint(e){const t=e*this.getLength();const n=this.getCurveLengths();let i=0;while(i<n.length){if(n[i]>=t){const r=n[i]-t;const s=this.curves[i];const o=s.getLength();const a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}const n=[];let i=0;for(let e=0,t=this.curves.length;e<t;e++){i+=this.curves[e].getLength();n.push(i)}this.cacheLengths=n;return n}getSpacedPoints(t=40){const n=[];for(let e=0;e<=t;e++){n.push(this.getPoint(e/t))}if(this.autoClose){n.push(n[0])}return n}getPoints(n=12){const i=[];let r;for(let e=0,t=this.curves;e<t.length;e++){const s=t[e];const o=s&&s.isEllipseCurve?n*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?n*s.points.length:n;const a=s.getPoints(o);for(let e=0;e<a.length;e++){const c=a[e];if(r&&r.equals(c))continue;i.push(c);r=c}}if(this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])){i.push(i[0])}return i}copy(n){super.copy(n);this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(i.clone())}this.autoClose=n.autoClose;return this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose;n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const i=this.curves[e];n.curves.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n);this.autoClose=n.autoClose;this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push((new ip[i.type]).fromJSON(i))}return this}}class sp extends rp{constructor(e){super();this.type="Path";this.currentPoint=new Un;if(e){this.setFromPoints(e)}}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++){this.lineTo(n[e].x,n[e].y)}return this}moveTo(e,t){this.currentPoint.set(e,t);return this}lineTo(e,t){const n=new Qf(this.currentPoint.clone(),new Un(e,t));this.curves.push(n);this.currentPoint.set(e,t);return this}quadraticCurveTo(e,t,n,i){const r=new ep(this.currentPoint.clone(),new Un(e,t),new Un(n,i));this.curves.push(r);this.currentPoint.set(n,i);return this}bezierCurveTo(e,t,n,i,r,s){const o=new Jf(this.currentPoint.clone(),new Un(e,t),new Un(n,i),new Un(r,s));this.curves.push(o);this.currentPoint.set(r,s);return this}splineThru(e){const t=[this.currentPoint.clone()].concat(e);const n=new np(t);this.curves.push(n);this.currentPoint.copy(e[e.length-1]);return this}arc(e,t,n,i,r,s){const o=this.currentPoint.x;const a=this.currentPoint.y;this.absarc(e+o,t+a,n,i,r,s);return this}absarc(e,t,n,i,r,s){this.absellipse(e,t,n,n,i,r,s);return this}ellipse(e,t,n,i,r,s,o,a){const c=this.currentPoint.x;const l=this.currentPoint.y;this.absellipse(e+c,t+l,n,i,r,s,o,a);return this}absellipse(e,t,n,i,r,s,o,a){const c=new If(e,t,n,i,r,s,o,a);if(this.curves.length>0){const u=c.getPoint(0);if(!u.equals(this.currentPoint)){this.lineTo(u.x,u.y)}}this.curves.push(c);const l=c.getPoint(1);this.currentPoint.copy(l);return this}copy(e){super.copy(e);this.currentPoint.copy(e.currentPoint);return this}toJSON(){const e=super.toJSON();e.currentPoint=this.currentPoint.toArray();return e}fromJSON(e){super.fromJSON(e);this.currentPoint.fromArray(e.currentPoint);return this}}class op extends sp{constructor(e){super(e);this.uuid=Bn.generateUUID();this.type="Shape";this.holes=[]}getPointsHoles(n){const i=[];for(let e=0,t=this.holes.length;e<t;e++){i[e]=this.holes[e].getPoints(n)}return i}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n);this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid;n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const i=this.holes[e];n.holes.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n);this.uuid=n.uuid;this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push((new sp).fromJSON(i))}return this}}class ap extends Ki{constructor(e,t=1){super();this.type="Light";this.color=new br(e);this.intensity=t}copy(e){super.copy(e);this.color.copy(e.color);this.intensity=e.intensity;return this}toJSON(e){const t=super.toJSON(e);t.object.color=this.color.getHex();t.object.intensity=this.intensity;if(this.groundColor!==undefined)t.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)t.object.distance=this.distance;if(this.angle!==undefined)t.object.angle=this.angle;if(this.decay!==undefined)t.object.decay=this.decay;if(this.penumbra!==undefined)t.object.penumbra=this.penumbra;if(this.shadow!==undefined)t.object.shadow=this.shadow.toJSON();return t}}ap.prototype.isLight=true;class cp extends ap{constructor(e,t,n){super(e,n);this.type="HemisphereLight";this.position.copy(Ki.DefaultUp);this.updateMatrix();this.groundColor=new br(t)}copy(e){ap.prototype.copy.call(this,e);this.groundColor.copy(e.groundColor);return this}}cp.prototype.isHemisphereLight=true;const lp=new Si;const up=new Zn;const hp=new Zn;class dp{constructor(e){this.camera=e;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new Un(512,512);this.map=null;this.mapPass=null;this.matrix=new Si;this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Cs;this._frameExtents=new Un(1,1);this._viewportCount=1;this._viewports=[new jn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera;const n=this.matrix;up.setFromMatrixPosition(e.matrixWorld);t.position.copy(up);hp.setFromMatrixPosition(e.target.matrixWorld);t.lookAt(hp);t.updateMatrixWorld();lp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);this._frustum.setFromProjectionMatrix(lp);n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);n.multiply(t.projectionMatrix);n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}copy(e){this.camera=e.camera.clone();this.bias=e.bias;this.radius=e.radius;this.mapSize.copy(e.mapSize);return this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};if(this.bias!==0)e.bias=this.bias;if(this.normalBias!==0)e.normalBias=this.normalBias;if(this.radius!==1)e.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)e.mapSize=this.mapSize.toArray();e.camera=this.camera.toJSON(false).object;delete e.camera.matrix;return e}}class fp extends dp{constructor(){super(new bs(50,1,.5,500));this.focus=1}updateMatrices(e){const t=this.camera;const n=Bn.RAD2DEG*2*e.angle*this.focus;const i=this.mapSize.width/this.mapSize.height;const r=e.distance||t.far;if(n!==t.fov||i!==t.aspect||r!==t.far){t.fov=n;t.aspect=i;t.far=r;t.updateProjectionMatrix()}super.updateMatrices(e)}copy(e){super.copy(e);this.focus=e.focus;return this}}fp.prototype.isSpotLightShadow=true;class pp extends ap{constructor(e,t,n=0,i=Math.PI/3,r=0,s=1){super(e,t);this.type="SpotLight";this.position.copy(Ki.DefaultUp);this.updateMatrix();this.target=new Ki;this.distance=n;this.angle=i;this.penumbra=r;this.decay=s;this.shadow=new fp}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}copy(e){super.copy(e);this.distance=e.distance;this.angle=e.angle;this.penumbra=e.penumbra;this.decay=e.decay;this.target=e.target.clone();this.shadow=e.shadow.clone();return this}}pp.prototype.isSpotLight=true;const mp=new Si;const gp=new Zn;const yp=new Zn;class vp extends dp{constructor(){super(new bs(90,1,.5,500));this._frameExtents=new Un(4,2);this._viewportCount=6;this._viewports=[new jn(2,1,1,1),new jn(0,1,1,1),new jn(3,1,1,1),new jn(1,1,1,1),new jn(3,0,1,1),new jn(1,0,1,1)];this._cubeDirections=[new Zn(1,0,0),new Zn(-1,0,0),new Zn(0,0,1),new Zn(0,0,-1),new Zn(0,1,0),new Zn(0,-1,0)];this._cubeUps=[new Zn(0,1,0),new Zn(0,1,0),new Zn(0,1,0),new Zn(0,1,0),new Zn(0,0,1),new Zn(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera;const i=this.matrix;const r=e.distance||n.far;if(r!==n.far){n.far=r;n.updateProjectionMatrix()}gp.setFromMatrixPosition(e.matrixWorld);n.position.copy(gp);yp.copy(n.position);yp.add(this._cubeDirections[t]);n.up.copy(this._cubeUps[t]);n.lookAt(yp);n.updateMatrixWorld();i.makeTranslation(-gp.x,-gp.y,-gp.z);mp.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse);this._frustum.setFromProjectionMatrix(mp)}}vp.prototype.isPointLightShadow=true;class xp extends ap{constructor(e,t,n=0,i=1){super(e,t);this.type="PointLight";this.distance=n;this.decay=i;this.shadow=new vp}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}copy(e){super.copy(e);this.distance=e.distance;this.decay=e.decay;this.shadow=e.shadow.clone();return this}}xp.prototype.isPointLight=true;class _p extends _s{constructor(e=-1,t=1,n=1,i=-1,r=.1,s=2e3){super();this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=e;this.right=t;this.top=n;this.bottom=i;this.near=r;this.far=s;this.updateProjectionMatrix()}copy(e,t){super.copy(e,t);this.left=e.left;this.right=e.right;this.top=e.top;this.bottom=e.bottom;this.near=e.near;this.far=e.far;this.zoom=e.zoom;this.view=e.view===null?null:Object.assign({},e.view);return this}setViewOffset(e,t,n,i,r,s){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=n;this.view.offsetY=i;this.view.width=r;this.view.height=s;this.updateProjectionMatrix()}clearViewOffset(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom);const t=(this.top-this.bottom)/(2*this.zoom);const n=(this.right+this.left)/2;const i=(this.top+this.bottom)/2;let r=n-e;let s=n+e;let o=i+t;let a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom;const l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX;s=r+c*this.view.width;o-=l*this.view.offsetY;a=o-l*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=Ki.prototype.toJSON.call(this,e);t.object.zoom=this.zoom;t.object.left=this.left;t.object.right=this.right;t.object.top=this.top;t.object.bottom=this.bottom;t.object.near=this.near;t.object.far=this.far;if(this.view!==null)t.object.view=Object.assign({},this.view);return t}}_p.prototype.isOrthographicCamera=true;class bp extends dp{constructor(){super(new _p(-5,5,5,-5,.5,500))}}bp.prototype.isDirectionalLightShadow=true;class Mp extends ap{constructor(e,t){super(e,t);this.type="DirectionalLight";this.position.copy(Ki.DefaultUp);this.updateMatrix();this.target=new Ki;this.shadow=new bp}copy(e){super.copy(e);this.target=e.target.clone();this.shadow=e.shadow.clone();return this}}Mp.prototype.isDirectionalLight=true;class wp extends ap{constructor(e,t){super(e,t);this.type="AmbientLight"}}wp.prototype.isAmbientLight=true;class Ep extends ap{constructor(e,t,n=10,i=10){super(e,t);this.type="RectAreaLight";this.width=n;this.height=i}copy(e){super.copy(e);this.width=e.width;this.height=e.height;return this}toJSON(e){const t=super.toJSON(e);t.object.width=this.width;t.object.height=this.height;return t}}Ep.prototype.isRectAreaLight=true;class Tp{constructor(){this.coefficients=[];for(let e=0;e<9;e++){this.coefficients.push(new Zn)}}set(t){for(let e=0;e<9;e++){this.coefficients[e].copy(t[e])}return this}zero(){for(let e=0;e<9;e++){this.coefficients[e].set(0,0,0)}return this}getAt(e,t){const n=e.x,i=e.y,r=e.z;const s=this.coefficients;t.copy(s[0]).multiplyScalar(.282095);t.addScaledVector(s[1],.488603*i);t.addScaledVector(s[2],.488603*r);t.addScaledVector(s[3],.488603*n);t.addScaledVector(s[4],1.092548*(n*i));t.addScaledVector(s[5],1.092548*(i*r));t.addScaledVector(s[6],.315392*(3*r*r-1));t.addScaledVector(s[7],1.092548*(n*r));t.addScaledVector(s[8],.546274*(n*n-i*i));return t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z;const s=this.coefficients;t.copy(s[0]).multiplyScalar(.886227);t.addScaledVector(s[1],2*.511664*i);t.addScaledVector(s[2],2*.511664*r);t.addScaledVector(s[3],2*.511664*n);t.addScaledVector(s[4],2*.429043*n*i);t.addScaledVector(s[5],2*.429043*i*r);t.addScaledVector(s[6],.743125*r*r-.247708);t.addScaledVector(s[7],2*.429043*n*r);t.addScaledVector(s[8],.429043*(n*n-i*i));return t}add(t){for(let e=0;e<9;e++){this.coefficients[e].add(t.coefficients[e])}return this}addScaledSH(t,n){for(let e=0;e<9;e++){this.coefficients[e].addScaledVector(t.coefficients[e],n)}return this}scale(t){for(let e=0;e<9;e++){this.coefficients[e].multiplyScalar(t)}return this}lerp(t,n){for(let e=0;e<9;e++){this.coefficients[e].lerp(t.coefficients[e],n)}return this}equals(t){for(let e=0;e<9;e++){if(!this.coefficients[e].equals(t.coefficients[e])){return false}}return true}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){const i=this.coefficients;for(let e=0;e<9;e++){i[e].fromArray(t,n+e*3)}return this}toArray(t=[],n=0){const i=this.coefficients;for(let e=0;e<9;e++){i[e].toArray(t,n+e*3)}return t}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095;t[1]=.488603*i;t[2]=.488603*r;t[3]=.488603*n;t[4]=1.092548*n*i;t[5]=1.092548*i*r;t[6]=.315392*(3*r*r-1);t[7]=1.092548*n*r;t[8]=.546274*(n*n-i*i)}}Tp.prototype.isSphericalHarmonics3=true;class Sp extends ap{constructor(e=new Tp,t=1){super(undefined,t);this.sh=e}copy(e){super.copy(e);this.sh.copy(e.sh);return this}fromJSON(e){this.intensity=e.intensity;this.sh.fromArray(e.sh);return this}toJSON(e){const t=super.toJSON(e);t.object.sh=this.sh.toArray();return t}}Sp.prototype.isLightProbe=true;class Ap extends Mf{constructor(e){super(e);this.textures={}}load(t,n,e,i){const r=this;const s=new Ef(r.manager);s.setPath(r.path);s.setRequestHeader(r.requestHeader);s.setWithCredentials(r.withCredentials);s.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){if(i){i(e)}else{console.error(e)}r.manager.itemError(t)}},e,i)}parse(t){const n=this.textures;function e(e){if(n[e]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",e)}return n[e]}const i=new tf[t.type];if(t.uuid!==undefined)i.uuid=t.uuid;if(t.name!==undefined)i.name=t.name;if(t.color!==undefined&&i.color!==undefined)i.color.setHex(t.color);if(t.roughness!==undefined)i.roughness=t.roughness;if(t.metalness!==undefined)i.metalness=t.metalness;if(t.sheen!==undefined)i.sheen=(new br).setHex(t.sheen);if(t.emissive!==undefined&&i.emissive!==undefined)i.emissive.setHex(t.emissive);if(t.specular!==undefined&&i.specular!==undefined)i.specular.setHex(t.specular);if(t.shininess!==undefined)i.shininess=t.shininess;if(t.clearcoat!==undefined)i.clearcoat=t.clearcoat;if(t.clearcoatRoughness!==undefined)i.clearcoatRoughness=t.clearcoatRoughness;if(t.fog!==undefined)i.fog=t.fog;if(t.flatShading!==undefined)i.flatShading=t.flatShading;if(t.blending!==undefined)i.blending=t.blending;if(t.combine!==undefined)i.combine=t.combine;if(t.side!==undefined)i.side=t.side;if(t.shadowSide!==undefined)i.shadowSide=t.shadowSide;if(t.opacity!==undefined)i.opacity=t.opacity;if(t.transparent!==undefined)i.transparent=t.transparent;if(t.alphaTest!==undefined)i.alphaTest=t.alphaTest;if(t.depthTest!==undefined)i.depthTest=t.depthTest;if(t.depthWrite!==undefined)i.depthWrite=t.depthWrite;if(t.colorWrite!==undefined)i.colorWrite=t.colorWrite;if(t.stencilWrite!==undefined)i.stencilWrite=t.stencilWrite;if(t.stencilWriteMask!==undefined)i.stencilWriteMask=t.stencilWriteMask;if(t.stencilFunc!==undefined)i.stencilFunc=t.stencilFunc;if(t.stencilRef!==undefined)i.stencilRef=t.stencilRef;if(t.stencilFuncMask!==undefined)i.stencilFuncMask=t.stencilFuncMask;if(t.stencilFail!==undefined)i.stencilFail=t.stencilFail;if(t.stencilZFail!==undefined)i.stencilZFail=t.stencilZFail;if(t.stencilZPass!==undefined)i.stencilZPass=t.stencilZPass;if(t.wireframe!==undefined)i.wireframe=t.wireframe;if(t.wireframeLinewidth!==undefined)i.wireframeLinewidth=t.wireframeLinewidth;if(t.wireframeLinecap!==undefined)i.wireframeLinecap=t.wireframeLinecap;if(t.wireframeLinejoin!==undefined)i.wireframeLinejoin=t.wireframeLinejoin;if(t.rotation!==undefined)i.rotation=t.rotation;if(t.linewidth!==1)i.linewidth=t.linewidth;if(t.dashSize!==undefined)i.dashSize=t.dashSize;if(t.gapSize!==undefined)i.gapSize=t.gapSize;if(t.scale!==undefined)i.scale=t.scale;if(t.polygonOffset!==undefined)i.polygonOffset=t.polygonOffset;if(t.polygonOffsetFactor!==undefined)i.polygonOffsetFactor=t.polygonOffsetFactor;if(t.polygonOffsetUnits!==undefined)i.polygonOffsetUnits=t.polygonOffsetUnits;if(t.skinning!==undefined)i.skinning=t.skinning;if(t.morphTargets!==undefined)i.morphTargets=t.morphTargets;if(t.morphNormals!==undefined)i.morphNormals=t.morphNormals;if(t.dithering!==undefined)i.dithering=t.dithering;if(t.alphaToCoverage!==undefined)i.alphaToCoverage=t.alphaToCoverage;if(t.premultipliedAlpha!==undefined)i.premultipliedAlpha=t.premultipliedAlpha;if(t.vertexTangents!==undefined)i.vertexTangents=t.vertexTangents;if(t.visible!==undefined)i.visible=t.visible;if(t.toneMapped!==undefined)i.toneMapped=t.toneMapped;if(t.userData!==undefined)i.userData=t.userData;if(t.vertexColors!==undefined){if(typeof t.vertexColors==="number"){i.vertexColors=t.vertexColors>0?true:false}else{i.vertexColors=t.vertexColors}}if(t.uniforms!==undefined){for(const r in t.uniforms){const s=t.uniforms[r];i.uniforms[r]={};switch(s.type){case"t":i.uniforms[r].value=e(s.value);break;case"c":i.uniforms[r].value=(new br).setHex(s.value);break;case"v2":i.uniforms[r].value=(new Un).fromArray(s.value);break;case"v3":i.uniforms[r].value=(new Zn).fromArray(s.value);break;case"v4":i.uniforms[r].value=(new jn).fromArray(s.value);break;case"m3":i.uniforms[r].value=(new Hn).fromArray(s.value);break;case"m4":i.uniforms[r].value=(new Si).fromArray(s.value);break;default:i.uniforms[r].value=s.value}}}if(t.defines!==undefined)i.defines=t.defines;if(t.vertexShader!==undefined)i.vertexShader=t.vertexShader;if(t.fragmentShader!==undefined)i.fragmentShader=t.fragmentShader;if(t.extensions!==undefined){for(const o in t.extensions){i.extensions[o]=t.extensions[o]}}if(t.shading!==undefined)i.flatShading=t.shading===1;if(t.size!==undefined)i.size=t.size;if(t.sizeAttenuation!==undefined)i.sizeAttenuation=t.sizeAttenuation;if(t.map!==undefined)i.map=e(t.map);if(t.matcap!==undefined)i.matcap=e(t.matcap);if(t.alphaMap!==undefined)i.alphaMap=e(t.alphaMap);if(t.bumpMap!==undefined)i.bumpMap=e(t.bumpMap);if(t.bumpScale!==undefined)i.bumpScale=t.bumpScale;if(t.normalMap!==undefined)i.normalMap=e(t.normalMap);if(t.normalMapType!==undefined)i.normalMapType=t.normalMapType;if(t.normalScale!==undefined){let e=t.normalScale;if(Array.isArray(e)===false){e=[e,e]}i.normalScale=(new Un).fromArray(e)}if(t.displacementMap!==undefined)i.displacementMap=e(t.displacementMap);if(t.displacementScale!==undefined)i.displacementScale=t.displacementScale;if(t.displacementBias!==undefined)i.displacementBias=t.displacementBias;if(t.roughnessMap!==undefined)i.roughnessMap=e(t.roughnessMap);if(t.metalnessMap!==undefined)i.metalnessMap=e(t.metalnessMap);if(t.emissiveMap!==undefined)i.emissiveMap=e(t.emissiveMap);if(t.emissiveIntensity!==undefined)i.emissiveIntensity=t.emissiveIntensity;if(t.specularMap!==undefined)i.specularMap=e(t.specularMap);if(t.envMap!==undefined)i.envMap=e(t.envMap);if(t.envMapIntensity!==undefined)i.envMapIntensity=t.envMapIntensity;if(t.reflectivity!==undefined)i.reflectivity=t.reflectivity;if(t.refractionRatio!==undefined)i.refractionRatio=t.refractionRatio;if(t.lightMap!==undefined)i.lightMap=e(t.lightMap);if(t.lightMapIntensity!==undefined)i.lightMapIntensity=t.lightMapIntensity;if(t.aoMap!==undefined)i.aoMap=e(t.aoMap);if(t.aoMapIntensity!==undefined)i.aoMapIntensity=t.aoMapIntensity;if(t.gradientMap!==undefined)i.gradientMap=e(t.gradientMap);if(t.clearcoatMap!==undefined)i.clearcoatMap=e(t.clearcoatMap);if(t.clearcoatRoughnessMap!==undefined)i.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap);if(t.clearcoatNormalMap!==undefined)i.clearcoatNormalMap=e(t.clearcoatNormalMap);if(t.clearcoatNormalScale!==undefined)i.clearcoatNormalScale=(new Un).fromArray(t.clearcoatNormalScale);if(t.transmission!==undefined)i.transmission=t.transmission;if(t.transmissionMap!==undefined)i.transmissionMap=e(t.transmissionMap);return i}setTextures(e){this.textures=e;return this}}const Rp={decodeText:function(n){if(typeof TextDecoder!=="undefined"){return(new TextDecoder).decode(n)}let i="";for(let e=0,t=n.length;e<t;e++){i+=String.fromCharCode(n[e])}try{return decodeURIComponent(escape(i))}catch(e){return i}},extractUrlBase:function(e){const t=e.lastIndexOf("/");if(t===-1)return"./";return e.substr(0,t+1)}};function Lp(){Xr.call(this);this.type="InstancedBufferGeometry";this.instanceCount=Infinity}Lp.prototype=Object.assign(Object.create(Xr.prototype),{constructor:Lp,isInstancedBufferGeometry:true,copy:function(e){Xr.prototype.copy.call(this,e);this.instanceCount=e.instanceCount;return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=Xr.prototype.toJSON.call(this);e.instanceCount=this.instanceCount;e.isInstancedBufferGeometry=true;return e}});function Cp(e,t,n,i){if(typeof n==="number"){i=n;n=false;console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")}Tr.call(this,e,t,n);this.meshPerAttribute=i||1}Cp.prototype=Object.assign(Object.create(Tr.prototype),{constructor:Cp,isInstancedBufferAttribute:true,copy:function(e){Tr.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this},toJSON:function(){const e=Tr.prototype.toJSON.call(this);e.meshPerAttribute=this.meshPerAttribute;e.isInstancedBufferAttribute=true;return e}});class Pp extends Mf{constructor(e){super(e)}load(t,n,e,i){const r=this;const s=new Ef(r.manager);s.setPath(r.path);s.setRequestHeader(r.requestHeader);s.setWithCredentials(r.withCredentials);s.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){if(i){i(e)}else{console.error(e)}r.manager.itemError(t)}},e,i)}parse(n){const a={};const s={};function i(e,t){if(a[t]!==undefined)return a[t];const n=e.interleavedBuffers;const i=n[t];const r=c(e,i.buffer);const s=Ur(i.type,r);const o=new Pu(s,i.stride);o.uuid=i.uuid;a[t]=o;return o}function c(e,t){if(s[t]!==undefined)return s[t];const n=e.arrayBuffers;const i=n[t];const r=new Uint32Array(i).buffer;s[t]=r;return r}const r=n.isInstancedBufferGeometry?new Lp:new Xr;const e=n.data.index;if(e!==undefined){const d=Ur(e.type,e.array);r.setIndex(new Tr(d,1))}const t=n.data.attributes;for(const f in t){const p=t[f];let e;if(p.isInterleavedBufferAttribute){const m=i(n.data,p.data);e=new Du(m,p.itemSize,p.offset,p.normalized)}else{const d=Ur(p.type,p.array);const g=p.isInstancedBufferAttribute?Cp:Tr;e=new g(d,p.itemSize,p.normalized)}if(p.name!==undefined)e.name=p.name;if(p.usage!==undefined)e.setUsage(p.usage);if(p.updateRange!==undefined){e.updateRange.offset=p.updateRange.offset;e.updateRange.count=p.updateRange.count}r.setAttribute(f,e)}const o=n.data.morphAttributes;if(o){for(const f in o){const y=o[f];const v=[];for(let t=0,e=y.length;t<e;t++){const p=y[t];let e;if(p.isInterleavedBufferAttribute){const m=i(n.data,p.data);e=new Du(m,p.itemSize,p.offset,p.normalized)}else{const d=Ur(p.type,p.array);e=new Tr(d,p.itemSize,p.normalized)}if(p.name!==undefined)e.name=p.name;v.push(e)}r.morphAttributes[f]=v}}const l=n.data.morphTargetsRelative;if(l){r.morphTargetsRelative=true}const u=n.data.groups||n.data.drawcalls||n.data.offsets;if(u!==undefined){for(let e=0,t=u.length;e!==t;++e){const x=u[e];r.addGroup(x.start,x.count,x.materialIndex)}}const h=n.data.boundingSphere;if(h!==undefined){const _=new Zn;if(h.center!==undefined){_.fromArray(h.center)}r.boundingSphere=new yi(_,h.radius)}if(n.name)r.name=n.name;if(n.userData)r.userData=n.userData;return r}}class Ip extends Mf{constructor(e){super(e)}load(i,r,e,s){const o=this;const t=this.path===""?Rp.extractUrlBase(i):this.path;this.resourcePath=this.resourcePath||t;const n=new Ef(this.manager);n.setPath(this.path);n.setRequestHeader(this.requestHeader);n.setWithCredentials(this.withCredentials);n.load(i,function(e){let t=null;try{t=JSON.parse(e)}catch(e){if(s!==undefined)s(e);console.error("THREE:ObjectLoader: Can't parse "+i+".",e.message);return}const n=t.metadata;if(n===undefined||n.type===undefined||n.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+i);return}o.parse(t,r)},e,s)}parse(e,t){const n=this.parseAnimations(e.animations);const i=this.parseShapes(e.shapes);const r=this.parseGeometries(e.geometries,i);const s=this.parseImages(e.images,function(){if(t!==undefined)t(c)});const o=this.parseTextures(e.textures,s);const a=this.parseMaterials(e.materials,o);const c=this.parseObject(e.object,r,a,n);const l=this.parseSkeletons(e.skeletons,c);this.bindSkeletons(c,l);if(t!==undefined){let e=false;for(const u in s){if(s[u]instanceof HTMLImageElement){e=true;break}}if(e===false)t(c)}return c}parseShapes(n){const i={};if(n!==undefined){for(let e=0,t=n.length;e<t;e++){const r=(new op).fromJSON(n[e]);i[r.uuid]=r}}return i}parseSkeletons(n,e){const i={};const r={};e.traverse(function(e){if(e.isBone)r[e.uuid]=e});if(n!==undefined){for(let e=0,t=n.length;e<t;e++){const s=(new ch).fromJSON(n[e],r);i[s.uuid]=s}}return i}parseGeometries(n,i){const r={};let s;if(n!==undefined){const o=new Pp;for(let t=0,e=n.length;t<e;t++){let e;const a=n[t];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":e=new Wd[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":e=new Wd[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":e=new Wd[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":e=new Wd[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":e=new Wd[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":e=new Wd[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":e=new Wd[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":e=new Wd[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":e=new Wd[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":e=new Wd[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":e=new Wd[a.type]((new ip[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":e=new Wd[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":e=new Wd[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":s=[];for(let e=0,t=a.shapes.length;e<t;e++){const l=i[a.shapes[e]];s.push(l)}e=new Wd[a.type](s,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":s=[];for(let e=0,t=a.shapes.length;e<t;e++){const l=i[a.shapes[e]];s.push(l)}const c=a.options.extrudePath;if(c!==undefined){a.options.extrudePath=(new ip[c.type]).fromJSON(c)}e=new Wd[a.type](s,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":e=o.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}e.uuid=a.uuid;if(a.name!==undefined)e.name=a.name;if(e.isBufferGeometry===true&&a.userData!==undefined)e.userData=a.userData;r[a.uuid]=e}}return r}parseMaterials(n,e){const i={};const r={};if(n!==undefined){const s=new Ap;s.setTextures(e);for(let e=0,t=n.length;e<t;e++){const o=n[e];if(o.type==="MultiMaterial"){const a=[];for(let e=0;e<o.materials.length;e++){const c=o.materials[e];if(i[c.uuid]===undefined){i[c.uuid]=s.parse(c)}a.push(i[c.uuid])}r[o.uuid]=a}else{if(i[o.uuid]===undefined){i[o.uuid]=s.parse(o)}r[o.uuid]=i[o.uuid]}}}return r}parseAnimations(t){const n={};if(t!==undefined){for(let e=0;e<t.length;e++){const i=t[e];const r=gf.parse(i);n[r.uuid]=r}}return n}parseImages(n,e){const i=this;const r={};let t;function s(e){i.manager.itemStart(e);return t.load(e,function(){i.manager.itemEnd(e)},undefined,function(){i.manager.itemError(e);i.manager.itemEnd(e)})}function o(e){if(typeof e==="string"){const t=e;const n=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:i.resourcePath+t;return s(n)}else{if(e.data){return{data:Ur(e.type,e.data),width:e.width,height:e.height}}else{return null}}}if(n!==undefined&&n.length>0){const a=new _f(e);t=new Af(a);t.setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){const c=n[e];const l=c.url;if(Array.isArray(l)){r[c.uuid]=[];for(let e=0,t=l.length;e<t;e++){const u=l[e];const h=o(u);if(h!==null){if(h instanceof HTMLImageElement){r[c.uuid].push(h)}else{r[c.uuid].push(new As(h.data,h.width,h.height))}}}}else{const h=o(c.url);if(h!==null){r[c.uuid]=h}}}}return r}parseTextures(n,i){function r(e,t){if(typeof e==="number")return e;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e);return t[e]}const s={};if(n!==undefined){for(let t=0,e=n.length;t<e;t++){const o=n[t];if(o.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid)}if(i[o.image]===undefined){console.warn("THREE.ObjectLoader: Undefined image",o.image)}let e;const a=i[o.image];if(Array.isArray(a)){e=new Ts(a);if(a.length===6)e.needsUpdate=true}else{if(a&&a.data){e=new As(a.data,a.width,a.height)}else{e=new Vn(a)}if(a)e.needsUpdate=true}e.uuid=o.uuid;if(o.name!==undefined)e.name=o.name;if(o.mapping!==undefined)e.mapping=r(o.mapping,Dp);if(o.offset!==undefined)e.offset.fromArray(o.offset);if(o.repeat!==undefined)e.repeat.fromArray(o.repeat);if(o.center!==undefined)e.center.fromArray(o.center);if(o.rotation!==undefined)e.rotation=o.rotation;if(o.wrap!==undefined){e.wrapS=r(o.wrap[0],Np);e.wrapT=r(o.wrap[1],Np)}if(o.format!==undefined)e.format=o.format;if(o.type!==undefined)e.type=o.type;if(o.encoding!==undefined)e.encoding=o.encoding;if(o.minFilter!==undefined)e.minFilter=r(o.minFilter,Fp);if(o.magFilter!==undefined)e.magFilter=r(o.magFilter,Fp);if(o.anisotropy!==undefined)e.anisotropy=o.anisotropy;if(o.flipY!==undefined)e.flipY=o.flipY;if(o.premultiplyAlpha!==undefined)e.premultiplyAlpha=o.premultiplyAlpha;if(o.unpackAlignment!==undefined)e.unpackAlignment=o.unpackAlignment;s[o.uuid]=e}}return s}parseObject(e,t,s,n){let i;function r(e){if(t[e]===undefined){console.warn("THREE.ObjectLoader: Undefined geometry",e)}return t[e]}function o(n){if(n===undefined)return undefined;if(Array.isArray(n)){const i=[];for(let e=0,t=n.length;e<t;e++){const r=n[e];if(s[r]===undefined){console.warn("THREE.ObjectLoader: Undefined material",r)}i.push(s[r])}return i}if(s[n]===undefined){console.warn("THREE.ObjectLoader: Undefined material",n)}return s[n]}let a,c;switch(e.type){case"Scene":i=new Cu;if(e.background!==undefined){if(Number.isInteger(e.background)){i.background=new br(e.background)}}if(e.fog!==undefined){if(e.fog.type==="Fog"){i.fog=new Lu(e.fog.color,e.fog.near,e.fog.far)}else if(e.fog.type==="FogExp2"){i.fog=new Ru(e.fog.color,e.fog.density)}}break;case"PerspectiveCamera":i=new bs(e.fov,e.aspect,e.near,e.far);if(e.focus!==undefined)i.focus=e.focus;if(e.zoom!==undefined)i.zoom=e.zoom;if(e.filmGauge!==undefined)i.filmGauge=e.filmGauge;if(e.filmOffset!==undefined)i.filmOffset=e.filmOffset;if(e.view!==undefined)i.view=Object.assign({},e.view);break;case"OrthographicCamera":i=new _p(e.left,e.right,e.top,e.bottom,e.near,e.far);if(e.zoom!==undefined)i.zoom=e.zoom;if(e.view!==undefined)i.view=Object.assign({},e.view);break;case"AmbientLight":i=new wp(e.color,e.intensity);break;case"DirectionalLight":i=new Mp(e.color,e.intensity);break;case"PointLight":i=new xp(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new Ep(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new pp(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new cp(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=(new Sp).fromJSON(e);break;case"SkinnedMesh":a=r(e.geometry);c=o(e.material);i=new rh(a,c);if(e.bindMode!==undefined)i.bindMode=e.bindMode;if(e.bindMatrix!==undefined)i.bindMatrix.fromArray(e.bindMatrix);if(e.skeleton!==undefined)i.skeleton=e.skeleton;break;case"Mesh":a=r(e.geometry);c=o(e.material);i=new us(a,c);break;case"InstancedMesh":a=r(e.geometry);c=o(e.material);const l=e.count;const u=e.instanceMatrix;const h=e.instanceColor;i=new fh(a,c,l);i.instanceMatrix=new Tr(new Float32Array(u.array),16);if(h!==undefined)i.instanceColor=new Tr(new Float32Array(h.array),h.itemSize);break;case"LOD":i=new Qu;break;case"Line":i=new _h(r(e.geometry),o(e.material));break;case"LineLoop":i=new Eh(r(e.geometry),o(e.material));break;case"LineSegments":i=new wh(r(e.geometry),o(e.material));break;case"PointCloud":case"Points":i=new Ch(r(e.geometry),o(e.material));break;case"Sprite":i=new Yu(o(e.material));break;case"Group":i=new bu;break;case"Bone":i=new sh;break;default:i=new Ki}i.uuid=e.uuid;if(e.name!==undefined)i.name=e.name;if(e.matrix!==undefined){i.matrix.fromArray(e.matrix);if(e.matrixAutoUpdate!==undefined)i.matrixAutoUpdate=e.matrixAutoUpdate;if(i.matrixAutoUpdate)i.matrix.decompose(i.position,i.quaternion,i.scale)}else{if(e.position!==undefined)i.position.fromArray(e.position);if(e.rotation!==undefined)i.rotation.fromArray(e.rotation);if(e.quaternion!==undefined)i.quaternion.fromArray(e.quaternion);if(e.scale!==undefined)i.scale.fromArray(e.scale)}if(e.castShadow!==undefined)i.castShadow=e.castShadow;if(e.receiveShadow!==undefined)i.receiveShadow=e.receiveShadow;if(e.shadow){if(e.shadow.bias!==undefined)i.shadow.bias=e.shadow.bias;if(e.shadow.normalBias!==undefined)i.shadow.normalBias=e.shadow.normalBias;if(e.shadow.radius!==undefined)i.shadow.radius=e.shadow.radius;if(e.shadow.mapSize!==undefined)i.shadow.mapSize.fromArray(e.shadow.mapSize);if(e.shadow.camera!==undefined)i.shadow.camera=this.parseObject(e.shadow.camera)}if(e.visible!==undefined)i.visible=e.visible;if(e.frustumCulled!==undefined)i.frustumCulled=e.frustumCulled;if(e.renderOrder!==undefined)i.renderOrder=e.renderOrder;if(e.userData!==undefined)i.userData=e.userData;if(e.layers!==undefined)i.layers.mask=e.layers;if(e.children!==undefined){const d=e.children;for(let e=0;e<d.length;e++){i.add(this.parseObject(d[e],t,s,n))}}if(e.animations!==undefined){const f=e.animations;for(let e=0;e<f.length;e++){const p=f[e];i.animations.push(n[p])}}if(e.type==="LOD"){if(e.autoUpdate!==undefined)i.autoUpdate=e.autoUpdate;const m=e.levels;for(let e=0;e<m.length;e++){const g=m[e];const y=i.getObjectByProperty("uuid",g.object);if(y!==undefined){i.addLevel(y,g.distance)}}}return i}bindSkeletons(e,n){if(Object.keys(n).length===0)return;e.traverse(function(e){if(e.isSkinnedMesh===true&&e.skeleton!==undefined){const t=n[e.skeleton];if(t===undefined){console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton)}else{e.bind(t,e.bindMatrix)}}})}setTexturePath(e){console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().");return this.setResourcePath(e)}}const Dp={UVMapping:v,CubeReflectionMapping:x,CubeRefractionMapping:_,EquirectangularReflectionMapping:b,EquirectangularRefractionMapping:M,CubeUVReflectionMapping:C,CubeUVRefractionMapping:P};const Np={RepeatWrapping:$,ClampToEdgeWrapping:ee,MirroredRepeatWrapping:te};const Fp={NearestFilter:ne,NearestMipmapNearestFilter:ie,NearestMipmapLinearFilter:re,LinearFilter:se,LinearMipmapNearestFilter:oe,LinearMipmapLinearFilter:ae};function Op(e){if(typeof createImageBitmap==="undefined"){console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.")}if(typeof fetch==="undefined"){console.warn("THREE.ImageBitmapLoader: fetch() not supported.")}Mf.call(this,e);this.options={premultiplyAlpha:"none"}}Op.prototype=Object.assign(Object.create(Mf.prototype),{constructor:Op,isImageBitmapLoader:true,setOptions:function e(t){this.options=t;return this},load:function(t,n,e,i){if(t===undefined)t="";if(this.path!==undefined)t=this.path+t;t=this.manager.resolveURL(t);const r=this;const s=xf.get(t);if(s!==undefined){r.manager.itemStart(t);setTimeout(function(){if(n)n(s);r.manager.itemEnd(t)},0);return s}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include";o.headers=this.requestHeader;fetch(t,o).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(e){xf.add(t,e);if(n)n(e);r.manager.itemEnd(t)}).catch(function(e){if(i)i(e);r.manager.itemError(t);r.manager.itemEnd(t)});r.manager.itemStart(t)}});class Bp{constructor(){this.type="ShapePath";this.color=new br;this.subPaths=[];this.currentPath=null}moveTo(e,t){this.currentPath=new sp;this.subPaths.push(this.currentPath);this.currentPath.moveTo(e,t);return this}lineTo(e,t){this.currentPath.lineTo(e,t);return this}quadraticCurveTo(e,t,n,i){this.currentPath.quadraticCurveTo(e,t,n,i);return this}bezierCurveTo(e,t,n,i,r,s){this.currentPath.bezierCurveTo(e,t,n,i,r,s);return this}splineThru(e){this.currentPath.splineThru(e);return this}toShapes(n,e){function t(i){const r=[];for(let n=0,e=i.length;n<e;n++){const e=i[n];const t=new op;t.curves=e.curves;r.push(t)}return r}function s(o,a){const e=a.length;let c=false;for(let r=e-1,s=0;s<e;r=s++){let e=a[r];let t=a[s];let n=t.x-e.x;let i=t.y-e.y;if(Math.abs(i)>Number.EPSILON){if(i<0){e=a[s];n=-n;t=a[r];i=-i}if(o.y<e.y||o.y>t.y)continue;if(o.y===e.y){if(o.x===e.x)return true}else{const l=i*(o.x-e.x)-n*(o.y-e.y);if(l===0)return true;if(l<0)continue;c=!c}}else{if(o.y!==e.y)continue;if(t.x<=o.x&&o.x<=e.x||e.x<=o.x&&o.x<=t.x)return true}}return c}const i=Ed.isClockWise;const r=this.subPaths;if(r.length===0)return[];if(e===true)return t(r);let o,a,c;const l=[];if(r.length===1){a=r[0];c=new op;c.curves=a.curves;l.push(c);return l}let u=!i(r[0].getPoints());u=n?!u:u;const h=[];const d=[];let f=[];let p=0;let m;d[p]=undefined;f[p]=[];for(let e=0,t=r.length;e<t;e++){a=r[e];m=a.getPoints();o=i(m);o=n?!o:o;if(o){if(!u&&d[p])p++;d[p]={s:new op,p:m};d[p].s.curves=a.curves;if(u)p++;f[p]=[]}else{f[p].push({h:a,p:m[0]})}}if(!d[0])return t(r);if(d.length>1){let r=false;const y=[];for(let e=0,t=d.length;e<t;e++){h[e]=[]}for(let i=0,e=d.length;i<e;i++){const v=f[i];for(let n=0;n<v.length;n++){const x=v[n];let t=true;for(let e=0;e<d.length;e++){if(s(x.p,d[e].p)){if(i!==e)y.push({froms:i,tos:e,hole:n});if(t){t=false;h[e].push(x)}else{r=true}}}if(t){h[i].push(x)}}}if(y.length>0){if(!r)f=h}}let g;for(let e=0,t=d.length;e<t;e++){c=d[e].s;l.push(c);g=f[e];for(let e=0,t=g.length;e<t;e++){c.holes.push(g[e].h)}}return l}}class Up{constructor(e){this.type="Font";this.data=e}generateShapes(e,t=100){const n=[];const i=Hp(e,t,this.data);for(let e=0,t=i.length;e<t;e++){Array.prototype.push.apply(n,i[e].toShapes())}return n}}function Hp(e,t,n){const i=Array.from(e);const r=t/n.resolution;const s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r;const o=[];let a=0,c=0;for(let e=0;e<i.length;e++){const l=i[e];if(l==="\n"){a=0;c-=s}else{const u=zp(l,r,a,c,n);a+=u.offsetX;o.push(u.path)}}return o}function zp(e,n,i,r,t){const s=t.glyphs[e]||t.glyphs["?"];if(!s){console.error('THREE.Font: character "'+e+'" does not exists in font family '+t.familyName+".");return}const o=new Bp;let a,c,l,u,h,d,f,p;if(s.o){const m=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let e=0,t=m.length;e<t;){const g=m[e++];switch(g){case"m":a=m[e++]*n+i;c=m[e++]*n+r;o.moveTo(a,c);break;case"l":a=m[e++]*n+i;c=m[e++]*n+r;o.lineTo(a,c);break;case"q":l=m[e++]*n+i;u=m[e++]*n+r;h=m[e++]*n+i;d=m[e++]*n+r;o.quadraticCurveTo(h,d,l,u);break;case"b":l=m[e++]*n+i;u=m[e++]*n+r;h=m[e++]*n+i;d=m[e++]*n+r;f=m[e++]*n+i;p=m[e++]*n+r;o.bezierCurveTo(h,d,f,p,l,u);break}}}return{offsetX:s.ha*n,path:o}}Up.prototype.isFont=true;class Gp extends Mf{constructor(e){super(e)}load(e,i,t,n){const r=this;const s=new Ef(this.manager);s.setPath(this.path);s.setRequestHeader(this.requestHeader);s.setWithCredentials(r.withCredentials);s.load(e,function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.");n=JSON.parse(t.substring(65,t.length-2))}const e=r.parse(n);if(i)i(e)},t,n)}parse(e){return new Up(e)}}let kp;const Vp={getContext:function(){if(kp===undefined){kp=new(window.AudioContext||window.webkitAudioContext)}return kp},setContext:function(e){kp=e}};class Wp extends Mf{constructor(e){super(e)}load(i,r,e,s){const o=this;const t=new Ef(this.manager);t.setResponseType("arraybuffer");t.setPath(this.path);t.setRequestHeader(this.requestHeader);t.setWithCredentials(this.withCredentials);t.load(i,function(e){try{const t=e.slice(0);const n=Vp.getContext();n.decodeAudioData(t,function(e){r(e)})}catch(e){if(s){s(e)}else{console.error(e)}o.manager.itemError(i)}},e,s)}}class jp extends Sp{constructor(e,t,n=1){super(undefined,n);const i=(new br).set(e);const r=(new br).set(t);const s=new Zn(i.r,i.g,i.b);const o=new Zn(r.r,r.g,r.b);const a=Math.sqrt(Math.PI);const c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a);this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}}jp.prototype.isHemisphereLightProbe=true;class Xp extends Sp{constructor(e,t=1){super(undefined,t);const n=(new br).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Xp.prototype.isAmbientLightProbe=true;const qp=new Si;const Yp=new Si;class Zp{constructor(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new bs;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new bs;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(n){const i=this._cache;const e=i.focus!==n.focus||i.fov!==n.fov||i.aspect!==n.aspect*this.aspect||i.near!==n.near||i.far!==n.far||i.zoom!==n.zoom||i.eyeSep!==this.eyeSep;if(e){i.focus=n.focus;i.fov=n.fov;i.aspect=n.aspect*this.aspect;i.near=n.near;i.far=n.far;i.zoom=n.zoom;i.eyeSep=this.eyeSep;const r=n.projectionMatrix.clone();const s=i.eyeSep/2;const o=s*i.near/i.focus;const a=i.near*Math.tan(Bn.DEG2RAD*i.fov*.5)/i.zoom;let e,t;Yp.elements[12]=-s;qp.elements[12]=s;e=-a*i.aspect+o;t=a*i.aspect+o;r.elements[0]=2*i.near/(t-e);r.elements[8]=(t+e)/(t-e);this.cameraL.projectionMatrix.copy(r);e=-a*i.aspect-o;t=a*i.aspect-o;r.elements[0]=2*i.near/(t-e);r.elements[8]=(t+e)/(t-e);this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(Yp);this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(qp)}}class Jp{constructor(e){this.autoStart=e!==undefined?e:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false}start(){this.startTime=Kp();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true}stop(){this.getElapsedTime();this.running=false;this.autoStart=false}getElapsedTime(){this.getDelta();return this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running){this.start();return 0}if(this.running){const t=Kp();e=(t-this.oldTime)/1e3;this.oldTime=t;this.elapsedTime+=e}return e}}function Kp(){return(typeof performance==="undefined"?Date:performance).now()}const Qp=new Zn;const $p=new Yn;const em=new Zn;const tm=new Zn;class nm extends Ki{constructor(){super();this.type="AudioListener";this.context=Vp.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;this._clock=new Jp}getInput(){return this.gain}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null}return this}getFilter(){return this.filter}setFilter(e){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination)}else{this.gain.disconnect(this.context.destination)}this.filter=e;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01);return this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;const n=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(Qp,$p,em);tm.set(0,0,-1).applyQuaternion($p);if(t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Qp.x,i);t.positionY.linearRampToValueAtTime(Qp.y,i);t.positionZ.linearRampToValueAtTime(Qp.z,i);t.forwardX.linearRampToValueAtTime(tm.x,i);t.forwardY.linearRampToValueAtTime(tm.y,i);t.forwardZ.linearRampToValueAtTime(tm.z,i);t.upX.linearRampToValueAtTime(n.x,i);t.upY.linearRampToValueAtTime(n.y,i);t.upZ.linearRampToValueAtTime(n.z,i)}else{t.setPosition(Qp.x,Qp.y,Qp.z);t.setOrientation(tm.x,tm.y,tm.z,n.x,n.y,n.z)}}}class im extends Ki{constructor(e){super();this.type="Audio";this.listener=e;this.context=e.context;this.gain=this.context.createGain();this.gain.connect(e.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType="empty";this._startedAt=0;this._progress=0;this._connected=false;this.filters=[]}getOutput(){return this.gain}setNodeSource(e){this.hasPlaybackControl=false;this.sourceType="audioNode";this.source=e;this.connect();return this}setMediaElementSource(e){this.hasPlaybackControl=false;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(e);this.connect();return this}setMediaStreamSource(e){this.hasPlaybackControl=false;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(e);this.connect();return this}setBuffer(e){this.buffer=e;this.sourceType="buffer";if(this.autoplay)this.play();return this}play(e=0){if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();t.buffer=this.buffer;t.loop=this.loop;t.loopStart=this.loopStart;t.loopEnd=this.loopEnd;t.onended=this.onEnded.bind(this);t.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=t;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect()}pause(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}if(this.isPlaying===true){this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){this._progress=this._progress%(this.duration||this.buffer.duration)}this.source.stop();this.source.onended=null;this.isPlaying=false}return this}stop(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++){this.filters[e-1].connect(this.filters[e])}this.filters[this.filters.length-1].connect(this.getOutput())}else{this.source.connect(this.getOutput())}this._connected=true;return this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++){this.filters[e-1].disconnect(this.filters[e])}this.filters[this.filters.length-1].disconnect(this.getOutput())}else{this.source.disconnect(this.getOutput())}this._connected=false;return this}getFilters(){return this.filters}setFilters(e){if(!e)e=[];if(this._connected===true){this.disconnect();this.filters=e.slice();this.connect()}else{this.filters=e.slice()}return this}setDetune(e){this.detune=e;if(this.source.detune===undefined)return;if(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01)}return this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.playbackRate=e;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01)}return this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=false}getLoop(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return false}return this.loop}setLoop(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.loop=e;if(this.isPlaying===true){this.source.loop=this.loop}return this}setLoopStart(e){this.loopStart=e;return this}setLoopEnd(e){this.loopEnd=e;return this}getVolume(){return this.gain.gain.value}setVolume(e){this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01);return this}}const rm=new Zn;const sm=new Yn;const om=new Zn;const am=new Zn;class cm extends im{constructor(e){super(e);this.panner=this.context.createPanner();this.panner.panningModel="HRTF";this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){this.panner.refDistance=e;return this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){this.panner.rolloffFactor=e;return this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){this.panner.distanceModel=e;return this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){this.panner.maxDistance=e;return this}setDirectionalCone(e,t,n){this.panner.coneInnerAngle=e;this.panner.coneOuterAngle=t;this.panner.coneOuterGain=n;return this}updateMatrixWorld(e){super.updateMatrixWorld(e);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(rm,sm,om);am.set(0,0,1).applyQuaternion(sm);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(rm.x,n);t.positionY.linearRampToValueAtTime(rm.y,n);t.positionZ.linearRampToValueAtTime(rm.z,n);t.orientationX.linearRampToValueAtTime(am.x,n);t.orientationY.linearRampToValueAtTime(am.y,n);t.orientationZ.linearRampToValueAtTime(am.z,n)}else{t.setPosition(rm.x,rm.y,rm.z);t.setOrientation(am.x,am.y,am.z)}}}class lm{constructor(e,t=2048){this.analyser=e.context.createAnalyser();this.analyser.fftSize=t;this.data=new Uint8Array(this.analyser.frequencyBinCount);e.getOutput().connect(this.analyser)}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data}getAverageFrequency(){let t=0;const n=this.getFrequencyData();for(let e=0;e<n.length;e++){t+=n[e]}return t/n.length}}class um{constructor(e,t,n){this.binding=e;this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp;r=this._slerpAdditive;s=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(n*6);this._workIndex=5;break;case"string":case"bool":i=this._select;r=this._select;s=this._setAdditiveIdentityOther;this.buffer=new Array(n*5);break;default:i=this._lerp;r=this._lerpAdditive;s=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i;this._mixBufferRegionAdditive=r;this._setIdentity=s;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let e=0;e!==i;++e){n[r+e]=n[e]}s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;if(this.cumulativeWeightAdditive===0){this._setIdentity()}this._mixBufferRegionAdditive(t,i,0,e,n);this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,t=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(t<1){const a=n*this._origIndex;this._mixBufferRegion(i,r,a,1-t,n)}if(s>0){this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n)}for(let e=n,t=n+n;e!==t;++e){if(i[e]!==i[e+n]){o.setValue(i,r);break}}}saveOriginalState(){const e=this.binding;const n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let e=i,t=r;e!==t;++e){n[e]=n[r+e%i]}this._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize;const n=t+this.valueSize;for(let e=t;e<n;e++){this.buffer[e]=0}}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize;const n=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++){this.buffer[n+e]=this.buffer[t+e]}}_select(t,n,i,e,r){if(e>=.5){for(let e=0;e!==r;++e){t[n+e]=t[i+e]}}}_slerp(e,t,n,i){Yn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const s=this._workIndex*r;Yn.multiplyQuaternionsFlat(e,s,e,t,e,n);Yn.slerpFlat(e,t,e,t,e,s,i)}_lerp(t,n,i,r,s){const o=1-r;for(let e=0;e!==s;++e){const a=n+e;t[a]=t[a]*o+t[i+e]*r}}_lerpAdditive(t,n,i,r,s){for(let e=0;e!==s;++e){const o=n+e;t[o]=t[o]+t[i+e]*r}}}const hm="\\[\\]\\.:\\/";const dm=new RegExp("["+hm+"]","g");const fm="[^"+hm+"]";const pm="[^"+hm.replace("\\.","")+"]";const mm=/((?:WC+[\/:])*)/.source.replace("WC",fm);const gm=/(WCOD+)?/.source.replace("WCOD",pm);const ym=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fm);const vm=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fm);const xm=new RegExp(""+"^"+mm+gm+ym+vm+"$");const _m=["material","materials","bones"];function bm(e,t,n){const i=n||Mm.parseTrackName(t);this._targetGroup=e;this._bindings=e.subscribe_(t,i)}Object.assign(bm.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];if(i!==undefined)i.getValue(e,t)},setValue:function(n,i){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e){r[e].setValue(n,i)}},bind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e){n[e].bind()}},unbind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e){n[e].unbind()}}});function Mm(e,t,n){this.path=t;this.parsedPath=n||Mm.parseTrackName(t);this.node=Mm.findNode(e,this.parsedPath.nodeName)||e;this.rootNode=e}Object.assign(Mm,{Composite:bm,create:function(e,t,n){if(!(e&&e.isAnimationObjectGroup)){return new Mm(e,t,n)}else{return new Mm.Composite(e,t,n)}},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(dm,"")},parseTrackName:function(e){const t=xm.exec(e);if(!t){throw new Error("PropertyBinding: Cannot parse trackName: "+e)}const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};const i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==undefined&&i!==-1){const r=n.nodeName.substring(i+1);if(_m.indexOf(r)!==-1){n.nodeName=n.nodeName.substring(0,i);n.objectName=r}}if(n.propertyName===null||n.propertyName.length===0){throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e)}return n},findNode:function(e,r){if(!r||r===""||r==="."||r===-1||r===e.name||r===e.uuid){return e}if(e.skeleton){const t=e.skeleton.getBoneByName(r);if(t!==undefined){return t}}if(e.children){const s=function(t){for(let e=0;e<t.length;e++){const n=t[e];if(n.name===r||n.uuid===r){return n}const i=s(n.children);if(i)return i}return null};const n=s(e.children);if(n){return n}}return null}});Object.assign(Mm.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function e(t,n){t[n]=this.node[this.propertyName]},function e(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e){n[i++]=r[e]}},function e(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function e(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function e(t,n){this.targetObject[this.propertyName]=t[n]},function e(t,n){this.targetObject[this.propertyName]=t[n];this.targetObject.needsUpdate=true},function e(t,n){this.targetObject[this.propertyName]=t[n];this.targetObject.matrixWorldNeedsUpdate=true}],[function e(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e){r[e]=n[i++]}},function e(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e){r[e]=n[i++]}this.targetObject.needsUpdate=true},function e(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e){r[e]=n[i++]}this.targetObject.matrixWorldNeedsUpdate=true}],[function e(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function e(t,n){this.resolvedProperty[this.propertyIndex]=t[n];this.targetObject.needsUpdate=true},function e(t,n){this.resolvedProperty[this.propertyIndex]=t[n];this.targetObject.matrixWorldNeedsUpdate=true}],[function e(t,n){this.resolvedProperty.fromArray(t,n)},function e(t,n){this.resolvedProperty.fromArray(t,n);this.targetObject.needsUpdate=true},function e(t,n){this.resolvedProperty.fromArray(t,n);this.targetObject.matrixWorldNeedsUpdate=true}]],getValue:function e(t,n){this.bind();this.getValue(t,n)},setValue:function e(t,n){this.bind();this.setValue(t,n)},bind:function(){let n=this.node;const e=this.parsedPath;const i=e.objectName;const t=e.propertyName;let r=e.propertyIndex;if(!n){n=Mm.findNode(this.rootNode,e.nodeName)||this.rootNode;this.node=n}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!n){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let t=e.objectIndex;switch(i){case"materials":if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}n=n.material.materials;break;case"bones":if(!n.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}n=n.skeleton.bones;for(let e=0;e<n.length;e++){if(n[e].name===t){t=e;break}}break;default:if(n[i]===undefined){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}n=n[i]}if(t!==undefined){if(n[t]===undefined){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);return}n=n[t]}}const s=n[t];if(s===undefined){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+t+" but it wasn't found.",n);return}let o=this.Versioning.None;this.targetObject=n;if(n.needsUpdate!==undefined){o=this.Versioning.NeedsUpdate}else if(n.matrixWorldNeedsUpdate!==undefined){o=this.Versioning.MatrixWorldNeedsUpdate}let a=this.BindingType.Direct;if(r!==undefined){if(t==="morphTargetInfluences"){if(!n.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(n.geometry.isBufferGeometry){if(!n.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}if(n.morphTargetDictionary[r]!==undefined){r=n.morphTargetDictionary[r]}}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement;this.resolvedProperty=s;this.propertyIndex=r}else if(s.fromArray!==undefined&&s.toArray!==undefined){a=this.BindingType.HasFromToArray;this.resolvedProperty=s}else if(Array.isArray(s)){a=this.BindingType.EntireArray;this.resolvedProperty=s}else{this.propertyName=t}this.getValue=this.GetterByBindingType[a];this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(Mm.prototype,{_getValue_unbound:Mm.prototype.getValue,_setValue_unbound:Mm.prototype.setValue});class wm{constructor(){this.uuid=Bn.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let e=0,t=arguments.length;e!==t;++e){n[arguments[e].uuid]=e}this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const i=this._objects,r=this._indicesByUUID,s=this._paths,o=this._parsedPaths,a=this._bindings,c=a.length;let l=undefined,u=i.length,h=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){const d=arguments[e],f=d.uuid;let n=r[f];if(n===undefined){n=u++;r[f]=n;i.push(d);for(let e=0,t=c;e!==t;++e){a[e].push(new Mm(d,s[e],o[e]))}}else if(n<h){l=i[n];const p=--h,m=i[p];r[m.uuid]=n;i[n]=m;r[f]=p;i[p]=d;for(let t=0,e=c;t!==e;++t){const g=a[t],y=g[p];let e=g[n];g[n]=y;if(e===undefined){e=new Mm(d,s[t],o[t])}g[p]=e}}else if(i[n]!==l){console.error("THREE.AnimationObjectGroup: Different objects with the same UUID "+"detected. Clean the caches or recreate your infrastructure when reloading scenes.")}}this.nCachedObjects_=h}remove(){const n=this._objects,i=this._indicesByUUID,r=this._bindings,s=r.length;let o=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){const a=arguments[e],c=a.uuid,l=i[c];if(l!==undefined&&l>=o){const u=o++,h=n[u];i[h.uuid]=l;n[l]=h;i[c]=u;n[u]=a;for(let e=0,t=s;e!==t;++e){const d=r[e],f=d[u],p=d[l];d[l]=f;d[u]=p}}}this.nCachedObjects_=o}uncache(){const n=this._objects,i=this._indicesByUUID,r=this._bindings,s=r.length;let o=this.nCachedObjects_,a=n.length;for(let e=0,t=arguments.length;e!==t;++e){const c=arguments[e],l=c.uuid,u=i[l];if(u!==undefined){delete i[l];if(u<o){const h=--o,d=n[h],f=--a,p=n[f];i[d.uuid]=u;n[u]=d;i[p.uuid]=h;n[h]=p;n.pop();for(let e=0,t=s;e!==t;++e){const m=r[e],g=m[h],y=m[f];m[u]=g;m[h]=y;m.pop()}}else{const f=--a,p=n[f];if(f>0){i[p.uuid]=u}n[u]=p;n.pop();for(let e=0,t=s;e!==t;++e){const m=r[e];m[u]=m[f];m.pop()}}}}this.nCachedObjects_=o}subscribe_(n,i){const e=this._bindingsIndicesByPath;let t=e[n];const r=this._bindings;if(t!==undefined)return r[t];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,u=new Array(c);t=r.length;e[n]=t;s.push(n);o.push(i);r.push(u);for(let e=l,t=a.length;e!==t;++e){const h=a[e];u[e]=new Mm(h,n,i)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==undefined){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],c=e[o];t[c]=n;s[n]=a;s.pop();r[n]=r[o];r.pop();i[n]=i[o];i.pop()}}}wm.prototype.isAnimationObjectGroup=true;class Em{constructor(e,t,n=null,i=t.blendMode){this._mixer=e;this._clip=t;this._localRoot=n;this.blendMode=i;const r=t.tracks,s=r.length,o=new Array(s);const a={endingStart:zt,endingEnd:zt};for(let e=0;e!==s;++e){const c=r[e].createInterpolant(null);o[e]=c;c.settings=a}this._interpolantSettings=a;this._interpolants=o;this._propertyBindings=new Array(s);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=Ft;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true}play(){this._mixer._activateAction(this);return this}stop(){this._mixer._deactivateAction(this);return this.reset()}reset(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){this._startTime=e;return this}setLoop(e,t){this.loop=e;this.repetitions=t;return this}setEffectiveWeight(e){this.weight=e;this._effectiveWeight=this.enabled?e:0;return this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){e.fadeOut(t);this.fadeIn(t);if(n){const i=this._clip.duration,r=e._clip.duration,s=r/i,o=i/r;e.warp(1,s,t);this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;if(e!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this}setEffectiveTimeScale(e){this.timeScale=e;this._effectiveTimeScale=this.paused?0:e;return this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){this.timeScale=this._clip.duration/e;return this.stopWarping()}syncWith(e){this.time=e.time;this.timeScale=e.timeScale;return this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,s=this.timeScale;let o=this._timeScaleInterpolant;if(o===null){o=i._lendControlInterpolant();this._timeScaleInterpolant=o}const a=o.parameterPositions,c=o.sampleValues;a[0]=r;a[1]=r+n;c[0]=e/s;c[1]=t/s;return this}stopWarping(){const e=this._timeScaleInterpolant;if(e!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const a=(e-r)*n;if(a<0||n===0){return}this._startTime=null;t=n*a}t*=this._updateTimeScale(e);const s=this._updateTime(t);const o=this._updateWeight(e);if(o>0){const c=this._interpolants;const l=this._propertyBindings;switch(this.blendMode){case Wt:for(let e=0,t=c.length;e!==t;++e){c[e].evaluate(s);l[e].accumulateAdditive(o)}break;case Vt:default:for(let e=0,t=c.length;e!==t;++e){c[e].evaluate(s);l[e].accumulate(i,o)}}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i;if(e>n.parameterPositions[1]){this.stopFading();if(i===0){this.enabled=false}}}}this._effectiveWeight=t;return t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i;if(e>n.parameterPositions[1]){this.stopWarping();if(t===0){this.paused=true}else{this.timeScale=t}}}}this._effectiveTimeScale=t;return t}_updateTime(e){const t=this._clip.duration;const n=this.loop;let i=this.time+e;let r=this._loopCount;const s=n===Ot;if(e===0){if(r===-1)return i;return s&&(r&1)===1?t-i:i}if(n===Nt){if(r===-1){this._loopCount=0;this._setEndings(true,true,false)}e:{if(i>=t){i=t}else if(i<0){i=0}else{this.time=i;break e}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=i;this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1){if(e>=0){r=0;this._setEndings(true,this.repetitions===0,s)}else{this._setEndings(this.repetitions===0,true,s)}}if(i>=t||i<0){const o=Math.floor(i/t);i-=t*o;r+=Math.abs(o);const a=this.repetitions-r;if(a<=0){if(this.clampWhenFinished)this.paused=true;else this.enabled=false;i=e>0?t:0;this.time=i;this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1})}else{if(a===1){const c=e<0;this._setEndings(c,!c,s)}else{this._setEndings(false,false,s)}this._loopCount=r;this.time=i;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else{this.time=i}if(s&&(r&1)===1){return t-i}}return i}_setEndings(e,t,n){const i=this._interpolantSettings;if(n){i.endingStart=Gt;i.endingEnd=Gt}else{if(e){i.endingStart=this.zeroSlopeAtStart?Gt:zt}else{i.endingStart=kt}if(t){i.endingEnd=this.zeroSlopeAtEnd?Gt:zt}else{i.endingEnd=kt}}}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;if(s===null){s=i._lendControlInterpolant();this._weightInterpolant=s}const o=s.parameterPositions,a=s.sampleValues;o[0]=r;a[0]=t;o[1]=r+e;a[1]=n;return this}}class Tm extends Nn{constructor(e){super();this._root=e;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,a=e._interpolants,c=i.uuid,t=this._bindingsByRootAndName;let l=t[c];if(l===undefined){l={};t[c]=l}for(let t=0;t!==s;++t){const u=r[t],h=u.name;let e=l[h];if(e!==undefined){o[t]=e}else{e=o[t];if(e!==undefined){if(e._cacheIndex===null){++e.referenceCount;this._addInactiveBinding(e,c,h)}continue}const d=n&&n._propertyBindings[t].binding.parsedPath;e=new um(Mm.create(i,h,d),u.ValueTypeName,u.getValueSize());++e.referenceCount;this._addInactiveBinding(e,c,h);o[t]=e}a[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const t=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]);this._addInactiveAction(e,i,t)}const n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const s=n[e];if(s.useCount++===0){this._lendBinding(s);s.saveOriginalState()}}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const i=n[e];if(--i.useCount===0){i.restoreOriginalState();this._takeBackBinding(i)}}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===undefined){s={knownActions:[e],actionByRoot:{}};e._byClipCacheIndex=0;r[t]=s}else{const o=s.knownActions;e._byClipCacheIndex=o.length;o.push(e)}e._cacheIndex=i.length;i.push(e);s.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i;t[i]=n;t.pop();e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l;a[l]=c;a.pop();e._byClipCacheIndex=null;const u=o.actionByRoot,h=(e._localRoot||this._root).uuid;delete u[h];if(a.length===0){delete s[r]}this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const i=n[e];if(--i.referenceCount===0){this._removeInactiveBinding(i)}}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];if(s===undefined){s={};i[t]=s}s[n]=e;e._cacheIndex=r.length;r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c;t[c]=a;t.pop();delete o[r];if(Object.keys(o).length===0){delete s[i]}}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];if(n===undefined){n=new of(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);n.__cacheIndex=t;e[t]=n}return n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i;t[i]=e;r.__cacheIndex=n;t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e==="string"?gf.findByName(i,e):e;const o=s!==null?s.uuid:e;const a=this._actionsByClip[o];let c=null;if(n===undefined){if(s!==null){n=s.blendMode}else{n=Vt}}if(a!==undefined){const u=a.actionByRoot[r];if(u!==undefined&&u.blendMode===n){return u}c=a.knownActions[0];if(s===null)s=c._clip}if(s===null)return null;const l=new Em(this,s,t,n);this._bindAction(l,c);this._addInactiveAction(l,o,r);return l}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e==="string"?gf.findByName(n,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];if(o!==undefined){return o.actionByRoot[i]||null}return null}stopAllAction(){const t=this._actions,n=this._nActiveActions;for(let e=n-1;e>=0;--e){t[e].stop()}return this}update(t){t*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let e=0;e!==i;++e){const l=n[e];l._update(r,t,s,o)}const a=this._bindings,c=this._nActiveBindings;for(let e=0;e!==c;++e){a[e].apply(o)}return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++){this._actions[e].time=0}return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,t=e.uuid,i=this._actionsByClip,r=i[t];if(r!==undefined){const s=r.knownActions;for(let e=0,t=s.length;e!==t;++e){const o=s[e];this._deactivateAction(o);const a=o._cacheIndex,c=n[n.length-1];o._cacheIndex=null;o._byClipCacheIndex=null;c._cacheIndex=a;n[a]=c;n.pop();this._removeInactiveBindingsForAction(o)}delete i[t]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[t];if(a!==undefined){this._deactivateAction(a);this._removeInactiveAction(a)}}const i=this._bindingsByRootAndName,r=i[t];if(r!==undefined){for(const c in r){const l=r[c];l.restoreOriginalState();this._removeInactiveBinding(l)}}}uncacheAction(e,t){const n=this.existingAction(e,t);if(n!==null){this._deactivateAction(n);this._removeInactiveAction(n)}}}Tm.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Sm{constructor(e){if(typeof e==="string"){console.warn("THREE.Uniform: Type parameter is no longer needed.");e=arguments[1]}this.value=e}clone(){return new Sm(this.value.clone===undefined?this.value:this.value.clone())}}function Am(e,t,n){Pu.call(this,e,t);this.meshPerAttribute=n||1}Am.prototype=Object.assign(Object.create(Pu.prototype),{constructor:Am,isInstancedInterleavedBuffer:true,copy:function(e){Pu.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this},clone:function(e){const t=Pu.prototype.clone.call(this,e);t.meshPerAttribute=this.meshPerAttribute;return t},toJSON:function(e){const t=Pu.prototype.toJSON.call(this,e);t.isInstancedInterleavedBuffer=true;t.meshPerAttribute=this.meshPerAttribute;return t}});function Rm(e,t,n,i,r){this.buffer=e;this.type=t;this.itemSize=n;this.elementSize=i;this.count=r;this.version=0}Object.defineProperty(Rm.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Rm.prototype,{isGLBufferAttribute:true,setBuffer:function(e){this.buffer=e;return this},setType:function(e,t){this.type=e;this.elementSize=t;return this},setItemSize:function(e){this.itemSize=e;return this},setCount:function(e){this.count=e;return this}});function Lm(e,t,n=0,i=Infinity){this.ray=new Ti(e,t);this.near=n;this.far=i;this.camera=null;this.layers=new Bi;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function Cm(e,t){return e.distance-t.distance}function Pm(e,n,i,t){if(e.layers.test(n.layers)){e.raycast(n,i)}if(t===true){const r=e.children;for(let e=0,t=r.length;e<t;e++){Pm(r[e],n,i,true)}}}Object.assign(Lm.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){if(t&&t.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(t.matrixWorld);this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize();this.camera=t}else if(t&&t.isOrthographicCamera){this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t);this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld);this.camera=t}else{console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}},intersectObject:function(e,t=false,n=[]){Pm(e,this,n,t);n.sort(Cm);return n},intersectObjects:function(n,i=false,r=[]){for(let e=0,t=n.length;e<t;e++){Pm(n[e],this,r,i)}r.sort(Cm);return r}});class Im{constructor(e=1,t=0,n=0){this.radius=e;this.phi=t;this.theta=n;return this}set(e,t,n){this.radius=e;this.phi=t;this.theta=n;return this}copy(e){this.radius=e.radius;this.phi=e.phi;this.theta=e.theta;return this}makeSafe(){const e=1e-6;this.phi=Math.max(e,Math.min(Math.PI-e,this.phi));return this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){this.radius=Math.sqrt(e*e+t*t+n*n);if(this.radius===0){this.theta=0;this.phi=0}else{this.theta=Math.atan2(e,n);this.phi=Math.acos(Bn.clamp(t/this.radius,-1,1))}return this}clone(){return(new this.constructor).copy(this)}}class Dm{constructor(e=1,t=0,n=0){this.radius=e;this.theta=t;this.y=n;return this}set(e,t,n){this.radius=e;this.theta=t;this.y=n;return this}copy(e){this.radius=e.radius;this.theta=e.theta;this.y=e.y;return this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){this.radius=Math.sqrt(e*e+n*n);this.theta=Math.atan2(e,n);this.y=t;return this}clone(){return(new this.constructor).copy(this)}}const Nm=new Un;class Fm{constructor(e=new Un(+Infinity,+Infinity),t=new Un(-Infinity,-Infinity)){this.min=e;this.max=t}set(e,t){this.min.copy(e);this.max.copy(t);return this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++){this.expandByPoint(n[e])}return this}setFromCenterAndSize(e,t){const n=Nm.copy(t).multiplyScalar(.5);this.min.copy(e).sub(n);this.max.copy(e).add(n);return this}clone(){return(new this.constructor).copy(this)}copy(e){this.min.copy(e.min);this.max.copy(e.max);return this}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){if(e===undefined){console.warn("THREE.Box2: .getCenter() target is now required");e=new Un}return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){if(e===undefined){console.warn("THREE.Box2: .getSize() target is now required");e=new Un}return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){this.min.min(e);this.max.max(e);return this}expandByVector(e){this.min.sub(e);this.max.add(e);return this}expandByScalar(e){this.min.addScalar(-e);this.max.addScalar(e);return this}containsPoint(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?false:true}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){if(t===undefined){console.warn("THREE.Box2: .getParameter() target is now required");t=new Un}return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?false:true}clampPoint(e,t){if(t===undefined){console.warn("THREE.Box2: .clampPoint() target is now required");t=new Un}return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Nm.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){this.min.max(e.min);this.max.min(e.max);return this}union(e){this.min.min(e.min);this.max.max(e.max);return this}translate(e){this.min.add(e);this.max.add(e);return this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Fm.prototype.isBox2=true;const Om=new Zn;const Bm=new Zn;class Um{constructor(e=new Zn,t=new Zn){this.start=e;this.end=t}set(e,t){this.start.copy(e);this.end.copy(t);return this}copy(e){this.start.copy(e.start);this.end.copy(e.end);return this}getCenter(e){if(e===undefined){console.warn("THREE.Line3: .getCenter() target is now required");e=new Zn}return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){if(e===undefined){console.warn("THREE.Line3: .delta() target is now required");e=new Zn}return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){if(t===undefined){console.warn("THREE.Line3: .at() target is now required");t=new Zn}return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Om.subVectors(e,this.start);Bm.subVectors(this.end,this.start);const n=Bm.dot(Bm);const i=Bm.dot(Om);let r=i/n;if(t){r=Bn.clamp(r,0,1)}return r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);if(n===undefined){console.warn("THREE.Line3: .closestPointToPoint() target is now required");n=new Zn}return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}function Hm(e){Ki.call(this);this.material=e;this.render=function(){};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0}Hm.prototype=Object.create(Ki.prototype);Hm.prototype.constructor=Hm;Hm.prototype.isImmediateRenderObject=true;const zm=new Zn;class Gm extends Ki{constructor(e,t){super();this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=t;const n=new Xr;const i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,n=32;e<n;e++,t++){const s=e/n*Math.PI*2;const o=t/n*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}n.setAttribute("position",new Nr(i,3));const r=new ph({fog:false,toneMapped:false});this.cone=new wh(n,r);this.add(this.cone);this.update()}dispose(){this.cone.geometry.dispose();this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3;const t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e);zm.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(zm);if(this.color!==undefined){this.cone.material.color.set(this.color)}else{this.cone.material.color.copy(this.light.color)}}}const km=new Zn;const Vm=new Si;const Wm=new Si;class jm extends wh{constructor(e){const t=Xm(e);const n=new Xr;const i=[];const r=[];const s=new br(0,0,1);const o=new br(0,1,0);for(let e=0;e<t.length;e++){const c=t[e];if(c.parent&&c.parent.isBone){i.push(0,0,0);i.push(0,0,0);r.push(s.r,s.g,s.b);r.push(o.r,o.g,o.b)}}n.setAttribute("position",new Nr(i,3));n.setAttribute("color",new Nr(r,3));const a=new ph({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(n,a);this.type="SkeletonHelper";this.isSkeletonHelper=true;this.root=e;this.bones=t;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false}updateMatrixWorld(e){const n=this.bones;const t=this.geometry;const i=t.getAttribute("position");Wm.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){const r=n[e];if(r.parent&&r.parent.isBone){Vm.multiplyMatrices(Wm,r.matrixWorld);km.setFromMatrixPosition(Vm);i.setXYZ(t,km.x,km.y,km.z);Vm.multiplyMatrices(Wm,r.parent.matrixWorld);km.setFromMatrixPosition(Vm);i.setXYZ(t+1,km.x,km.y,km.z);t+=2}}t.getAttribute("position").needsUpdate=true;super.updateMatrixWorld(e)}}function Xm(t){const n=[];if(t&&t.isBone){n.push(t)}for(let e=0;e<t.children.length;e++){n.push.apply(n,Xm(t.children[e]))}return n}class qm extends us{constructor(e,t,n){const i=new Bd(t,4,2);const r=new Mr({wireframe:true,fog:false,toneMapped:false});super(i,r);this.light=e;this.light.updateMatrixWorld();this.color=n;this.type="PointLightHelper";this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update()}dispose(){this.geometry.dispose();this.material.dispose()}update(){if(this.color!==undefined){this.material.color.set(this.color)}else{this.material.color.copy(this.light.color)}}}const Ym=new Zn;const Zm=new br;const Jm=new br;class Km extends Ki{constructor(e,t,n){super();this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=n;const i=new Id(t);i.rotateY(Math.PI*.5);this.material=new Mr({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const r=i.getAttribute("position");const s=new Float32Array(r.count*3);i.setAttribute("color",new Tr(s,3));this.add(new us(i,this.material));this.update()}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==undefined){this.material.color.set(this.color)}else{const n=e.geometry.getAttribute("color");Zm.copy(this.light.color);Jm.copy(this.light.groundColor);for(let e=0,t=n.count;e<t;e++){const i=e<t/2?Zm:Jm;n.setXYZ(e,i.r,i.g,i.b)}n.needsUpdate=true}e.lookAt(Ym.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Qm extends wh{constructor(e=10,i=10,r=4473924,s=8947848){r=new br(r);s=new br(s);const o=i/2;const a=e/i;const c=e/2;const l=[],u=[];for(let e=0,t=0,n=-c;e<=i;e++,n+=a){l.push(-c,0,n,c,0,n);l.push(n,0,-c,n,0,c);const h=e===o?r:s;h.toArray(u,t);t+=3;h.toArray(u,t);t+=3;h.toArray(u,t);t+=3;h.toArray(u,t);t+=3}const t=new Xr;t.setAttribute("position",new Nr(l,3));t.setAttribute("color",new Nr(u,3));const n=new ph({vertexColors:true,toneMapped:false});super(t,n);this.type="GridHelper"}}class $m extends wh{constructor(t=10,n=16,i=8,r=64,s=4473924,o=8947848){s=new br(s);o=new br(o);const a=[];const c=[];for(let e=0;e<=n;e++){const u=e/n*(Math.PI*2);const h=Math.sin(u)*t;const d=Math.cos(u)*t;a.push(0,0,0);a.push(h,0,d);const f=e&1?s:o;c.push(f.r,f.g,f.b);c.push(f.r,f.g,f.b)}for(let e=0;e<=i;e++){const f=e&1?s:o;const p=t-t/i*e;for(let i=0;i<r;i++){let e=i/r*(Math.PI*2);let t=Math.sin(e)*p;let n=Math.cos(e)*p;a.push(t,0,n);c.push(f.r,f.g,f.b);e=(i+1)/r*(Math.PI*2);t=Math.sin(e)*p;n=Math.cos(e)*p;a.push(t,0,n);c.push(f.r,f.g,f.b)}}const e=new Xr;e.setAttribute("position",new Nr(a,3));e.setAttribute("color",new Nr(c,3));const l=new ph({vertexColors:true,toneMapped:false});super(e,l);this.type="PolarGridHelper"}}const eg=new Zn;const tg=new Zn;const ng=new Zn;class ig extends Ki{constructor(e,t,n){super();this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=n;if(t===undefined)t=1;let i=new Xr;i.setAttribute("position",new Nr([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new ph({fog:false,toneMapped:false});this.lightPlane=new _h(i,r);this.add(this.lightPlane);i=new Xr;i.setAttribute("position",new Nr([0,0,0,0,0,1],3));this.targetLine=new _h(i,r);this.add(this.targetLine);this.update()}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()}update(){eg.setFromMatrixPosition(this.light.matrixWorld);tg.setFromMatrixPosition(this.light.target.matrixWorld);ng.subVectors(tg,eg);this.lightPlane.lookAt(tg);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color)}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color)}this.targetLine.lookAt(tg);this.targetLine.scale.z=ng.length()}}const rg=new Zn;const sg=new _s;class og extends wh{constructor(e){const t=new Xr;const n=new ph({color:16777215,vertexColors:true,toneMapped:false});const i=[];const r=[];const s={};const o=new br(16755200);const a=new br(16711680);const c=new br(43775);const l=new br(16777215);const u=new br(3355443);h("n1","n2",o);h("n2","n4",o);h("n4","n3",o);h("n3","n1",o);h("f1","f2",o);h("f2","f4",o);h("f4","f3",o);h("f3","f1",o);h("n1","f1",o);h("n2","f2",o);h("n3","f3",o);h("n4","f4",o);h("p","n1",a);h("p","n2",a);h("p","n3",a);h("p","n4",a);h("u1","u2",c);h("u2","u3",c);h("u3","u1",c);h("c","t",l);h("p","c",u);h("cn1","cn2",u);h("cn3","cn4",u);h("cf1","cf2",u);h("cf3","cf4",u);function h(e,t,n){d(e,n);d(t,n)}function d(e,t){i.push(0,0,0);r.push(t.r,t.g,t.b);if(s[e]===undefined){s[e]=[]}s[e].push(i.length/3-1)}t.setAttribute("position",new Nr(i,3));t.setAttribute("color",new Nr(r,3));super(t,n);this.type="CameraHelper";this.camera=e;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=s;this.update()}update(){const e=this.geometry;const t=this.pointMap;const n=1,i=1;sg.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);ag("c",t,e,sg,0,0,-1);ag("t",t,e,sg,0,0,1);ag("n1",t,e,sg,-n,-i,-1);ag("n2",t,e,sg,n,-i,-1);ag("n3",t,e,sg,-n,i,-1);ag("n4",t,e,sg,n,i,-1);ag("f1",t,e,sg,-n,-i,1);ag("f2",t,e,sg,n,-i,1);ag("f3",t,e,sg,-n,i,1);ag("f4",t,e,sg,n,i,1);ag("u1",t,e,sg,n*.7,i*1.1,-1);ag("u2",t,e,sg,-n*.7,i*1.1,-1);ag("u3",t,e,sg,0,i*2,-1);ag("cf1",t,e,sg,-n,0,1);ag("cf2",t,e,sg,n,0,1);ag("cf3",t,e,sg,0,-i,1);ag("cf4",t,e,sg,0,i,1);ag("cn1",t,e,sg,-n,0,-1);ag("cn2",t,e,sg,n,0,-1);ag("cn3",t,e,sg,0,-i,-1);ag("cn4",t,e,sg,0,i,-1);e.getAttribute("position").needsUpdate=true}}function ag(e,t,n,i,r,s,o){rg.set(r,s,o).unproject(i);const a=t[e];if(a!==undefined){const c=n.getAttribute("position");for(let e=0,t=a.length;e<t;e++){c.setXYZ(a[e],rg.x,rg.y,rg.z)}}}const cg=new Qn;class lg extends wh{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const i=new Float32Array(8*3);const r=new Xr;r.setIndex(new Tr(n,1));r.setAttribute("position",new Tr(i,3));super(r,new ph({color:t,toneMapped:false}));this.object=e;this.type="BoxHelper";this.matrixAutoUpdate=false;this.update()}update(e){if(e!==undefined){console.warn("THREE.BoxHelper: .update() has no longer arguments.")}if(this.object!==undefined){cg.setFromObject(this.object)}if(cg.isEmpty())return;const t=cg.min;const n=cg.max;const i=this.geometry.attributes.position;const r=i.array;r[0]=n.x;r[1]=n.y;r[2]=n.z;r[3]=t.x;r[4]=n.y;r[5]=n.z;r[6]=t.x;r[7]=t.y;r[8]=n.z;r[9]=n.x;r[10]=t.y;r[11]=n.z;r[12]=n.x;r[13]=n.y;r[14]=t.z;r[15]=t.x;r[16]=n.y;r[17]=t.z;r[18]=t.x;r[19]=t.y;r[20]=t.z;r[21]=n.x;r[22]=t.y;r[23]=t.z;i.needsUpdate=true;this.geometry.computeBoundingSphere()}setFromObject(e){this.object=e;this.update();return this}copy(e){wh.prototype.copy.call(this,e);this.object=e.object;return this}}class ug extends wh{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const r=new Xr;r.setIndex(new Tr(n,1));r.setAttribute("position",new Nr(i,3));super(r,new ph({color:t,toneMapped:false}));this.box=e;this.type="Box3Helper";this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;if(t.isEmpty())return;t.getCenter(this.position);t.getSize(this.scale);this.scale.multiplyScalar(.5);super.updateMatrixWorld(e)}}class hg extends _h{constructor(e,t=1,n=16776960){const i=n;const r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];const s=new Xr;s.setAttribute("position",new Nr(r,3));s.computeBoundingSphere();super(s,new ph({color:i,toneMapped:false}));this.type="PlaneHelper";this.plane=e;this.size=t;const o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];const a=new Xr;a.setAttribute("position",new Nr(o,3));a.computeBoundingSphere();this.add(new us(a,new Mr({color:i,opacity:.2,transparent:true,depthWrite:false,toneMapped:false})))}updateMatrixWorld(e){let t=-this.plane.constant;if(Math.abs(t)<1e-8)t=1e-8;this.scale.set(.5*this.size,.5*this.size,t);this.children[0].material.side=t<0?he:L;this.lookAt(this.plane.normal);super.updateMatrixWorld(e)}}const dg=new Zn;let fg,pg;class mg extends Ki{constructor(e=new Zn(0,0,1),t=new Zn(0,0,0),n=1,i=16776960,r=n*.2,s=r*.2){super();this.type="ArrowHelper";if(fg===undefined){fg=new Xr;fg.setAttribute("position",new Nr([0,0,0,0,1,0],3));pg=new Bh(0,.5,1,5,1);pg.translate(0,-.5,0)}this.position.copy(t);this.line=new _h(fg,new ph({color:i,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new us(pg,new Mr({color:i,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(e);this.setLength(n,r,s)}setDirection(e){if(e.y>.99999){this.quaternion.set(0,0,0,1)}else if(e.y<-.99999){this.quaternion.set(1,0,0,0)}else{dg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(dg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1);this.line.updateMatrix();this.cone.scale.set(n,t,n);this.cone.position.y=e;this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e);this.cone.material.color.set(e)}copy(e){super.copy(e,false);this.line.copy(e.line);this.cone.copy(e.cone);return this}}class gg extends wh{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1];const i=new Xr;i.setAttribute("position",new Nr(t,3));i.setAttribute("color",new Nr(n,3));const r=new ph({vertexColors:true,toneMapped:false});super(i,r);this.type="AxesHelper"}}const yg=new Float32Array(1);const vg=new Int32Array(yg.buffer);const xg={toHalfFloat:function(e){yg[0]=e;const t=vg[0];let n=t>>16&32768;let i=t>>12&2047;const r=t>>23&255;if(r<103)return n;if(r>142){n|=31744;n|=(r==255?0:1)&&t&8388607;return n}if(r<113){i|=2048;n|=(i>>114-r)+(i>>113-r&1);return n}n|=r-112<<10|i>>1;n+=i&1;return n}};const _g=4;const bg=8;const Mg=Math.pow(2,bg);const wg=[.125,.215,.35,.446,.526,.582];const Eg=bg-_g+1+wg.length;const Tg=20;const Sg={[Yt]:0,[Zt]:1,[Kt]:2,[$t]:3,[en]:4,[tn]:5,[Jt]:6};const Ag=new Mr({side:he,depthWrite:false,depthTest:false});const Rg=new us(new fs,Ag);const Lg=new _p;const{_lodPlanes:Cg,_sizeLods:Pg,_sigmas:Ig}=Gg();const Dg=new br;let Ng=null;const Fg=(1+Math.sqrt(5))/2;const Og=1/Fg;const Bg=[new Zn(1,1,1),new Zn(-1,1,1),new Zn(1,1,-1),new Zn(-1,1,-1),new Zn(0,Fg,Og),new Zn(0,Fg,-Og),new Zn(Og,0,Fg),new Zn(-Og,0,Fg),new Zn(Fg,Og,0),new Zn(-Fg,Og,0)];function Ug(e){const t=Math.max(e.r,e.g,e.b);const n=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);e.multiplyScalar(Math.pow(2,-n));const i=(n+128)/255;return i}class Hg{constructor(e){this._renderer=e;this._pingPongRenderTarget=null;this._blurMaterial=Wg(Tg);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Ng=this._renderer.getRenderTarget();const r=this._allocateTargets();this._sceneToCubeUV(e,n,i,r);if(t>0){this._blur(r,0,0,t)}this._applyPMREM(r);this._cleanup(r);return r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=Xg();this._compileMaterial(this._cubemapShader)}}compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=jg();this._compileMaterial(this._equirectShader)}}dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(let e=0;e<Cg.length;e++){Cg[e].dispose()}}_cleanup(e){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(Ng);e.scissorTest=false;Vg(e,0,0,e.width,e.height)}_fromTexture(e){Ng=this._renderer.getRenderTarget();const t=this._allocateTargets(e);this._textureToCubeUV(e,t);this._applyPMREM(t);this._cleanup(t);return t}_allocateTargets(e){const t={magFilter:ne,minFilter:ne,generateMipmaps:false,type:We,format:z,encoding:zg(e)?e.encoding:Kt,depthBuffer:false};const n=kg(t);n.depthBuffer=e?false:true;this._pingPongRenderTarget=kg(t);return n}_compileMaterial(e){const t=new us(Cg[0],e);this._renderer.compile(t,Lg)}_sceneToCubeUV(t,e,n,i){const r=90;const s=1;const o=new bs(r,s,e,n);const a=[1,-1,1,1,1,1];const c=[1,1,1,-1,-1,-1];const l=this._renderer;const u=l.autoClear;const h=l.outputEncoding;const d=l.toneMapping;l.getClearColor(Dg);l.toneMapping=Ve;l.outputEncoding=Yt;l.autoClear=false;let f=false;const p=t.background;if(p){if(p.isColor){Ag.color.copy(p).convertSRGBToLinear();t.background=null;const m=Ug(Ag.color);Ag.opacity=m;f=true}}else{Ag.color.copy(Dg).convertSRGBToLinear();const m=Ug(Ag.color);Ag.opacity=m;f=true}for(let e=0;e<6;e++){const g=e%3;if(g==0){o.up.set(0,a[e],0);o.lookAt(c[e],0,0)}else if(g==1){o.up.set(0,0,a[e]);o.lookAt(0,c[e],0)}else{o.up.set(0,a[e],0);o.lookAt(0,0,c[e])}Vg(i,g*Mg,e>2?Mg:0,Mg,Mg);l.setRenderTarget(i);if(f){l.render(Rg,o)}l.render(t,o)}l.toneMapping=d;l.outputEncoding=h;l.autoClear=u}_textureToCubeUV(e,t){const n=this._renderer;if(e.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=Xg()}}else{if(this._equirectShader==null){this._equirectShader=jg()}}const i=e.isCubeTexture?this._cubemapShader:this._equirectShader;const r=new us(Cg[0],i);const s=i.uniforms;s["envMap"].value=e;if(!e.isCubeTexture){s["texelSize"].value.set(1/e.image.width,1/e.image.height)}s["inputEncoding"].value=Sg[e.encoding];s["outputEncoding"].value=Sg[t.texture.encoding];Vg(t,0,0,3*Mg,2*Mg);n.setRenderTarget(t);n.render(r,Lg)}_applyPMREM(t){const e=this._renderer;const n=e.autoClear;e.autoClear=false;for(let e=1;e<Eg;e++){const i=Math.sqrt(Ig[e]*Ig[e]-Ig[e-1]*Ig[e-1]);const r=Bg[(e-1)%Bg.length];this._blur(t,e-1,e,i,r)}e.autoClear=n}_blur(e,t,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",r);this._halfBlur(s,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,s,o){const a=this._renderer;const c=this._blurMaterial;if(s!=="latitudinal"&&s!=="longitudinal"){console.error("blur direction must be either latitudinal or longitudinal!")}const l=3;const u=new us(Cg[i],c);const h=c.uniforms;const d=Pg[n]-1;const f=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*Tg-1);const p=r/f;const m=isFinite(r)?1+Math.floor(l*p):Tg;if(m>Tg){console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Tg}`)}const g=[];let y=0;for(let e=0;e<Tg;++e){const x=e/p;const b=Math.exp(-x*x/2);g.push(b);if(e==0){y+=b}else if(e<m){y+=2*b}}for(let e=0;e<g.length;e++){g[e]=g[e]/y}h["envMap"].value=e.texture;h["samples"].value=m;h["weights"].value=g;h["latitudinal"].value=s==="latitudinal";if(o){h["poleAxis"].value=o}h["dTheta"].value=f;h["mipInt"].value=bg-n;h["inputEncoding"].value=Sg[e.texture.encoding];h["outputEncoding"].value=Sg[e.texture.encoding];const v=Pg[i];const x=3*Math.max(0,Mg-2*v);const _=(i===0?0:2*Mg)+2*v*(i>bg-_g?i-bg+_g:0);Vg(t,x,_,3*v,2*v);a.setRenderTarget(t);a.render(u,Lg)}}function zg(e){if(e===undefined||e.type!==We)return false;return e.encoding===Yt||e.encoding===Zt||e.encoding===Jt}function Gg(){const n=[];const i=[];const r=[];let s=bg;for(let t=0;t<Eg;t++){const o=Math.pow(2,s);i.push(o);let e=1/o;if(t>bg-_g){e=wg[t-bg+_g-1]}else if(t==0){e=0}r.push(e);const a=1/(o-1);const c=-a/2;const l=1+a/2;const u=[c,c,l,c,l,l,c,c,l,l,c,l];const h=6;const d=6;const f=3;const p=2;const m=1;const g=new Float32Array(f*d*h);const y=new Float32Array(p*d*h);const v=new Float32Array(m*d*h);for(let e=0;e<h;e++){const _=e%3*2/3-1;const b=e>2?0:-1;const M=[_,b,0,_+2/3,b,0,_+2/3,b+1,0,_,b,0,_+2/3,b+1,0,_,b+1,0];g.set(M,f*d*e);y.set(u,p*d*e);const w=[e,e,e,e,e,e];v.set(w,m*d*e)}const x=new Xr;x.setAttribute("position",new Tr(g,f));x.setAttribute("uv",new Tr(y,p));x.setAttribute("faceIndex",new Tr(v,m));n.push(x);if(s>_g){s--}}return{_lodPlanes:n,_sizeLods:i,_sigmas:r}}function kg(e){const t=new Xn(3*Mg,3*Mg,e);t.texture.mapping=C;t.texture.name="PMREM.cubeUv";t.scissorTest=true;return t}function Vg(e,t,n,i,r){e.viewport.set(t,n,i,r);e.scissor.set(t,n,i,r)}function Wg(e){const t=new Float32Array(e);const n=new Zn(0,1,0);const i=new Xd({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:false},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Sg[Yt]},outputEncoding:{value:Sg[Yt]}},vertexShader:qg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Yg()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fe,depthTest:false,depthWrite:false});return i}function jg(){const e=new Un(1,1);const t=new Xd({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Sg[Yt]},outputEncoding:{value:Sg[Yt]}},vertexShader:qg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Yg()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fe,depthTest:false,depthWrite:false});return t}function Xg(){const e=new Xd({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Sg[Yt]},outputEncoding:{value:Sg[Yt]}},vertexShader:qg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Yg()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:fe,depthTest:false,depthWrite:false});return e}function qg(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Yg(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}const Zg=0;const Jg=1;const Kg=0;const Qg=1;const $g=2;function ey(e){console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead.");return e}function ty(e=[]){console.warn("THREE.MultiMaterial has been removed. Use an Array instead.");e.isMultiMaterial=true;e.materials=e;e.clone=function(){return e.slice()};return e}function ny(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new Ch(e,t)}function iy(e){console.warn("THREE.Particle has been renamed to THREE.Sprite.");return new Yu(e)}function ry(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new Ch(e,t)}function sy(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new Th(e)}function oy(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new Th(e)}function ay(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new Th(e)}function cy(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new Zn(e,t,n)}function ly(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.");return new Tr(e,t).setUsage(En)}function uy(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");return new Sr(e,t)}function hy(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.");return new Ar(e,t)}function dy(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.");return new Rr(e,t)}function fy(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.");return new Lr(e,t)}function py(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.");return new Cr(e,t)}function my(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.");return new Pr(e,t)}function gy(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.");return new Ir(e,t)}function yy(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.");return new Nr(e,t)}function vy(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");return new Fr(e,t)}Pf.create=function(e,t){console.log("THREE.Curve.create() has been deprecated");e.prototype=Object.create(Pf.prototype);e.prototype.constructor=e;e.prototype.getPoint=t;return e};sp.prototype.fromPoints=function(e){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints().");return this.setFromPoints(e)};function xy(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");return new gg(e)}function _y(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");return new lg(e,t)}function by(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.");return new wh(new jh(e.geometry),new ph({color:t!==undefined?t:16777215}))}Qm.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};jm.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function My(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.");return new wh(new Vd(e.geometry),new ph({color:t!==undefined?t:16777215}))}Mf.prototype.extractUrlBase=function(e){console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.");return Rp.extractUrlBase(e)};Mf.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function wy(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader.");return new Ef(e)}function Ey(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.");return new Lf(e)}Fm.prototype.center=function(e){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(e)};Fm.prototype.empty=function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()};Fm.prototype.isIntersectionBox=function(e){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)};Fm.prototype.size=function(e){console.warn("THREE.Box2: .size() has been renamed to .getSize().");return this.getSize(e)};Qn.prototype.center=function(e){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");return this.getCenter(e)};Qn.prototype.empty=function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()};Qn.prototype.isIntersectionBox=function(e){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)};Qn.prototype.isIntersectionSphere=function(e){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)};Qn.prototype.size=function(e){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(e)};yi.prototype.empty=function(){console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty().");return this.isEmpty()};Cs.prototype.setFromMatrix=function(e){console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().");return this.setFromProjectionMatrix(e)};Um.prototype.center=function(e){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(e)};Bn.random16=function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");return Math.random()};Bn.nearestPowerOfTwo=function(e){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");return Bn.floorPowerOfTwo(e)};Bn.nextPowerOfTwo=function(e){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");return Bn.ceilPowerOfTwo(e)};Hn.prototype.flattenToArrayOffset=function(e,t){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(e,t)};Hn.prototype.multiplyVector3=function(e){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)};Hn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Hn.prototype.applyToBufferAttribute=function(e){console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)};Hn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Hn.prototype.getInverse=function(e){console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.");return this.copy(e).invert()};Si.prototype.extractPosition=function(e){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)};Si.prototype.flattenToArrayOffset=function(e,t){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(e,t)};Si.prototype.getPosition=function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");return(new Zn).setFromMatrixColumn(this,3)};Si.prototype.setRotationFromQuaternion=function(e){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(e)};Si.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Si.prototype.multiplyVector3=function(e){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)};Si.prototype.multiplyVector4=function(e){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)};Si.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Si.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)};Si.prototype.crossVector=function(e){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)};Si.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Si.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Si.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Si.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Si.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Si.prototype.applyToBufferAttribute=function(e){console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)};Si.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Si.prototype.makeFrustum=function(e,t,n,i,r,s){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(e,t,i,n,r,s)};Si.prototype.getInverse=function(e){console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.");return this.copy(e).invert()};tr.prototype.isIntersectionLine=function(e){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(e)};Yn.prototype.multiplyVector3=function(e){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)};Yn.prototype.inverse=function(){console.warn("THREE.Quaternion: .inverse() has been renamed to invert().");return this.invert()};Ti.prototype.isIntersectionBox=function(e){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)};Ti.prototype.isIntersectionPlane=function(e){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(e)};Ti.prototype.isIntersectionSphere=function(e){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)};dr.prototype.area=function(){console.warn("THREE.Triangle: .area() has been renamed to .getArea().");return this.getArea()};dr.prototype.barycoordFromPoint=function(e,t){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return this.getBarycoord(e,t)};dr.prototype.midpoint=function(e){console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint().");return this.getMidpoint(e)};dr.prototypenormal=function(e){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return this.getNormal(e)};dr.prototype.plane=function(e){console.warn("THREE.Triangle: .plane() has been renamed to .getPlane().");return this.getPlane(e)};dr.barycoordFromPoint=function(e,t,n,i,r){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return dr.getBarycoord(e,t,n,i,r)};dr.normal=function(e,t,n,i){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return dr.getNormal(e,t,n,i)};op.prototype.extractAllPoints=function(e){console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.");return this.extractPoints(e)};op.prototype.extrude=function(e){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new Ad(this,e)};op.prototype.makeGeometry=function(e){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new Fd(this,e)};Un.prototype.fromAttribute=function(e,t,n){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,n)};Un.prototype.distanceToManhattan=function(e){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(e)};Un.prototype.lengthManhattan=function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()};Zn.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};Zn.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};Zn.prototype.getPositionFromMatrix=function(e){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(e)};Zn.prototype.getScaleFromMatrix=function(e){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(e)};Zn.prototype.getColumnFromMatrix=function(e,t){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(t,e)};Zn.prototype.applyProjection=function(e){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");return this.applyMatrix4(e)};Zn.prototype.fromAttribute=function(e,t,n){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,n)};Zn.prototype.distanceToManhattan=function(e){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(e)};Zn.prototype.lengthManhattan=function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()};jn.prototype.fromAttribute=function(e,t,n){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,n)};jn.prototype.lengthManhattan=function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()};Ki.prototype.getChildByName=function(e){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e)};Ki.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Ki.prototype.translate=function(e,t){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(t,e)};Ki.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Ki.prototype.applyMatrix=function(e){console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(e)};Object.defineProperties(Ki.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});us.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(us.prototype,{drawMode:{get:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.");return jt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});rh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Pf.prototype,"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");return this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=e}});bs.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. "+"Use .setFocalLength and .filmGauge for a photographic setup.");if(t!==undefined)this.filmGauge=t;this.setFocalLength(e)};Object.defineProperties(ap.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=e}}});Object.defineProperties(Tr.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");return this.array.length}},dynamic:{get:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");return this.usage===En},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");this.setUsage(En)}}});Tr.prototype.setDynamic=function(e){console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(e===true?En:wn);return this};Tr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Tr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xr.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(e)};Xr.prototype.addAttribute=function(e,t){console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().");if(!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");return this.setAttribute(e,new Tr(arguments[1],arguments[2]))}if(e==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(t);return this}return this.setAttribute(e,t)};Xr.prototype.addDrawCall=function(e,t,n){if(n!==undefined){console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.")}console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(e,t)};Xr.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()};Xr.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Xr.prototype.removeAttribute=function(e){console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().");return this.deleteAttribute(e)};Xr.prototype.applyMatrix=function(e){console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(e)};Object.defineProperties(Xr.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});Object.defineProperties(Lp.prototype,{maxInstancedCount:{get:function(){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");return this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");this.instanceCount=e}}});Object.defineProperties(Lm.prototype,{linePrecision:{get:function(){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");return this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");this.params.Line.threshold=e}}});Object.defineProperties(Pu.prototype,{dynamic:{get:function(){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");return this.usage===En},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");this.setUsage(e)}}});Pu.prototype.setDynamic=function(e){console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(e===true?En:wn);return this};Pu.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ad.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Ad.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Ad.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Cu.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Sm.prototype.onUpdate=function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this};Object.defineProperties(pr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new br}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=e===a}},stencilMask:{get:function(){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");return this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");this.stencilFuncMask=e}}});Object.defineProperties(Yd.prototype,{transparency:{get:function(){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");return this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");this.transmission=e}}});Object.defineProperties(xs.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=e}}});Su.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.");this.setRenderTarget(e);this.clear(t,n,i)};Su.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop().");this.setAnimationLoop(e)};Su.prototype.getCurrentRenderTarget=function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");return this.getRenderTarget()};Su.prototype.getMaxAnisotropy=function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()};Su.prototype.getPrecision=function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision};Su.prototype.resetGLState=function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");return this.state.reset()};Su.prototype.supportsFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")};Su.prototype.supportsHalfFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")};Su.prototype.supportsStandardDerivatives=function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")};Su.prototype.supportsCompressedTextureS3TC=function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")};Su.prototype.supportsCompressedTexturePVRTC=function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")};Su.prototype.supportsBlendMinMax=function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")};Su.prototype.supportsVertexTextures=function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");return this.capabilities.vertexTextures};Su.prototype.supportsInstancedArrays=function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")};Su.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(e)};Su.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Su.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Su.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Su.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Su.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Su.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Su.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Su.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Su.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Su.prototype.getActiveMipMapLevel=function(){console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().");return this.getActiveMipmapLevel()};Object.defineProperties(Su.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.");return this.getContext()}},vr:{get:function(){console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr");return this.xr}},gammaInput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");return false},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");return false},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");this.outputEncoding=e===true?Zt:Yt}},toneMappingWhitePoint:{get:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");return 1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(gu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function Ty(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).");return new Ss(e,n)}Object.defineProperties(Xn.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=e}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=e}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=e}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=e}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=e}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=e}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=e}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=e}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=e}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=e}}});im.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;const n=new Wp;n.load(e,function(e){t.setBuffer(e)});return this};lm.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};Es.prototype.updateCubeMap=function(e,t){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(e,t)};Es.prototype.clear=function(e,t,n,i){console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear().");return this.renderTarget.clear(e,t,n,i)};Gn.crossOrigin=undefined;Gn.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Cf;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,undefined,i);if(t)s.mapping=t;return s};Gn.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Rf;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,undefined,i);if(t)s.mapping=t;return s};Gn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Gn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function Sy(){console.error("THREE.CanvasRenderer has been removed")}function Ay(){console.error("THREE.JSONLoader has been removed.")}const Ry={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Ly(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}}))}if(typeof window!=="undefined"){if(window.__THREE__){console.warn("WARNING: Multiple instances of Three.js being imported.")}else{window.__THREE__=t}}e.ACESFilmicToneMapping=g;e.AddEquation=xe;e.AddOperation=d;e.AdditiveAnimationBlendMode=Wt;e.AdditiveBlending=me;e.AlphaFormat=B;e.AlwaysDepth=Oe;e.AlwaysStencilFunc=Mn;e.AmbientLight=wp;e.AmbientLightProbe=Xp;e.AnimationClip=gf;e.AnimationLoader=Tf;e.AnimationMixer=Tm;e.AnimationObjectGroup=wm;e.AnimationUtils=nf;e.ArcCurve=Df;e.ArrayCamera=_u;e.ArrowHelper=mg;e.Audio=im;e.AudioAnalyser=lm;e.AudioContext=Vp;e.AudioListener=nm;e.AudioLoader=Wp;e.AxesHelper=gg;e.AxisHelper=xy;e.BackSide=he;e.BasicDepthPacking=nn;e.BasicShadowMap=s;e.BinaryTextureLoader=Ey;e.Bone=sh;e.BooleanKeyframeTrack=lf;e.BoundingBoxHelper=_y;e.Box2=Fm;e.Box3=Qn;e.Box3Helper=ug;e.BoxBufferGeometry=fs;e.BoxGeometry=fs;e.BoxHelper=lg;e.BufferAttribute=Tr;e.BufferGeometry=Xr;e.BufferGeometryLoader=Pp;e.ByteType=A;e.Cache=xf;e.Camera=_s;e.CameraHelper=og;e.CanvasRenderer=Sy;e.CanvasTexture=Nh;e.CatmullRomCurve3=Hf;e.CineonToneMapping=m;e.CircleBufferGeometry=Oh;e.CircleGeometry=Oh;e.ClampToEdgeWrapping=ee;e.Clock=Jp;e.Color=br;e.ColorKeyframeTrack=uf;e.CompressedTexture=Dh;e.CompressedTextureLoader=Sf;e.ConeBufferGeometry=Uh;e.ConeGeometry=Uh;e.CubeCamera=Es;e.CubeReflectionMapping=x;e.CubeRefractionMapping=_;e.CubeTexture=Ts;e.CubeTextureLoader=Rf;e.CubeUVReflectionMapping=C;e.CubeUVRefractionMapping=P;e.CubicBezierCurve=Jf;e.CubicBezierCurve3=Kf;e.CubicInterpolant=sf;e.CullFaceBack=le;e.CullFaceFront=ue;e.CullFaceFrontBack=r;e.CullFaceNone=ce;e.Curve=Pf;e.CurvePath=rp;e.CustomBlending=ve;e.CustomToneMapping=y;e.CylinderBufferGeometry=Bh;e.CylinderGeometry=Bh;e.Cylindrical=Dm;e.DataTexture=As;e.DataTexture2DArray=xc;e.DataTexture3D=_c;e.DataTextureLoader=Lf;e.DataUtils=xg;e.DecrementStencilOp=hn;e.DecrementWrapStencilOp=fn;e.DefaultLoadingManager=bf;e.DepthFormat=Qe;e.DepthStencilFormat=$e;e.DepthTexture=Fh;e.DirectionalLight=Mp;e.DirectionalLightHelper=ig;e.DiscreteInterpolant=af;e.DodecahedronBufferGeometry=zh;e.DodecahedronGeometry=zh;e.DoubleSide=de;e.DstAlphaFactor=Ce;e.DstColorFactor=Ie;e.DynamicBufferAttribute=ly;e.DynamicCopyUsage=Cn;e.DynamicDrawUsage=En;e.DynamicReadUsage=An;e.EdgesGeometry=jh;e.EdgesHelper=by;e.EllipseCurve=If;e.EqualDepth=He;e.EqualStencilFunc=yn;e.EquirectangularReflectionMapping=b;e.EquirectangularRefractionMapping=M;e.Euler=Oi;e.EventDispatcher=Nn;e.ExtrudeBufferGeometry=Ad;e.ExtrudeGeometry=Ad;e.FaceColors=Qg;e.FileLoader=Ef;e.FlatShading=a;e.Float16BufferAttribute=Dr;e.Float32Attribute=yy;e.Float32BufferAttribute=Nr;e.Float64Attribute=vy;e.Float64BufferAttribute=Fr;e.FloatType=qe;e.Fog=Lu;e.FogExp2=Ru;e.Font=Up;e.FontLoader=Gp;e.FrontSide=L;e.Frustum=Cs;e.GLBufferAttribute=Rm;e.GLSL1=In;e.GLSL3=Dn;e.GammaEncoding=Jt;e.GreaterDepth=Ge;e.GreaterEqualDepth=ze;e.GreaterEqualStencilFunc=bn;e.GreaterStencilFunc=xn;e.GridHelper=Qm;e.Group=bu;e.HalfFloatType=Ye;e.HemisphereLight=cp;e.HemisphereLightHelper=Km;e.HemisphereLightProbe=jp;e.IcosahedronBufferGeometry=Cd;e.IcosahedronGeometry=Cd;e.ImageBitmapLoader=Op;e.ImageLoader=Af;e.ImageUtils=Gn;e.ImmediateRenderObject=Hm;e.IncrementStencilOp=un;e.IncrementWrapStencilOp=dn;e.InstancedBufferAttribute=Cp;e.InstancedBufferGeometry=Lp;e.InstancedInterleavedBuffer=Am;e.InstancedMesh=fh;e.Int16Attribute=fy;e.Int16BufferAttribute=Lr;e.Int32Attribute=my;e.Int32BufferAttribute=Pr;e.Int8Attribute=uy;e.Int8BufferAttribute=Sr;e.IntType=D;e.InterleavedBuffer=Pu;e.InterleavedBufferAttribute=Du;e.Interpolant=rf;e.InterpolateDiscrete=Bt;e.InterpolateLinear=Ut;e.InterpolateSmooth=Ht;e.InvertStencilOp=pn;e.JSONLoader=Ay;e.KeepStencilOp=cn;e.KeyframeTrack=cf;e.LOD=Qu;e.LatheBufferGeometry=Pd;e.LatheGeometry=Pd;e.Layers=Bi;e.LensFlare=Ly;e.LessDepth=Be;e.LessEqualDepth=Ue;e.LessEqualStencilFunc=vn;e.LessStencilFunc=gn;e.Light=ap;e.LightProbe=Sp;e.Line=_h;e.Line3=Um;e.LineBasicMaterial=ph;e.LineCurve=Qf;e.LineCurve3=$f;e.LineDashedMaterial=ef;e.LineLoop=Eh;e.LinePieces=Jg;e.LineSegments=wh;e.LineStrip=Zg;e.LinearEncoding=Yt;e.LinearFilter=se;e.LinearInterpolant=of;e.LinearMipMapLinearFilter=S;e.LinearMipMapNearestFilter=T;e.LinearMipmapLinearFilter=ae;e.LinearMipmapNearestFilter=oe;e.LinearToneMapping=f;e.Loader=Mf;e.LoaderUtils=Rp;e.LoadingManager=_f;e.LogLuvEncoding=Qt;e.LoopOnce=Nt;e.LoopPingPong=Ot;e.LoopRepeat=Ft;e.LuminanceAlphaFormat=H;e.LuminanceFormat=U;e.MOUSE=n;e.Material=pr;e.MaterialLoader=Ap;e.Math=Bn;e.MathUtils=Bn;e.Matrix3=Hn;e.Matrix4=Si;e.MaxEquation=we;e.Mesh=us;e.MeshBasicMaterial=Mr;e.MeshDepthMaterial=du;e.MeshDistanceMaterial=fu;e.MeshFaceMaterial=ey;e.MeshLambertMaterial=Qd;e.MeshMatcapMaterial=$d;e.MeshNormalMaterial=Kd;e.MeshPhongMaterial=Zd;e.MeshPhysicalMaterial=Yd;e.MeshStandardMaterial=qd;e.MeshToonMaterial=Jd;e.MinEquation=Me;e.MirroredRepeatWrapping=te;e.MixOperation=h;e.MultiMaterial=ty;e.MultiplyBlending=ye;e.MultiplyOperation=u;e.NearestFilter=ne;e.NearestMipMapLinearFilter=E;e.NearestMipMapNearestFilter=w;e.NearestMipmapLinearFilter=re;e.NearestMipmapNearestFilter=ie;e.NeverDepth=Fe;e.NeverStencilFunc=mn;e.NoBlending=fe;e.NoColors=Kg;e.NoToneMapping=Ve;e.NormalAnimationBlendMode=Vt;e.NormalBlending=pe;e.NotEqualDepth=ke;e.NotEqualStencilFunc=_n;e.NumberKeyframeTrack=hf;e.Object3D=Ki;e.ObjectLoader=Ip;e.ObjectSpaceNormalMap=on;e.OctahedronBufferGeometry=Id;e.OctahedronGeometry=Id;e.OneFactor=Te;e.OneMinusDstAlphaFactor=Pe;e.OneMinusDstColorFactor=De;e.OneMinusSrcAlphaFactor=Le;e.OneMinusSrcColorFactor=Ae;e.OrthographicCamera=_p;e.PCFShadowMap=c;e.PCFSoftShadowMap=o;e.PMREMGenerator=Hg;e.ParametricBufferGeometry=Dd;e.ParametricGeometry=Dd;e.Particle=iy;e.ParticleBasicMaterial=oy;e.ParticleSystem=ry;e.ParticleSystemMaterial=ay;e.Path=sp;e.PerspectiveCamera=bs;e.Plane=tr;e.PlaneBufferGeometry=Ds;e.PlaneGeometry=Ds;e.PlaneHelper=hg;e.PointCloud=ny;e.PointCloudMaterial=sy;e.PointLight=xp;e.PointLightHelper=qm;e.Points=Ch;e.PointsMaterial=Th;e.PolarGridHelper=$m;e.PolyhedronBufferGeometry=Hh;e.PolyhedronGeometry=Hh;e.PositionalAudio=cm;e.PropertyBinding=Mm;e.PropertyMixer=um;e.QuadraticBezierCurve=ep;e.QuadraticBezierCurve3=tp;e.Quaternion=Yn;e.QuaternionKeyframeTrack=ff;e.QuaternionLinearInterpolant=df;e.REVISION=t;e.RGBADepthPacking=rn;e.RGBAFormat=Ke;e.RGBAIntegerFormat=X;e.RGBA_ASTC_10x10_Format=gt;e.RGBA_ASTC_10x5_Format=ft;e.RGBA_ASTC_10x6_Format=pt;e.RGBA_ASTC_10x8_Format=mt;e.RGBA_ASTC_12x10_Format=yt;e.RGBA_ASTC_12x12_Format=vt;e.RGBA_ASTC_4x4_Format=st;e.RGBA_ASTC_5x4_Format=ot;e.RGBA_ASTC_5x5_Format=at;e.RGBA_ASTC_6x5_Format=ct;e.RGBA_ASTC_6x6_Format=lt;e.RGBA_ASTC_8x5_Format=ut;e.RGBA_ASTC_8x6_Format=ht;e.RGBA_ASTC_8x8_Format=dt;e.RGBA_BPTC_Format=xt;e.RGBA_ETC2_EAC_Format=rt;e.RGBA_PVRTC_2BPPV1_Format=tt;e.RGBA_PVRTC_4BPPV1_Format=et;e.RGBA_S3TC_DXT1_Format=Y;e.RGBA_S3TC_DXT3_Format=Z;e.RGBA_S3TC_DXT5_Format=J;e.RGBDEncoding=tn;e.RGBEEncoding=Kt;e.RGBEFormat=z;e.RGBFormat=Je;e.RGBIntegerFormat=j;e.RGBM16Encoding=en;e.RGBM7Encoding=$t;e.RGB_ETC1_Format=nt;e.RGB_ETC2_Format=it;e.RGB_PVRTC_2BPPV1_Format=Q;e.RGB_PVRTC_4BPPV1_Format=K;e.RGB_S3TC_DXT1_Format=q;e.RGFormat=V;e.RGIntegerFormat=W;e.RawShaderMaterial=Xd;e.Ray=Ti;e.Raycaster=Lm;e.RectAreaLight=Ep;e.RedFormat=G;e.RedIntegerFormat=k;e.ReinhardToneMapping=p;e.RepeatWrapping=$;e.ReplaceStencilOp=ln;e.ReverseSubtractEquation=be;e.RingBufferGeometry=Nd;e.RingGeometry=Nd;e.SRGB8_ALPHA8_ASTC_10x10_Format=Pt;e.SRGB8_ALPHA8_ASTC_10x5_Format=Rt;e.SRGB8_ALPHA8_ASTC_10x6_Format=Lt;e.SRGB8_ALPHA8_ASTC_10x8_Format=Ct;e.SRGB8_ALPHA8_ASTC_12x10_Format=It;e.SRGB8_ALPHA8_ASTC_12x12_Format=Dt;e.SRGB8_ALPHA8_ASTC_4x4_Format=_t;e.SRGB8_ALPHA8_ASTC_5x4_Format=bt;e.SRGB8_ALPHA8_ASTC_5x5_Format=Mt;e.SRGB8_ALPHA8_ASTC_6x5_Format=wt;e.SRGB8_ALPHA8_ASTC_6x6_Format=Et;e.SRGB8_ALPHA8_ASTC_8x5_Format=Tt;e.SRGB8_ALPHA8_ASTC_8x6_Format=St;e.SRGB8_ALPHA8_ASTC_8x8_Format=At;e.Scene=Cu;e.SceneUtils=Ry;e.ShaderChunk=nc;e.ShaderLib=rc;e.ShaderMaterial=xs;e.ShadowMaterial=jd;e.Shape=op;e.ShapeBufferGeometry=Fd;e.ShapeGeometry=Fd;e.ShapePath=Bp;e.ShapeUtils=Ed;e.ShortType=I;e.Skeleton=ch;e.SkeletonHelper=jm;e.SkinnedMesh=rh;e.SmoothShading=l;e.Sphere=yi;e.SphereBufferGeometry=Bd;e.SphereGeometry=Bd;e.Spherical=Im;e.SphericalHarmonics3=Tp;e.SplineCurve=np;e.SpotLight=pp;e.SpotLightHelper=Gm;e.Sprite=Yu;e.SpriteMaterial=Nu;e.SrcAlphaFactor=Re;e.SrcAlphaSaturateFactor=Ne;e.SrcColorFactor=Se;e.StaticCopyUsage=Ln;e.StaticDrawUsage=wn;e.StaticReadUsage=Sn;e.StereoCamera=Zp;e.StreamCopyUsage=Pn;e.StreamDrawUsage=Tn;e.StreamReadUsage=Rn;e.StringKeyframeTrack=pf;e.SubtractEquation=_e;e.SubtractiveBlending=ge;e.TOUCH=i;e.TangentSpaceNormalMap=sn;e.TetrahedronBufferGeometry=Ud;e.TetrahedronGeometry=Ud;e.TextBufferGeometry=Hd;e.TextGeometry=Hd;e.Texture=Vn;e.TextureLoader=Cf;e.TorusBufferGeometry=zd;e.TorusGeometry=zd;e.TorusKnotBufferGeometry=Gd;e.TorusKnotGeometry=Gd;e.Triangle=dr;e.TriangleFanDrawMode=qt;e.TriangleStripDrawMode=Xt;e.TrianglesDrawMode=jt;e.TubeBufferGeometry=kd;e.TubeGeometry=kd;e.UVMapping=v;e.Uint16Attribute=py;e.Uint16BufferAttribute=Cr;e.Uint32Attribute=gy;e.Uint32BufferAttribute=Ir;e.Uint8Attribute=hy;e.Uint8BufferAttribute=Ar;e.Uint8ClampedAttribute=dy;e.Uint8ClampedBufferAttribute=Rr;e.Uniform=Sm;e.UniformsLib=ic;e.UniformsUtils=gs;e.UnsignedByteType=We;e.UnsignedInt248Type=Ze;e.UnsignedIntType=Xe;e.UnsignedShort4444Type=N;e.UnsignedShort5551Type=F;e.UnsignedShort565Type=O;e.UnsignedShortType=je;e.VSMShadowMap=R;e.Vector2=Un;e.Vector3=Zn;e.Vector4=jn;e.VectorKeyframeTrack=mf;e.Vertex=cy;e.VertexColors=$g;e.VideoTexture=Ih;e.WebGL1Renderer=Au;e.WebGLCubeRenderTarget=Ss;e.WebGLMultisampleRenderTarget=qn;e.WebGLRenderTarget=Xn;e.WebGLRenderTargetCube=Ty;e.WebGLRenderer=Su;e.WebGLUtils=xu;e.WireframeGeometry=Vd;e.WireframeHelper=My;e.WrapAroundEnding=kt;e.XHRLoader=wy;e.ZeroCurvatureEnding=zt;e.ZeroFactor=Ee;e.ZeroSlopeEnding=Gt;e.ZeroStencilOp=an;e.sRGBEncoding=Zt;Object.defineProperty(e,"__esModule",{value:true})});