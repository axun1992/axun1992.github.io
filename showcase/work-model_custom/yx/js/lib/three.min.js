!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).THREE={})}(this,function(t){"use strict";const e="127",W=100,n=300,S=301,T=302,a=303,o=304,E=306,A=307,H=1e3,U=1001,G=1002,k=1003,V=1004,j=1005,q=1006,X=1007,Y=1008,Tt=1009,Z=1012,J=1014,Et=1015,At=1016,Q=1020,K=1022,Lt=1023,$=1026,tt=1027,r=33776,s=33777,l=33778,c=33779,h=35840,u=35841,d=35842,p=35843,f=37492,m=37496,i=2300,g=2301,v=2302,y=2400,x=2401,_=2402,b=2500,w=2501,Rt=3e3,M=3001,L=3007,R=3002,C=3004,P=3005,D=3006,I=7680,N=35044,B=35048,O="300 es";function z(){}Object.assign(z.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(i){if(void 0===this._listeners)return;const t=this._listeners[i.type];if(void 0!==t){i.target=this;const n=t.slice(0);for(let t=0,e=n.length;t<e;t++)n[t].call(this,i);i.target=null}}});const F=[];for(let t=0;t<256;t++)F[t]=(t<16?"0":"")+t.toString(16);let et=1234567;const Ct={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(F[255&t]+F[t>>8&255]+F[t>>16&255]+F[t>>24&255]+"-"+F[255&e]+F[e>>8&255]+"-"+F[e>>16&15|64]+F[e>>24&255]+"-"+F[63&n|128]+F[n>>8&255]+"-"+F[n>>16&255]+F[n>>24&255]+F[255&i]+F[i>>8&255]+F[i>>16&255]+F[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return Ct.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(Ct.euclideanModulo(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(et=t%2147483647),et=16807*et%2147483647,(et-1)/2147483646},degToRad:function(t){return t*Ct.DEG2RAD},radToDeg:function(t){return t*Ct.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),u=s((e-i)/2),d=a((e-i)/2),p=s((i-e)/2),f=a((i-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*d,o*c);break;case"YZY":t.set(l*d,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*d,o*h,o*c);break;case"XZX":t.set(o*h,l*f,l*p,o*c);break;case"YXY":t.set(l*p,o*h,l*f,o*c);break;case"ZYZ":t.set(l*f,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Pt{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Pt.prototype.isVector2=!0;class nt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],y=i[4],x=i[7],_=i[2],b=i[5],w=i[8];return r[0]=s*f+a*v+o*_,r[3]=s*m+a*y+o*b,r[6]=s*g+a*x+o*w,r[1]=l*f+c*v+h*_,r[4]=l*m+c*y+h*b,r[7]=l*g+c*x+h*w,r[2]=u*f+d*v+p*_,r[5]=u*m+d*y+p*b,r[8]=u*g+d*x+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,u=a*o-c*r,d=l*r-s*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*l-c*n)*f,t[2]=(a*n-i*s)*f,t[3]=u*f,t[4]=(c*e-i*o)*f,t[5]=(i*r-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],s=i[3],a=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*s+n*l,i[6]=e*a+n*c,i[1]=-n*r+e*o,i[4]=-n*s+e*l,i[7]=-n*a+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(e,n=0){for(let t=0;t<9;t++)this.elements[t]=e[t+n];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let it;nt.prototype.isMatrix3=!0;const rt={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{void 0===it&&(it=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),it.width=e.width,it.height=e.height;const t=it.getContext("2d");e instanceof ImageData?t.putImageData(e,0,0):t.drawImage(e,0,0,e.width,e.height),n=it}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}};let st=0;class at extends z{constructor(t=at.DEFAULT_IMAGE,e=at.DEFAULT_MAPPING,n=1001,i=1001,r=1006,s=1008,a=1023,o=1009,l=1,c=3e3){super(),Object.defineProperty(this,"id",{value:st++}),this.uuid=Ct.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Pt(0,0),this.repeat=new Pt(1,1),this.center=new Pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=Ct.generateUUID()),!e&&void 0===t.images[i.uuid]){let n;if(Array.isArray(i)){n=[];for(let t=0,e=i.length;t<e;t++)i[t].isDataTexture?n.push(ot(i[t].image)):n.push(ot(i[t]))}else n=ot(i);t.images[i.uuid]={uuid:i.uuid,url:n}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==n)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case H:t.x=t.x-Math.floor(t.x);break;case U:t.x=t.x<0?0:1;break;case G:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case H:t.y=t.y-Math.floor(t.y);break;case U:t.y=t.y<0?0:1;break;case G:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function ot(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?rt.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}at.DEFAULT_IMAGE=void 0,at.DEFAULT_MAPPING=n,at.prototype.isTexture=!0;class Dt{constructor(t=0,e=0,n=0,i=1){this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(i){let r,s,a,o;const l=.01,c=.1,h=i.elements,u=h[0],d=h[4],p=h[8],f=h[1],m=h[5],g=h[9],v=h[2],y=h[6],x=h[10];if(Math.abs(d-f)<l&&Math.abs(p-v)<l&&Math.abs(g-y)<l){if(Math.abs(d+f)<c&&Math.abs(p+v)<c&&Math.abs(g+y)<c&&Math.abs(u+m+x-3)<c)return this.set(1,0,0,0),this;r=Math.PI;const i=(u+1)/2,h=(m+1)/2,_=(x+1)/2,t=(d+f)/4,e=(p+v)/4,n=(g+y)/4;return i>h&&i>_?i<l?(s=0,a=.707106781,o=.707106781):(s=Math.sqrt(i),a=t/s,o=e/s):h>_?h<l?(s=.707106781,a=0,o=.707106781):(a=Math.sqrt(h),s=t/a,o=n/a):_<l?(s=.707106781,a=.707106781,o=0):(o=Math.sqrt(_),s=e/o,a=n/o),this.set(s,a,o,r),this}let _=Math.sqrt((y-g)*(y-g)+(p-v)*(p-v)+(f-d)*(f-d));return Math.abs(_)<.001&&(_=1),this.x=(y-g)/_,this.y=(p-v)/_,this.z=(f-d)/_,this.w=Math.acos((u+m+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Dt.prototype.isVector4=!0;class lt extends z{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new Dt(0,0,t,e),this.scissorTest=!1,this.viewport=new Dt(0,0,t,e),n=n||{},this.texture=new at(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:q,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}lt.prototype.isWebGLRenderTarget=!0;class ct extends lt{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}ct.prototype.isWebGLMultisampleRenderTarget=!0;class ht{constructor(t=0,e=0,n=0,i=1){this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,i)}static slerpFlat(e,n,i,r,s,a,o){let l=i[r+0],c=i[r+1],h=i[r+2],u=i[r+3];const d=s[a+0],p=s[a+1],f=s[a+2],m=s[a+3];if(0===o)return e[n+0]=l,e[n+1]=c,e[n+2]=h,void(e[n+3]=u);if(1===o)return e[n+0]=d,e[n+1]=p,e[n+2]=f,void(e[n+3]=m);if(u!==m||l!==d||c!==p||h!==f){let t=1-o;const n=l*d+c*p+h*f+u*m,i=n>=0?1:-1,r=1-n*n;if(r>Number.EPSILON){const s=Math.sqrt(r),a=Math.atan2(s,n*i);t=Math.sin(t*a)/s,o=Math.sin(o*a)/s}const s=o*i;if(l=l*t+d*s,c=c*t+p*s,h=h*t+f*s,u=u*t+m*s,t===1-o){const e=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=e,c*=e,h*=e,u*=e}}e[n]=l,e[n+1]=c,e[n+2]=h,e[n+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,s){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-a*d,t[e+2]=l*p+c*d+a*u-o*h,t[e+3]=c*p-a*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+a+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(s-i)*t}else if(n>a&&n>h){const t=2*Math.sqrt(1+n-a-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(r+l)/t}else if(a>h){const t=2*Math.sqrt(1+a-n-h);this._w=(r-l)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-a);this._w=(s-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ct.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ht.prototype.isQuaternion=!0;class It{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(dt.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(dt.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*i-a*n,c=o*n+a*e-r*i,h=o*i+r*n-s*e,u=-r*e-s*n-a*i;return this.x=l*o+u*-r+c*-a-h*-s,this.y=c*o+u*-s+h*-r-l*-a,this.z=h*o+u*-a+l*-s-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return ut.copy(this).projectOnVector(t),this.sub(ut)}reflect(t){return this.sub(ut.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ct.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}It.prototype.isVector3=!0;const ut=new It,dt=new ht;class pt{constructor(t=new It(1/0,1/0,1/0),e=new It(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(r){let s=1/0,a=1/0,o=1/0,l=-1/0,c=-1/0,h=-1/0;for(let i=0,t=r.length;i<t;i+=3){const t=r[i],e=r[i+1],n=r[i+2];t<s&&(s=t),e<a&&(a=e),n<o&&(o=n),t>l&&(l=t),e>c&&(c=e),n>h&&(h=n)}return this.min.set(s,a,o),this.max.set(l,c,h),this}setFromBufferAttribute(r){let s=1/0,a=1/0,o=1/0,l=-1/0,c=-1/0,h=-1/0;for(let i=0,t=r.count;i<t;i++){const t=r.getX(i),e=r.getY(i),n=r.getZ(i);t<s&&(s=t),e<a&&(a=e),n<o&&(o=n),t>l&&(l=t),e>c&&(c=e),n>h&&(h=n)}return this.min.set(s,a,o),this.max.set(l,c,h),this}setFromPoints(n){this.makeEmpty();for(let t=0,e=n.length;t<e;t++)this.expandByPoint(n[t]);return this}setFromCenterAndSize(t,e){const n=mt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new It),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new It),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),gt.copy(e.boundingBox),gt.applyMatrix4(t.matrixWorld),this.union(gt));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new It),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,mt),mt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Mt),St.subVectors(this.max,Mt),vt.subVectors(t.a,Mt),yt.subVectors(t.b,Mt),xt.subVectors(t.c,Mt),_t.subVectors(yt,vt),bt.subVectors(xt,yt),wt.subVectors(vt,xt);let e=[0,-_t.z,_t.y,0,-bt.z,bt.y,0,-wt.z,wt.y,_t.z,0,-_t.x,bt.z,0,-bt.x,wt.z,0,-wt.x,-_t.y,_t.x,0,-bt.y,bt.x,0,-wt.y,wt.x,0];return!!Ot(e,vt,yt,xt,St)&&(e=[1,0,0,0,1,0,0,0,1],!!Ot(e,vt,yt,xt,St)&&(Nt.crossVectors(_t,bt),e=[Nt.x,Nt.y,Nt.z],Ot(e,vt,yt,xt,St)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new It),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return mt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(mt).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ft[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ft[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ft[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ft[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ft[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ft[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ft[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ft[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ft)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}pt.prototype.isBox3=!0;const ft=[new It,new It,new It,new It,new It,new It,new It,new It],mt=new It,gt=new pt,vt=new It,yt=new It,xt=new It,_t=new It,bt=new It,wt=new It,Mt=new It,St=new It,Nt=new It,Bt=new It;function Ot(s,a,o,l,c){for(let r=0,t=s.length-3;r<=t;r+=3){Bt.fromArray(s,r);const t=c.x*Math.abs(Bt.x)+c.y*Math.abs(Bt.y)+c.z*Math.abs(Bt.z),e=a.dot(Bt),n=o.dot(Bt),i=l.dot(Bt);if(Math.max(-Math.max(e,n,i),Math.min(e,n,i))>t)return!1}return!0}const zt=new pt,Ft=new It,Ht=new It,Ut=new It;class Gt{constructor(t=new It,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(n,t){const i=this.center;void 0!==t?i.copy(t):zt.setFromPoints(n).getCenter(i);let r=0;for(let t=0,e=n.length;t<e;t++)r=Math.max(r,i.distanceToSquared(n[t]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new It),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new pt),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(e){Ut.subVectors(e,this.center);const n=Ut.lengthSq();if(n>this.radius*this.radius){const e=Math.sqrt(n),t=.5*(e-this.radius);this.center.add(Ut.multiplyScalar(t/e)),this.radius+=t}return this}union(t){return Ht.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Ft.copy(t.center).add(Ht)),this.expandByPoint(Ft.copy(t.center).sub(Ht)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const kt=new It,Vt=new It,Wt=new It,jt=new It,qt=new It,Xt=new It,Yt=new It;class Zt{constructor(t=new It,e=new It(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new It),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,kt)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new It),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=kt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(kt.copy(this.direction).multiplyScalar(e).add(this.origin),kt.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Vt.copy(t).add(e).multiplyScalar(.5),Wt.copy(e).sub(t).normalize(),jt.copy(this.origin).sub(Vt);const r=.5*t.distanceTo(e),s=-this.direction.dot(Wt),a=jt.dot(this.direction),o=-jt.dot(Wt),l=jt.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*o-a,u=s*a-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+s*u+2*a)+u*(s*h+u+2*o)+l}else u=r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-s*r+a)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(s*r+a)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Wt).multiplyScalar(u).add(Vt),d}intersectSphere(t,e){kt.subVectors(t.center,this.origin);const n=kt.dot(this.direction),i=kt.dot(kt)-n*n,r=t.radius*t.radius;if(i>r)return null;const s=Math.sqrt(r-i),a=n-s,o=n+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,s=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,s=(t.min.y-u.y)*c),n>s||r>i?null:((r>n||n!=n)&&(n=r),(s<i||i!=i)&&(i=s),h>=0?(a=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,kt)}intersectTriangle(t,e,n,i,r){qt.subVectors(e,t),Xt.subVectors(n,t),Yt.crossVectors(qt,Xt);let s,a=this.direction.dot(Yt);if(a>0){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}jt.subVectors(this.origin,t);const o=s*this.direction.dot(Xt.crossVectors(jt,Xt));if(o<0)return null;const l=s*this.direction.dot(qt.cross(jt));if(l<0)return null;if(o+l>a)return null;const c=-s*jt.dot(Yt);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Jt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,s,a,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Jt).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Qt.setFromMatrixColumn(t,0).length(),r=1/Qt.setFromMatrixColumn(t,1).length(),s=1/Qt.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*a,e[4]=i*a-n,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=n*a-i,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=i+n*a,e[1]=n+i*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose($t,t,te)}lookAt(t,e,n){const i=this.elements;return ie.subVectors(t,e),0===ie.lengthSq()&&(ie.z=1),ie.normalize(),ee.crossVectors(n,ie),0===ee.lengthSq()&&(1===Math.abs(n.z)?ie.x+=1e-4:ie.z+=1e-4,ie.normalize(),ee.crossVectors(n,ie)),ee.normalize(),ne.crossVectors(ie,ee),i[0]=ee.x,i[4]=ne.x,i[8]=ie.x,i[1]=ee.y,i[5]=ne.y,i[9]=ie.y,i[2]=ee.z,i[6]=ne.z,i[10]=ie.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],w=i[4],M=i[8],S=i[12],T=i[1],E=i[5],A=i[9],L=i[13],R=i[2],C=i[6],P=i[10],D=i[14],I=i[3],N=i[7],B=i[11],O=i[15];return r[0]=s*b+a*T+o*R+l*I,r[4]=s*w+a*E+o*C+l*N,r[8]=s*M+a*A+o*P+l*B,r[12]=s*S+a*L+o*D+l*O,r[1]=c*b+h*T+u*R+d*I,r[5]=c*w+h*E+u*C+d*N,r[9]=c*M+h*A+u*P+d*B,r[13]=c*S+h*L+u*D+d*O,r[2]=p*b+f*T+m*R+g*I,r[6]=p*w+f*E+m*C+g*N,r[10]=p*M+f*A+m*P+g*B,r[14]=p*S+f*L+m*D+g*O,r[3]=v*b+y*T+x*R+_*I,r[7]=v*w+y*E+x*C+_*N,r[11]=v*M+y*A+x*P+_*B,r[15]=v*S+y*L+x*D+_*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*a*u+n*l*u+i*a*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-i*s*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*a*d-r*s*h+n*s*d+r*a*c-n*l*c)+t[15]*(-i*a*c-e*o*h+e*a*u+i*s*h-n*s*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*l-f*u*l+f*o*d-a*m*d-h*o*g+a*u*g,y=p*u*l-c*m*l-p*o*d+s*m*d+c*o*g-s*u*g,x=c*f*l-p*h*l+p*a*d-s*f*d-c*a*g+s*h*g,_=p*h*o-c*f*o-p*a*u+s*f*u+c*a*m-s*h*m,b=e*v+n*y+i*x+r*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=v*w,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*w,t[2]=(a*m*r-f*o*r+f*i*l-n*m*l-a*i*g+n*o*g)*w,t[3]=(h*o*r-a*u*r-h*i*l+n*u*l+a*i*d-n*o*d)*w,t[4]=y*w,t[5]=(c*m*r-p*u*r+p*i*d-e*m*d-c*i*g+e*u*g)*w,t[6]=(p*o*r-s*m*r-p*i*l+e*m*l+s*i*g-e*o*g)*w,t[7]=(s*u*r-c*o*r+c*i*l-e*u*l-s*i*d+e*o*d)*w,t[8]=x*w,t[9]=(p*h*r-c*f*r-p*n*d+e*f*d+c*n*g-e*h*g)*w,t[10]=(s*f*r-p*a*r+p*n*l-e*f*l-s*n*g+e*a*g)*w,t[11]=(c*a*r-s*h*r-c*n*l+e*h*l+s*n*d-e*a*d)*w,t[12]=_*w,t[13]=(c*f*i-p*h*i+p*n*u-e*f*u-c*n*m+e*h*m)*w,t[14]=(p*a*i-s*f*i-p*n*o+e*f*o+s*n*m-e*a*m)*w,t[15]=(s*h*i-c*a*i+c*n*o-e*h*o-s*n*u+e*a*u)*w,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,u=r*l,d=r*c,p=r*h,f=s*c,m=s*h,g=a*h,v=o*l,y=o*c,x=o*h,_=n.x,b=n.y,w=n.z;return i[0]=(1-(f+g))*_,i[1]=(d+x)*_,i[2]=(p-y)*_,i[3]=0,i[4]=(d-x)*b,i[5]=(1-(u+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+y)*w,i[9]=(m-v)*w,i[10]=(1-(u+f))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Qt.set(i[0],i[1],i[2]).length();const s=Qt.set(i[4],i[5],i[6]).length(),a=Qt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Kt.copy(this);const o=1/r,l=1/s,c=1/a;return Kt.elements[0]*=o,Kt.elements[1]*=o,Kt.elements[2]*=o,Kt.elements[4]*=l,Kt.elements[5]*=l,Kt.elements[6]*=l,Kt.elements[8]*=c,Kt.elements[9]*=c,Kt.elements[10]*=c,e.setFromRotationMatrix(Kt),n.x=r,n.y=s,n.z=a,this}makePerspective(t,e,n,i,r,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,s){const a=this.elements,o=1/(e-t),l=1/(n-i),c=1/(s-r),h=(e+t)*o,u=(n+i)*l,d=(s+r)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(e,n=0){for(let t=0;t<16;t++)this.elements[t]=e[t+n];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Jt.prototype.isMatrix4=!0;const Qt=new It,Kt=new Jt,$t=new It(0,0,0),te=new It(1,1,1),ee=new It,ne=new It,ie=new It,re=new Jt,se=new ht;class ae{constructor(t=0,e=0,n=0,i=ae.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=Ct.clamp,r=t.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(i(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return re.makeRotationFromQuaternion(t),this.setFromRotationMatrix(re,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return se.setFromEuler(this),this.setFromQuaternion(se,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new It(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ae.prototype.isEuler=!0,ae.DefaultOrder="XYZ",ae.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class oe{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let le=0;const ce=new It,he=new ht,ue=new Jt,de=new It,pe=new It,fe=new It,me=new ht,ge=new It(1,0,0),ve=new It(0,1,0),ye=new It(0,0,1),xe={type:"added"},_e={type:"removed"};function be(){Object.defineProperty(this,"id",{value:le++}),this.uuid=Ct.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=be.DefaultUp.clone();const t=new It,e=new ae,n=new ht,i=new It(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Jt},normalMatrix:{value:new nt}}),this.matrix=new Jt,this.matrixWorld=new Jt,this.matrixAutoUpdate=be.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new oe,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}be.DefaultUp=new It(0,1,0),be.DefaultMatrixAutoUpdate=!0,be.prototype=Object.assign(Object.create(z.prototype),{constructor:be,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return he.setFromAxisAngle(t,e),this.quaternion.multiply(he),this},rotateOnWorldAxis:function(t,e){return he.setFromAxisAngle(t,e),this.quaternion.premultiply(he),this},rotateX:function(t){return this.rotateOnAxis(ge,t)},rotateY:function(t){return this.rotateOnAxis(ve,t)},rotateZ:function(t){return this.rotateOnAxis(ye,t)},translateOnAxis:function(t,e){return ce.copy(t).applyQuaternion(this.quaternion),this.position.add(ce.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(ge,t)},translateY:function(t){return this.translateOnAxis(ve,t)},translateZ:function(t){return this.translateOnAxis(ye,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(ue.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?de.copy(t):de.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),pe.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ue.lookAt(pe,de,this.up):ue.lookAt(de,pe,this.up),this.quaternion.setFromRotationMatrix(ue),i&&(ue.extractRotation(i.matrixWorld),he.setFromRotationMatrix(ue),this.quaternion.premultiply(he.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(xe)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(_e)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_e)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),ue.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ue.multiply(t.parent.matrixWorld)),t.applyMatrix4(ue),this.add(t),t.updateWorldMatrix(!1,!0),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(n,i){if(this[n]===i)return this;for(let e=0,t=this.children.length;e<t;e++){const t=this.children[e].getObjectByProperty(n,i);if(void 0!==t)return t}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new It),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new ht),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pe,t,fe),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new It),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pe,me,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new It),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const i=this.children;for(let t=0,e=i.length;t<e;t++)i[t].traverse(n)},traverseVisible:function(n){if(!1===this.visible)return;n(this);const i=this.children;for(let t=0,e=i.length;t<e;t++)i[t].traverseVisible(n)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const i=this.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(n)},updateWorldMatrix:function(n,t){const e=this.parent;if(!0===n&&null!==e&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const n=this.children;for(let t=0,e=n.length;t<e;t++)n[t].updateWorldMatrix(!1,!0)}},toJSON:function(r){const s=void 0===r||"string"==typeof r,a={};s&&(r={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},a.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const o={};function l(t,e){return void 0===t[e.uuid]&&(t[e.uuid]=e.toJSON(r)),e.uuid}if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),!1===this.frustumCulled&&(o.frustumCulled=!1),0!==this.renderOrder&&(o.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(o.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){o.geometry=l(r.geometries,this.geometry);const s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){const a=s.shapes;if(Array.isArray(a))for(let t=0,e=a.length;t<e;t++){const o=a[t];l(r.shapes,o)}else l(r.shapes,a)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(l(r.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const s=[];for(let t=0,e=this.material.length;t<e;t++)s.push(l(r.materials,this.material[t]));o.material=s}else o.material=l(r.materials,this.material);if(this.children.length>0){o.children=[];for(let t=0;t<this.children.length;t++)o.children.push(this.children[t].toJSON(r).object)}if(this.animations.length>0){o.animations=[];for(let t=0;t<this.animations.length;t++){const a=this.animations[t];o.animations.push(l(r.animations,a))}}if(s){const s=c(r.geometries),o=c(r.materials),l=c(r.textures),t=c(r.images),e=c(r.shapes),n=c(r.skeletons),i=c(r.animations);s.length>0&&(a.geometries=s),o.length>0&&(a.materials=o),l.length>0&&(a.textures=l),t.length>0&&(a.images=t),e.length>0&&(a.shapes=e),n.length>0&&(a.skeletons=n),i.length>0&&(a.animations=i)}return a.object=o,a;function c(n){const i=[];for(const e in n){const t=n[e];delete t.metadata,i.push(t)}return i}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(n,t=!0){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),!0===t)for(let e=0;e<n.children.length;e++){const t=n.children[e];this.add(t.clone())}return this}});const we=new It,Me=new It,Se=new nt;class Te{constructor(t=new It(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=we.subVectors(n,e).cross(Me.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new It),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new It);const n=t.delta(we),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new It),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Se.getNormalMatrix(t),i=this.coplanarPoint(we).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Te.prototype.isPlane=!0;const Ee=new It,Ae=new It,Le=new It,Re=new It,Ce=new It,Pe=new It,De=new It,Ie=new It,Ne=new It,Be=new It;class Oe{constructor(t=new It,e=new It,n=new It){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new It),i.subVectors(n,e),Ee.subVectors(t,e),i.cross(Ee);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ee.subVectors(i,e),Ae.subVectors(n,e),Le.subVectors(t,e);const s=Ee.dot(Ee),a=Ee.dot(Ae),o=Ee.dot(Le),l=Ae.dot(Ae),c=Ae.dot(Le),h=s*l-a*a;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new It),0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*o-a*c)*u,p=(s*c-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Re),Re.x>=0&&Re.y>=0&&Re.x+Re.y<=1}static getUV(t,e,n,i,r,s,a,o){return this.getBarycoord(t,e,n,i,Re),o.set(0,0),o.addScaledVector(r,Re.x),o.addScaledVector(s,Re.y),o.addScaledVector(a,Re.z),o}static isFrontFacing(t,e,n,i){return Ee.subVectors(n,e),Ae.subVectors(t,e),Ee.cross(Ae).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ee.subVectors(this.c,this.b),Ae.subVectors(this.a,this.b),.5*Ee.cross(Ae).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new It),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Oe.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Te),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Oe.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return Oe.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return Oe.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Oe.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new It);const n=this.a,i=this.b,r=this.c;let s,a;Ce.subVectors(i,n),Pe.subVectors(r,n),Ie.subVectors(t,n);const o=Ce.dot(Ie),l=Pe.dot(Ie);if(o<=0&&l<=0)return e.copy(n);Ne.subVectors(t,i);const c=Ce.dot(Ne),h=Pe.dot(Ne);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return s=o/(o-c),e.copy(n).addScaledVector(Ce,s);Be.subVectors(t,r);const d=Ce.dot(Be),p=Pe.dot(Be);if(p>=0&&d<=p)return e.copy(r);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(Pe,a);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return De.subVectors(r,i),a=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(De,a);const g=1/(m+f+u);return s=f*g,a=u*g,e.copy(n).addScaledVector(Ce,s).addScaledVector(Pe,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ze=0;function Fe(){Object.defineProperty(this,"id",{value:ze++}),this.uuid=Ct.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=W,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=I,this.stencilZFail=I,this.stencilZPass=I,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Fe.prototype=Object.assign(Object.create(z.prototype),{constructor:Fe,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(i){if(void 0!==i)for(const n in i){const t=i[n];if(void 0===t){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}if("shading"===n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;continue}const e=this[n];void 0!==e?e&&e.isColor?e.set(t):e&&e.isVector3&&t&&t.isVector3?e.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}},toJSON:function(e){const n=void 0===e||"string"==typeof e;n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(n){const i=[];for(const e in n){const t=n[e];delete t.metadata,i.push(t)}return i}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n){const n=r(e.textures),t=r(e.images);n.length>0&&(i.textures=n),t.length>0&&(i.images=t)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(null!==n){const e=n.length;i=new Array(e);for(let t=0;t!==e;++t)i[t]=n[t].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Fe.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const He={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ue={h:0,s:0,l:0},Ge={h:0,s:0,l:0};function ke(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Ve(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function We(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class je{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(n,i,r){if(n=Ct.euclideanModulo(n,1),i=Ct.clamp(i,0,1),r=Ct.clamp(r,0,1),0===i)this.r=this.g=this.b=r;else{const t=r<=.5?r*(1+i):r+i-r*i,e=2*r-t;this.r=ke(e,t,n+1/3),this.g=ke(e,t,n),this.b=ke(e,t,n-1/3)}return this}setStyle(e){function i(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let n;const t=r[1],e=r[2];switch(t){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,i(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,i(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e)){const r=parseFloat(n[1])/360,t=parseInt(n[2],10)/100,e=parseInt(n[3],10)/100;return i(n[4]),this.setHSL(r,t,e)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=r[1],i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(t){const e=He[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Ve(t.r),this.g=Ve(t.g),this.b=Ve(t.b),this}copyLinearToSRGB(t){return this.r=We(t.r),this.g=We(t.g),this.b=We(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),s=Math.min(e,n,i);let a,o;const l=(s+r)/2;if(s===r)a=0,o=0;else{const t=r-s;switch(o=l<=.5?t/(r+s):t/(2-r-s),r){case e:a=(n-i)/t+(n<i?6:0);break;case n:a=(i-e)/t+2;break;case i:a=(e-n)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Ue),Ue.h+=t,Ue.s+=e,Ue.l+=n,this.setHSL(Ue.h,Ue.s,Ue.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ue),t.getHSL(Ge);const n=Ct.lerp(Ue.h,Ge.h,e),i=Ct.lerp(Ue.s,Ge.s,e),r=Ct.lerp(Ue.l,Ge.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}je.NAMES=He,je.prototype.isColor=!0,je.prototype.r=1,je.prototype.g=1,je.prototype.b=1;class qe extends Fe{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new je(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}qe.prototype.isMeshBasicMaterial=!0;const Xe=new It,Ye=new Pt;function Ze(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=N,this.updateRange={offset:0,count:-1},this.version=0}function Je(t,e,n){Ze.call(this,new Int8Array(t),e,n)}function Qe(t,e,n){Ze.call(this,new Uint8Array(t),e,n)}function Ke(t,e,n){Ze.call(this,new Uint8ClampedArray(t),e,n)}function $e(t,e,n){Ze.call(this,new Int16Array(t),e,n)}function tn(t,e,n){Ze.call(this,new Uint16Array(t),e,n)}function en(t,e,n){Ze.call(this,new Int32Array(t),e,n)}function nn(t,e,n){Ze.call(this,new Uint32Array(t),e,n)}function rn(t,e,n){Ze.call(this,new Uint16Array(t),e,n)}function sn(t,e,n){Ze.call(this,new Float32Array(t),e,n)}function an(t,e,n){Ze.call(this,new Float64Array(t),e,n)}function on(n){if(0===n.length)return-1/0;let i=n[0];for(let t=1,e=n.length;t<e;++t)n[t]>i&&(i=n[t]);return i}Object.defineProperty(Ze.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ze.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(n,i,r){n*=this.itemSize,r*=i.itemSize;for(let t=0,e=this.itemSize;t<e;t++)this.array[n+t]=i.array[r+t];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(n){const i=this.array;let r=0;for(let e=0,t=n.length;e<t;e++){let t=n[e];void 0===t&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",e),t=new je),i[r++]=t.r,i[r++]=t.g,i[r++]=t.b}return this},copyVector2sArray:function(n){const i=this.array;let r=0;for(let e=0,t=n.length;e<t;e++){let t=n[e];void 0===t&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",e),t=new Pt),i[r++]=t.x,i[r++]=t.y}return this},copyVector3sArray:function(n){const i=this.array;let r=0;for(let e=0,t=n.length;e<t;e++){let t=n[e];void 0===t&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",e),t=new It),i[r++]=t.x,i[r++]=t.y,i[r++]=t.z}return this},copyVector4sArray:function(n){const i=this.array;let r=0;for(let e=0,t=n.length;e<t;e++){let t=n[e];void 0===t&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",e),t=new Dt),i[r++]=t.x,i[r++]=t.y,i[r++]=t.z,i[r++]=t.w}return this},applyMatrix3:function(n){if(2===this.itemSize)for(let t=0,e=this.count;t<e;t++)Ye.fromBufferAttribute(this,t),Ye.applyMatrix3(n),this.setXY(t,Ye.x,Ye.y);else if(3===this.itemSize)for(let t=0,e=this.count;t<e;t++)Xe.fromBufferAttribute(this,t),Xe.applyMatrix3(n),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},applyMatrix4:function(n){for(let t=0,e=this.count;t<e;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.applyMatrix4(n),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},applyNormalMatrix:function(n){for(let t=0,e=this.count;t<e;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.applyNormalMatrix(n),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},transformDirection:function(n){for(let t=0,e=this.count;t<e;t++)Xe.x=this.getX(t),Xe.y=this.getY(t),Xe.z=this.getZ(t),Xe.transformDirection(n),this.setXYZ(t,Xe.x,Xe.y,Xe.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==N&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}),Je.prototype=Object.create(Ze.prototype),Je.prototype.constructor=Je,Qe.prototype=Object.create(Ze.prototype),Qe.prototype.constructor=Qe,Ke.prototype=Object.create(Ze.prototype),Ke.prototype.constructor=Ke,$e.prototype=Object.create(Ze.prototype),$e.prototype.constructor=$e,tn.prototype=Object.create(Ze.prototype),tn.prototype.constructor=tn,en.prototype=Object.create(Ze.prototype),en.prototype.constructor=en,nn.prototype=Object.create(Ze.prototype),nn.prototype.constructor=nn,rn.prototype=Object.create(Ze.prototype),rn.prototype.constructor=rn,rn.prototype.isFloat16BufferAttribute=!0,sn.prototype=Object.create(Ze.prototype),sn.prototype.constructor=sn,an.prototype=Object.create(Ze.prototype),an.prototype.constructor=an;const ln={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function cn(t,e){return new ln[t](e)}let hn=0;const un=new Jt,dn=new be,pn=new It,fn=new pt,mn=new pt,gn=new It;function vn(){Object.defineProperty(this,"id",{value:hn++}),this.uuid=Ct.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}vn.prototype=Object.assign(Object.create(z.prototype),{constructor:vn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(on(t)>65535?nn:tn)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new nt).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return un.makeRotationX(t),this.applyMatrix4(un),this},rotateY:function(t){return un.makeRotationY(t),this.applyMatrix4(un),this},rotateZ:function(t){return un.makeRotationZ(t),this.applyMatrix4(un),this},translate:function(t,e,n){return un.makeTranslation(t,e,n),this.applyMatrix4(un),this},scale:function(t,e,n){return un.makeScale(t,e,n),this.applyMatrix4(un),this},lookAt:function(t){return dn.lookAt(t),dn.updateMatrix(),this.applyMatrix4(dn.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(pn).negate(),this.translate(pn.x,pn.y,pn.z),this},setFromPoints:function(n){const i=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];i.push(t.x,t.y,t.z||0)}return this.setAttribute("position",new sn(i,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new pt);const t=this.attributes.position,n=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new It(-1/0,-1/0,-1/0),new It(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),n)for(let e=0,t=n.length;e<t;e++){const t=n[e];fn.setFromBufferAttribute(t),this.morphTargetsRelative?(gn.addVectors(this.boundingBox.min,fn.min),this.boundingBox.expandByPoint(gn),gn.addVectors(this.boundingBox.max,fn.max),this.boundingBox.expandByPoint(gn)):(this.boundingBox.expandByPoint(fn.min),this.boundingBox.expandByPoint(fn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Gt);const a=this.attributes.position,o=this.morphAttributes.position;if(a&&a.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new It,1/0);if(a){const r=this.boundingSphere.center;if(fn.setFromBufferAttribute(a),o)for(let e=0,t=o.length;e<t;e++){const t=o[e];mn.setFromBufferAttribute(t),this.morphTargetsRelative?(gn.addVectors(fn.min,mn.min),fn.expandByPoint(gn),gn.addVectors(fn.max,mn.max),fn.expandByPoint(gn)):(fn.expandByPoint(mn.min),fn.expandByPoint(mn.max))}fn.getCenter(r);let s=0;for(let t=0,e=a.count;t<e;t++)gn.fromBufferAttribute(a,t),s=Math.max(s,r.distanceToSquared(gn));if(o)for(let t=0,e=o.length;t<e;t++){const n=o[t],i=this.morphTargetsRelative;for(let t=0,e=n.count;t<e;t++)gn.fromBufferAttribute(n,t),i&&(pn.fromBufferAttribute(a,t),gn.add(pn)),s=Math.max(s,r.distanceToSquared(gn))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,n=this.attributes;if(null===t||void 0===n.position||void 0===n.normal||void 0===n.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,r=n.position.array,s=n.normal.array,a=n.uv.array,e=r.length/3;void 0===n.tangent&&this.setAttribute("tangent",new Ze(new Float32Array(4*e),4));const o=n.tangent.array,l=[],c=[];for(let t=0;t<e;t++)l[t]=new It,c[t]=new It;const h=new It,u=new It,d=new It,p=new Pt,f=new Pt,m=new Pt,g=new It,v=new It;function y(t,e,n){h.fromArray(r,3*t),u.fromArray(r,3*e),d.fromArray(r,3*n),p.fromArray(a,2*t),f.fromArray(a,2*e),m.fromArray(a,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:i.length}]);for(let t=0,e=x.length;t<e;++t){const n=x[t],r=n.start;for(let t=r,e=r+n.count;t<e;t+=3)y(i[t+0],i[t+1],i[t+2])}const _=new It,b=new It,w=new It,M=new It;function S(t){w.fromArray(s,3*t),M.copy(w);const e=l[t];_.copy(e),_.sub(w.multiplyScalar(w.dot(e))).normalize(),b.crossVectors(M,e);const n=b.dot(c[t])<0?-1:1;o[4*t]=_.x,o[4*t+1]=_.y,o[4*t+2]=_.z,o[4*t+3]=n}for(let t=0,e=x.length;t<e;++t){const n=x[t],r=n.start;for(let t=r,e=r+n.count;t<e;t+=3)S(i[t+0]),S(i[t+1]),S(i[t+2])}},computeVertexNormals:function(){const p=this.index,f=this.getAttribute("position");if(void 0!==f){let r=this.getAttribute("normal");if(void 0===r)r=new Ze(new Float32Array(3*f.count),3),this.setAttribute("normal",r);else for(let t=0,e=r.count;t<e;t++)r.setXYZ(t,0,0,0);const s=new It,a=new It,o=new It,l=new It,c=new It,h=new It,u=new It,d=new It;if(p)for(let i=0,t=p.count;i<t;i+=3){const t=p.getX(i+0),e=p.getX(i+1),n=p.getX(i+2);s.fromBufferAttribute(f,t),a.fromBufferAttribute(f,e),o.fromBufferAttribute(f,n),u.subVectors(o,a),d.subVectors(s,a),u.cross(d),l.fromBufferAttribute(r,t),c.fromBufferAttribute(r,e),h.fromBufferAttribute(r,n),l.add(u),c.add(u),h.add(u),r.setXYZ(t,l.x,l.y,l.z),r.setXYZ(e,c.x,c.y,c.z),r.setXYZ(n,h.x,h.y,h.z)}else for(let t=0,e=f.count;t<e;t+=3)s.fromBufferAttribute(f,t+0),a.fromBufferAttribute(f,t+1),o.fromBufferAttribute(f,t+2),u.subVectors(o,a),d.subVectors(s,a),u.cross(d),r.setXYZ(t+0,u.x,u.y,u.z),r.setXYZ(t+1,u.x,u.y,u.z),r.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),r.needsUpdate=!0}},merge:function(a,o){if(!a||!a.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);void 0===o&&(o=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const l=this.attributes;for(const e in l){if(void 0===a.attributes[e])continue;const n=l[e].array,t=a.attributes[e],i=t.array,r=t.itemSize*o,s=Math.min(i.length,n.length-r);for(let t=0,e=r;t<s;t++,e++)n[e]=i[t]}return this},normalizeNormals:function(){const n=this.attributes.normal;for(let t=0,e=n.count;t<e;t++)gn.fromBufferAttribute(n,t),gn.normalize(),n.setXYZ(t,gn.x,gn.y,gn.z)},toNonIndexed:function(){function i(t,n){const i=t.array,r=t.itemSize,e=t.normalized,s=new i.constructor(n.length*r);let a=0,o=0;for(let t=0,e=n.length;t<e;t++){a=n[t]*r;for(let t=0;t<r;t++)s[o++]=i[a++]}return new Ze(s,r,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const r=new vn,s=this.index.array,a=this.attributes;for(const t in a){const o=i(a[t],s);r.setAttribute(t,o)}const t=this.morphAttributes;for(const a in t){const o=[],n=t[a];for(let t=0,e=n.length;t<e;t++){const a=i(n[t],s);o.push(a)}r.morphAttributes[a]=o}r.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,e=o.length;t<e;t++){const s=o[t];r.addGroup(s.start,s.count,s.materialIndex)}return r},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(n[i]=t[i]);return n}n.data={attributes:{}};const t=this.index;null!==t&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const t in i){const r=i[t];n.data.attributes[t]=r.toJSON(n.data)}const r={};let e=!1;for(const t in this.morphAttributes){const i=this.morphAttributes[t],s=[];for(let t=0,e=i.length;t<e;t++){const r=i[t];s.push(r.toJSON(n.data))}s.length>0&&(r[t]=s,e=!0)}e&&(n.data.morphAttributes=r,n.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(n.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(n.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),n},clone:function(){return(new vn).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(n));const r=t.attributes;for(const t in r){const i=r[t];this.setAttribute(t,i.clone(n))}const e=t.morphAttributes;for(const t in e){const i=[],r=e[t];for(let t=0,e=r.length;t<e;t++)i.push(r[t].clone(n));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const n=s[t];this.addGroup(n.start,n.count,n.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const yn=new Jt,xn=new Zt,_n=new Gt,bn=new It,wn=new It,Mn=new It,Sn=new It,Tn=new It,En=new It,An=new It,Ln=new It,Rn=new It,Cn=new Pt,Pn=new Pt,Dn=new Pt,In=new It,Nn=new It;function Bn(t=new vn,e=new qe){be.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function On(t,n,i,e,r,s,a,o,l,c,h,u){bn.fromBufferAttribute(r,c),wn.fromBufferAttribute(r,h),Mn.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(n.morphTargets&&s&&d){An.set(0,0,0),Ln.set(0,0,0),Rn.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const n=d[t],i=s[t];0!==n&&(Sn.fromBufferAttribute(i,c),Tn.fromBufferAttribute(i,h),En.fromBufferAttribute(i,u),a?(An.addScaledVector(Sn,n),Ln.addScaledVector(Tn,n),Rn.addScaledVector(En,n)):(An.addScaledVector(Sn.sub(bn),n),Ln.addScaledVector(Tn.sub(wn),n),Rn.addScaledVector(En.sub(Mn),n)))}bn.add(An),wn.add(Ln),Mn.add(Rn)}t.isSkinnedMesh&&n.skinning&&(t.boneTransform(c,bn),t.boneTransform(h,wn),t.boneTransform(u,Mn));const p=function(t,e,n,i,r,s,a,o){let l;if(l=1===e.side?i.intersectTriangle(a,s,r,!0,o):i.intersectTriangle(r,s,a,2!==e.side,o),null===l)return null;Nn.copy(o),Nn.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Nn);return c<n.near||c>n.far?null:{distance:c,point:Nn.clone(),object:t}}(t,n,i,e,bn,wn,Mn,In);if(p){o&&(Cn.fromBufferAttribute(o,c),Pn.fromBufferAttribute(o,h),Dn.fromBufferAttribute(o,u),p.uv=Oe.getUV(In,bn,wn,Mn,Cn,Pn,Dn,new Pt)),l&&(Cn.fromBufferAttribute(l,c),Pn.fromBufferAttribute(l,h),Dn.fromBufferAttribute(l,u),p.uv2=Oe.getUV(In,bn,wn,Mn,Cn,Pn,Dn,new Pt));const t={a:c,b:h,c:u,normal:new It,materialIndex:0};Oe.getNormal(bn,wn,Mn,t.normal),p.face=t}return p}Bn.prototype=Object.assign(Object.create(be.prototype),{constructor:Bn,isMesh:!0,copy:function(t){return be.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const t=n.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}else{const t=n.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(d,p){const t=this.geometry,f=this.material,m=this.matrixWorld;if(void 0===f)return;if(null===t.boundingSphere&&t.computeBoundingSphere(),_n.copy(t.boundingSphere),_n.applyMatrix4(m),!1===d.ray.intersectsSphere(_n))return;if(yn.copy(m).invert(),xn.copy(d.ray).applyMatrix4(yn),null!==t.boundingBox&&!1===xn.intersectsBox(t.boundingBox))return;let g;if(t.isBufferGeometry){const m=t.index,s=t.attributes.position,a=t.morphAttributes.position,o=t.morphTargetsRelative,l=t.attributes.uv,c=t.attributes.uv2,h=t.groups,u=t.drawRange;if(null!==m)if(Array.isArray(f))for(let t=0,e=h.length;t<e;t++){const i=h[t],r=f[i.materialIndex];for(let n=Math.max(i.start,u.start),t=Math.min(i.start+i.count,u.start+u.count);n<t;n+=3){const f=m.getX(n),t=m.getX(n+1),e=m.getX(n+2);g=On(this,r,d,xn,s,a,o,l,c,f,t,e),g&&(g.faceIndex=Math.floor(n/3),g.face.materialIndex=i.materialIndex,p.push(g))}}else{for(let i=Math.max(0,u.start),t=Math.min(m.count,u.start+u.count);i<t;i+=3){const t=m.getX(i),e=m.getX(i+1),n=m.getX(i+2);g=On(this,f,d,xn,s,a,o,l,c,t,e,n),g&&(g.faceIndex=Math.floor(i/3),p.push(g))}}else if(void 0!==s)if(Array.isArray(f))for(let t=0,e=h.length;t<e;t++){const m=h[t],n=f[m.materialIndex];for(let t=Math.max(m.start,u.start),e=Math.min(m.start+m.count,u.start+u.count);t<e;t+=3){g=On(this,n,d,xn,s,a,o,l,c,t,t+1,t+2),g&&(g.faceIndex=Math.floor(t/3),g.face.materialIndex=m.materialIndex,p.push(g))}}else{for(let t=Math.max(0,u.start),e=Math.min(s.count,u.start+u.count);t<e;t+=3){g=On(this,f,d,xn,s,a,o,l,c,t,t+1,t+2),g&&(g.faceIndex=Math.floor(t/3),p.push(g))}}}else t.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});class zn extends vn{constructor(t=1,e=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const b=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const w=[],M=[],S=[],T=[];let E=0,A=0;function a(n,i,r,s,a,o,t,l,c,h,e){const u=o/c,d=t/h,p=o/2,f=t/2,m=l/2,g=c+1,v=h+1;let y=0,x=0;const _=new It;for(let e=0;e<v;e++){const b=e*d-f;for(let t=0;t<g;t++){const E=t*u-p;_[n]=E*s,_[i]=b*a,_[r]=m,M.push(_.x,_.y,_.z),_[n]=0,_[i]=0,_[r]=l>0?1:-1,S.push(_.x,_.y,_.z),T.push(t/c),T.push(1-e/h),y+=1}}for(let e=0;e<h;e++)for(let t=0;t<c;t++){const r=E+t+g*e,s=E+t+g*(e+1),a=E+(t+1)+g*(e+1),o=E+(t+1)+g*e;w.push(r,s,o),w.push(s,a,o),x+=6}b.addGroup(A,x,e),A+=x,E+=y}a("z","y","x",-1,-1,n,e,t,s,r,0),a("z","y","x",1,-1,n,e,-t,s,r,1),a("x","z","y",1,1,t,n,e,i,s,2),a("x","z","y",1,-1,t,n,-e,i,s,3),a("x","y","z",1,-1,t,e,n,i,r,4),a("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(w),this.setAttribute("position",new sn(M,3)),this.setAttribute("normal",new sn(S,3)),this.setAttribute("uv",new sn(T,2))}}function Fn(i){const r={};for(const n in i){r[n]={};for(const e in i[n]){const t=i[n][e];t&&(t.isColor||t.isMatrix3||t.isMatrix4||t.isVector2||t.isVector3||t.isVector4||t.isTexture||t.isQuaternion)?r[n][e]=t.clone():Array.isArray(t)?r[n][e]=t.slice():r[n][e]=t}}return r}function Hn(n){const i={};for(let e=0;e<n.length;e++){const t=Fn(n[e]);for(const n in t)i[n]=t[n]}return i}const Un={clone:Fn,merge:Hn};function Gn(t){Fe.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function kn(){be.call(this),this.type="Camera",this.matrixWorldInverse=new Jt,this.projectionMatrix=new Jt,this.projectionMatrixInverse=new Jt}function Vn(t=50,e=1,n=.1,i=2e3){kn.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Gn.prototype=Object.create(Fe.prototype),Gn.prototype.constructor=Gn,Gn.prototype.isShaderMaterial=!0,Gn.prototype.copy=function(t){return Fe.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Fn(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},Gn.prototype.toJSON=function(e){const n=Fe.prototype.toJSON.call(this,e);n.glslVersion=this.glslVersion,n.uniforms={};for(const i in this.uniforms){const t=this.uniforms[i].value;t&&t.isTexture?n.uniforms[i]={type:"t",value:t.toJSON(e).uuid}:t&&t.isColor?n.uniforms[i]={type:"c",value:t.getHex()}:t&&t.isVector2?n.uniforms[i]={type:"v2",value:t.toArray()}:t&&t.isVector3?n.uniforms[i]={type:"v3",value:t.toArray()}:t&&t.isVector4?n.uniforms[i]={type:"v4",value:t.toArray()}:t&&t.isMatrix3?n.uniforms[i]={type:"m3",value:t.toArray()}:t&&t.isMatrix4?n.uniforms[i]={type:"m4",value:t.toArray()}:n.uniforms[i]={value:t}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;const i={};for(const e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(n.extensions=i),n},kn.prototype=Object.assign(Object.create(be.prototype),{constructor:kn,isCamera:!0,copy:function(t,e){return be.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new It),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){be.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){be.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),Vn.prototype=Object.assign(Object.create(kn.prototype),{constructor:Vn,isPerspectiveCamera:!0,copy:function(t,e){return kn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Ct.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*Ct.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Ct.RAD2DEG*Math.atan(Math.tan(.5*Ct.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*Ct.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/t,e-=s.offsetY*n/a,i*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=be.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const Wn=90;class jn extends be{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Vn(Wn,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new It(1,0,0)),this.add(i);const r=new Vn(Wn,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new It(-1,0,0)),this.add(r);const s=new Vn(Wn,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new It(0,1,0)),this.add(s);const a=new Vn(Wn,1,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new It(0,-1,0)),this.add(a);const o=new Vn(Wn,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new It(0,0,1)),this.add(o);const l=new Vn(Wn,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new It(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,s,a,o,l]=this.children,c=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(h),t.xr.enabled=c}}class qn extends at{constructor(t,e,n,i,r,s,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:S,n,i,r,s,a=void 0!==a?a:K,o,l,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}qn.prototype.isCubeTexture=!0;class Xn extends lt{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new qn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:q,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Lt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new zn(5,5,5),r=new Gn({name:"CubemapFromEquirect",uniforms:Fn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const s=new Bn(i,r),a=e.minFilter;e.minFilter===Y&&(e.minFilter=q);return new jn(1,10,this).update(t,s),e.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,n,i,r){const t=e.getRenderTarget();for(let t=0;t<6;t++)e.setRenderTarget(this,t),e.clear(n,i,r);e.setRenderTarget(t)}}Xn.prototype.isWebGLCubeRenderTarget=!0;class Yn extends at{constructor(t,e,n,i,r,s,a,o,l,c,h,u){super(null,s,a,o,l,c,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:k,this.minFilter=void 0!==c?c:k,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Yn.prototype.isDataTexture=!0;const Zn=new Gt,Jn=new It;class Qn{constructor(t=new Te,e=new Te,n=new Te,i=new Te,r=new Te,s=new Te){this.planes=[t,e,n,i,r,s]}set(t,e,n,i,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this}copy(e){const n=this.planes;for(let t=0;t<6;t++)n[t].copy(e.planes[t]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(a-i,h-o,f-u,y-m).normalize(),e[1].setComponents(a+i,h+o,f+u,y+m).normalize(),e[2].setComponents(a+r,h+l,f+d,y+g).normalize(),e[3].setComponents(a-r,h-l,f-d,y-g).normalize(),e[4].setComponents(a-s,h-c,f-p,y-v).normalize(),e[5].setComponents(a+s,h+c,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Zn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Zn)}intersectsSprite(t){return Zn.center.set(0,0,0),Zn.radius=.7071067811865476,Zn.applyMatrix4(t.matrixWorld),this.intersectsSphere(Zn)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(n){const i=this.planes;for(let e=0;e<6;e++){const t=i[e];if(Jn.x=t.normal.x>0?n.max.x:n.min.x,Jn.y=t.normal.y>0?n.max.y:n.min.y,Jn.z=t.normal.z>0?n.max.z:n.min.z,t.distanceToPoint(Jn)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let t=0;t<6;t++)if(n[t].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Kn(){let n=null,t=!1,i=null,r=null;function s(t,e){i(t,e),r=n.requestAnimationFrame(s)}return{start:function(){!0!==t&&null!==i&&(r=n.requestAnimationFrame(s),t=!0)},stop:function(){n.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(t){i=t},setContext:function(t){n=t}}}function $n(a,t){const o=t.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const e=i.get(t);e&&(a.deleteBuffer(e.buffer),i.delete(t))},update:function(t,e){if(t.isGLBufferAttribute){const a=i.get(t);return void((!a||a.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);void 0===n?i.set(t,function(t,e){const n=t.array,i=t.usage,r=a.createBuffer();a.bindBuffer(e,r),a.bufferData(e,n,i),t.onUploadCallback();let s=5126;return n instanceof Float32Array?s=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?t.isFloat16BufferAttribute?o?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:n instanceof Int16Array?s=5122:n instanceof Uint32Array?s=5125:n instanceof Int32Array?s=5124:n instanceof Int8Array?s=5120:n instanceof Uint8Array&&(s=5121),{buffer:r,type:s,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,e)):n.version<t.version&&(!function(t,e,n){const i=e.array,r=e.updateRange;a.bindBuffer(n,t),-1===r.count?a.bufferSubData(n,0,i):(o?a.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i,r.offset,r.count):a.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i.subarray(r.offset,r.offset+r.count)),r.count=-1)}(n.buffer,t,e),n.version=t.version)}}}class ti extends vn{constructor(t=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r};const s=t/2,a=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,h=l+1,u=t/o,d=n/l,p=[],f=[],m=[],g=[];for(let e=0;e<h;e++){const n=e*d-a;for(let t=0;t<c;t++){const r=t*u-s;f.push(r,-n,0),m.push(0,0,1),g.push(t/o),g.push(1-e/l)}}for(let e=0;e<l;e++)for(let t=0;t<o;t++){const i=t+c*e,r=t+c*(e+1),s=t+1+c*(e+1),a=t+1+c*e;p.push(i,r,a),p.push(r,s,a)}this.setIndex(p),this.setAttribute("position",new sn(f,3)),this.setAttribute("normal",new sn(m,3)),this.setAttribute("uv",new sn(g,2))}}const ei={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},ni={common:{diffuse:{value:new je(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new nt},uv2Transform:{value:new nt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Pt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new je(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new je(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new nt}},sprite:{diffuse:{value:new je(15658734)},opacity:{value:1},center:{value:new Pt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new nt}}},ii={basic:{uniforms:Hn([ni.common,ni.specularmap,ni.envmap,ni.aomap,ni.lightmap,ni.fog]),vertexShader:ei.meshbasic_vert,fragmentShader:ei.meshbasic_frag},lambert:{uniforms:Hn([ni.common,ni.specularmap,ni.envmap,ni.aomap,ni.lightmap,ni.emissivemap,ni.fog,ni.lights,{emissive:{value:new je(0)}}]),vertexShader:ei.meshlambert_vert,fragmentShader:ei.meshlambert_frag},phong:{uniforms:Hn([ni.common,ni.specularmap,ni.envmap,ni.aomap,ni.lightmap,ni.emissivemap,ni.bumpmap,ni.normalmap,ni.displacementmap,ni.fog,ni.lights,{emissive:{value:new je(0)},specular:{value:new je(1118481)},shininess:{value:30}}]),vertexShader:ei.meshphong_vert,fragmentShader:ei.meshphong_frag},standard:{uniforms:Hn([ni.common,ni.envmap,ni.aomap,ni.lightmap,ni.emissivemap,ni.bumpmap,ni.normalmap,ni.displacementmap,ni.roughnessmap,ni.metalnessmap,ni.fog,ni.lights,{emissive:{value:new je(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ei.meshphysical_vert,fragmentShader:ei.meshphysical_frag},toon:{uniforms:Hn([ni.common,ni.aomap,ni.lightmap,ni.emissivemap,ni.bumpmap,ni.normalmap,ni.displacementmap,ni.gradientmap,ni.fog,ni.lights,{emissive:{value:new je(0)}}]),vertexShader:ei.meshtoon_vert,fragmentShader:ei.meshtoon_frag},matcap:{uniforms:Hn([ni.common,ni.bumpmap,ni.normalmap,ni.displacementmap,ni.fog,{matcap:{value:null}}]),vertexShader:ei.meshmatcap_vert,fragmentShader:ei.meshmatcap_frag},points:{uniforms:Hn([ni.points,ni.fog]),vertexShader:ei.points_vert,fragmentShader:ei.points_frag},dashed:{uniforms:Hn([ni.common,ni.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ei.linedashed_vert,fragmentShader:ei.linedashed_frag},depth:{uniforms:Hn([ni.common,ni.displacementmap]),vertexShader:ei.depth_vert,fragmentShader:ei.depth_frag},normal:{uniforms:Hn([ni.common,ni.bumpmap,ni.normalmap,ni.displacementmap,{opacity:{value:1}}]),vertexShader:ei.normal_vert,fragmentShader:ei.normal_frag},sprite:{uniforms:Hn([ni.sprite,ni.fog]),vertexShader:ei.sprite_vert,fragmentShader:ei.sprite_frag},background:{uniforms:{uvTransform:{value:new nt},t2D:{value:null}},vertexShader:ei.background_vert,fragmentShader:ei.background_frag},cube:{uniforms:Hn([ni.envmap,{opacity:{value:1}}]),vertexShader:ei.cube_vert,fragmentShader:ei.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ei.equirect_vert,fragmentShader:ei.equirect_frag},distanceRGBA:{uniforms:Hn([ni.common,ni.displacementmap,{referencePosition:{value:new It},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ei.distanceRGBA_vert,fragmentShader:ei.distanceRGBA_frag},shadow:{uniforms:Hn([ni.lights,ni.fog,{color:{value:new je(0)},opacity:{value:1}}]),vertexShader:ei.shadow_vert,fragmentShader:ei.shadow_frag}};function ri(o,l,n,c,i){const h=new je(0);let u,d,p=0,f=null,m=0,g=null;function v(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return h},setClearColor:function(t,e=1){h.set(t),p=e,v(h,p)},getClearAlpha:function(){return p},setClearAlpha:function(t){p=t,v(h,p)},render:function(t,e,n,i){let r=!0===e.isScene?e.background:null;r&&r.isTexture&&(r=l.get(r));const s=o.xr,a=s.getSession&&s.getSession();a&&"additive"===a.environmentBlendMode&&(r=null),null===r?v(h,p):r&&r.isColor&&(v(r,1),i=!0),(o.autoClear||i)&&o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil),r&&(r.isCubeTexture||r.mapping===E)?(void 0===d&&(d=new Bn(new zn(1,1,1),new Gn({name:"BackgroundCubeMaterial",uniforms:Fn(ii.cube.uniforms),vertexShader:ii.cube.vertexShader,fragmentShader:ii.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),c.update(d)),d.material.uniforms.envMap.value=r,d.material.uniforms.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,f===r&&m===r.version&&g===o.toneMapping||(d.material.needsUpdate=!0,f=r,m=r.version,g=o.toneMapping),t.unshift(d,d.geometry,d.material,0,0,null)):r&&r.isTexture&&(void 0===u&&(u=new Bn(new ti(2,2),new Gn({name:"BackgroundMaterial",uniforms:Fn(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),c.update(u)),u.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),u.material.uniforms.uvTransform.value.copy(r.matrix),f===r&&m===r.version&&g===o.toneMapping||(u.material.needsUpdate=!0,f=r,m=r.version,g=o.toneMapping),t.unshift(u,u.geometry,u.material,0,0,null))}}}function si(l,c,h,u){const r=l.getParameter(34921),o=u.isWebGL2?null:c.get("OES_vertex_array_object"),a=u.isWebGL2||null!==o,d={},t=m(null);let p=t;function f(t){return u.isWebGL2?l.bindVertexArray(t):o.bindVertexArrayOES(t)}function s(t){return u.isWebGL2?l.deleteVertexArray(t):o.deleteVertexArrayOES(t)}function m(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function g(){const n=p.newAttributes;for(let t=0,e=n.length;t<e;t++)n[t]=0}function v(t){y(t,0)}function y(t,e){const n=p.newAttributes,i=p.enabledAttributes,r=p.attributeDivisors;if(n[t]=1,0===i[t]&&(l.enableVertexAttribArray(t),i[t]=1),r[t]!==e){(u.isWebGL2?l:c.get("ANGLE_instanced_arrays"))[u.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](t,e),r[t]=e}}function x(){const n=p.newAttributes,i=p.enabledAttributes;for(let t=0,e=i.length;t<e;t++)i[t]!==n[t]&&(l.disableVertexAttribArray(t),i[t]=0)}function _(t,e,n,i,r,s){!0!==u.isWebGL2||5124!==n&&5125!==n?l.vertexAttribPointer(t,e,n,i,r,s):l.vertexAttribIPointer(t,e,n,r,s)}function e(){n(),p!==t&&(p=t,f(p.object))}function n(){t.geometry=null,t.program=null,t.wireframe=!1}return{setup:function(t,e,n,i,r){let s=!1;if(a){const c=function(t,e,n){const i=!0===n.wireframe;let r=d[t.id];void 0===r&&(r={},d[t.id]=r);let s=r[e.id];void 0===s&&(s={},r[e.id]=s);let a=s[i];void 0===a&&(a=m(u.isWebGL2?l.createVertexArray():o.createVertexArrayOES()),s[i]=a);return a}(i,n,e);p!==c&&(p=c,f(p.object)),s=function(e,n){const i=p.attributes,r=e.attributes;let s=0;for(const e in r){const n=i[e],t=r[e];if(void 0===n)return!0;if(n.attribute!==t)return!0;if(n.data!==t.data)return!0;s++}return p.attributesNum!==s||p.index!==n}(i,r),s&&function(e,n){const i={},r=e.attributes;let s=0;for(const e in r){const n=r[e],t={};t.attribute=n,n.data&&(t.data=n.data),i[e]=t,s++}p.attributes=i,p.attributesNum=s,p.index=n}(i,r)}else{const l=!0===e.wireframe;p.geometry===i.id&&p.program===n.id&&p.wireframe===l||(p.geometry=i.id,p.program=n.id,p.wireframe=l,s=!0)}!0===t.isInstancedMesh&&(s=!0),null!==r&&h.update(r,34963),s&&(!function(e,n,i,r){if(!1===u.isWebGL2&&(e.isInstancedMesh||r.isInstancedBufferGeometry)&&null===c.get("ANGLE_instanced_arrays"))return;g();const s=r.attributes,a=i.getAttributes(),o=n.defaultAttributeValues;for(const c in a){const u=a[c];if(u>=0){const n=s[c];if(void 0!==n){const c=n.normalized,e=n.itemSize,i=h.get(n);if(void 0===i)continue;const s=i.buffer,a=i.type,o=i.bytesPerElement;if(n.isInterleavedBufferAttribute){const h=n.data,i=h.stride,t=n.offset;h&&h.isInstancedInterleavedBuffer?(y(u,h.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=h.meshPerAttribute*h.count)):v(u),l.bindBuffer(34962,s),_(u,e,a,c,i*o,t*o)}else n.isInstancedBufferAttribute?(y(u,n.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=n.meshPerAttribute*n.count)):v(u),l.bindBuffer(34962,s),_(u,e,a,c,0,0)}else if("instanceMatrix"===c){const c=h.get(e.instanceMatrix);if(void 0===c)continue;const n=c.buffer,i=c.type;y(u+0,1),y(u+1,1),y(u+2,1),y(u+3,1),l.bindBuffer(34962,n),l.vertexAttribPointer(u+0,4,i,!1,64,0),l.vertexAttribPointer(u+1,4,i,!1,64,16),l.vertexAttribPointer(u+2,4,i,!1,64,32),l.vertexAttribPointer(u+3,4,i,!1,64,48)}else if("instanceColor"===c){const c=h.get(e.instanceColor);if(void 0===c)continue;const n=c.buffer,i=c.type;y(u,1),l.bindBuffer(34962,n),l.vertexAttribPointer(u,3,i,!1,12,0)}else if(void 0!==o){const h=o[c];if(void 0!==h)switch(h.length){case 2:l.vertexAttrib2fv(u,h);break;case 3:l.vertexAttrib3fv(u,h);break;case 4:l.vertexAttrib4fv(u,h);break;default:l.vertexAttrib1fv(u,h)}}}}x()}(t,e,n,i),null!==r&&l.bindBuffer(34963,h.get(r).buffer))},reset:e,resetDefaultState:n,dispose:function(){e();for(const t in d){const n=d[t];for(const t in n){const e=n[t];for(const t in e)s(e[t].object),delete e[t];delete n[t]}delete d[t]}},releaseStatesOfGeometry:function(e){if(void 0===d[e.id])return;const n=d[e.id];for(const e in n){const t=n[e];for(const e in t)s(t[e].object),delete t[e];delete n[e]}delete d[e.id]},releaseStatesOfProgram:function(i){for(const n in d){const t=d[n];if(void 0===t[i.id])continue;const e=t[i.id];for(const i in e)s(e[i].object),delete e[i];delete t[i.id]}},initAttributes:g,enableAttribute:v,disableUnusedAttributes:x}}function ai(s,a,o,t){const l=t.isWebGL2;let c;this.setMode=function(t){c=t},this.render=function(t,e){s.drawArrays(c,t,e),o.update(e,c,1)},this.renderInstances=function(t,e,n){if(0===n)return;let i,r;if(l)i=s,r="drawArraysInstanced";else if(i=a.get("ANGLE_instanced_arrays"),r="drawArraysInstancedANGLE",null===i)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");i[r](c,t,e,n),o.update(e,c,n)}}function oi(e,n,t){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==t.precision?t.precision:"highp";const o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===t.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),f=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),v=h>0,y=s||n.has("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===n.has("EXT_texture_filter_anisotropic")){const t=n.get("EXT_texture_filter_anisotropic");i=e.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:s?e.getParameter(36183):0}}function li(o){const e=this;let l=null,c=0,h=!1,u=!1;const d=new Te,p=new nt,f={value:null,needsUpdate:!1};function m(){f.value!==l&&(f.value=l,f.needsUpdate=c>0),e.numPlanes=c,e.numIntersection=0}function g(n,t,i,r){const s=null!==n?n.length:0;let a=null;if(0!==s){if(a=f.value,!0!==r||null===a){const e=i+4*s,r=t.matrixWorldInverse;p.getNormalMatrix(r),(null===a||a.length<e)&&(a=new Float32Array(e));for(let t=0,e=i;t!==s;++t,e+=4)d.copy(n[t]).applyMatrix4(r,p),d.normal.toArray(a,e),a[e+3]=d.constant}f.value=a,f.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,a}this.uniform=f,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,n){const i=0!==t.length||e||0!==c||h;return h=e,l=g(t,n,0),c=t.length,i},this.beginShadows=function(){u=!0,g(null)},this.endShadows=function(){u=!1,m()},this.setState=function(n,t,i){const r=n.clippingPlanes,s=n.clipIntersection,e=n.clipShadows,a=o.get(n);if(!h||null===r||0===r.length||u&&!e)u?g(null):m();else{const o=u?0:c,n=4*o;let e=a.clippingState||null;f.value=e,e=g(r,t,n,i);for(let t=0;t!==n;++t)e[t]=l[t];a.clippingState=e,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=o}}}function ci(n){let i=new WeakMap;function r(t,e){return e===a?t.mapping=S:e===o&&(t.mapping=T),t}function s(t){const e=t.target;e.removeEventListener("dispose",s);const n=i.get(e);void 0!==n&&(i.delete(e),n.dispose())}return{get:function(e){if(e&&e.isTexture){const t=e.mapping;if(t===a||t===o){if(i.has(e)){return r(i.get(e).texture,e.mapping)}{const t=e.image;if(t&&t.height>0){const a=n.getRenderTarget(),o=new Xn(t.height/2);return o.fromEquirectangularTexture(n,e),i.set(e,o),n.setRenderTarget(a),e.addEventListener("dispose",s),r(o.texture,e.mapping)}return null}}}return e},dispose:function(){i=new WeakMap}}}function hi(n){const i={};function r(t){if(void 0!==i[t])return i[t];let e;switch(t){case"WEBGL_depth_texture":e=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":e=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":e=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":e=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:e=n.getExtension(t)}return i[t]=e,e}return{has:function(t){return null!==r(t)},init:function(t){t.isWebGL2?r("EXT_color_buffer_float"):(r("WEBGL_depth_texture"),r("OES_texture_float"),r("OES_texture_half_float"),r("OES_texture_half_float_linear"),r("OES_standard_derivatives"),r("OES_element_index_uint"),r("OES_vertex_array_object"),r("ANGLE_instanced_arrays")),r("OES_texture_float_linear"),r("EXT_color_buffer_half_float")},get:function(t){const e=r(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function ui(t,o,i,r){const s={},l=new WeakMap;function a(t){const e=t.target;null!==e.index&&o.remove(e.index);for(const t in e.attributes)o.remove(e.attributes[t]);e.removeEventListener("dispose",a),delete s[e.id];const n=l.get(e);n&&(o.remove(n),l.delete(e)),r.releaseStatesOfGeometry(e),!0===e.isInstancedBufferGeometry&&delete e._maxInstanceCount,i.memory.geometries--}function c(n){const i=[],r=n.index,s=n.attributes.position;let t=0;if(null!==r){const n=r.array;t=r.version;for(let t=0,e=n.length;t<e;t+=3){const r=n[t+0],s=n[t+1],l=n[t+2];i.push(r,s,s,l,l,r)}}else{const n=s.array;t=s.version;for(let t=0,e=n.length/3-1;t<e;t+=3){const n=t+0,r=t+1,s=t+2;i.push(n,r,r,s,s,n)}}const e=new(on(i)>65535?nn:tn)(i,1);e.version=t;const a=l.get(n);a&&o.remove(a),l.set(n,e)}return{get:function(t,e){return!0===s[e.id]||(e.addEventListener("dispose",a),s[e.id]=!0,i.memory.geometries++),e},update:function(t){const n=t.attributes;for(const t in n)o.update(n[t],34962);const e=t.morphAttributes;for(const t in e){const n=e[t];for(let t=0,e=n.length;t<e;t++)o.update(n[t],34962)}},getWireframeAttribute:function(e){const n=l.get(e);if(n){const t=e.index;null!==t&&n.version<t.version&&c(e)}else c(e);return l.get(e)}}}function di(s,a,o,t){const l=t.isWebGL2;let c,h,u;this.setMode=function(t){c=t},this.setIndex=function(t){h=t.type,u=t.bytesPerElement},this.render=function(t,e){s.drawElements(c,e,h,t*u),o.update(e,c,1)},this.renderInstances=function(t,e,n){if(0===n)return;let i,r;if(l)i=s,r="drawElementsInstanced";else if(i=a.get("ANGLE_instanced_arrays"),r="drawElementsInstancedANGLE",null===i)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");i[r](c,e,h,t*u,n),o.update(e,c,n)}}function pi(t){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(t,e,n){switch(i.calls++,e){case 4:i.triangles+=n*(t/3);break;case 1:i.lines+=n*(t/2);break;case 3:i.lines+=n*(t-1);break;case 2:i.lines+=n*t;break;case 0:i.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e)}}}}function fi(t,e){return t[0]-e[0]}function mi(t,e){return Math.abs(e[1])-Math.abs(t[1])}function gi(u){const d={},p=new Float32Array(8),f=[];for(let t=0;t<8;t++)f[t]=[t,0];return{update:function(e,n,i,t){const r=e.morphTargetInfluences,s=void 0===r?0:r.length;let a=d[n.id];if(void 0===a){a=[];for(let t=0;t<s;t++)a[t]=[t,0];d[n.id]=a}for(let t=0;t<s;t++){const d=a[t];d[0]=t,d[1]=r[t]}a.sort(mi);for(let t=0;t<8;t++)t<s&&a[t][1]?(f[t][0]=a[t][0],f[t][1]=a[t][1]):(f[t][0]=Number.MAX_SAFE_INTEGER,f[t][1]=0);f.sort(fi);const o=i.morphTargets&&n.morphAttributes.position,l=i.morphNormals&&n.morphAttributes.normal;let c=0;for(let t=0;t<8;t++){const d=f[t],e=d[0],i=d[1];e!==Number.MAX_SAFE_INTEGER&&i?(o&&n.getAttribute("morphTarget"+t)!==o[e]&&n.setAttribute("morphTarget"+t,o[e]),l&&n.getAttribute("morphNormal"+t)!==l[e]&&n.setAttribute("morphNormal"+t,l[e]),p[t]=i,c+=i):(o&&!0===n.hasAttribute("morphTarget"+t)&&n.deleteAttribute("morphTarget"+t),l&&!0===n.hasAttribute("morphNormal"+t)&&n.deleteAttribute("morphNormal"+t),p[t]=0)}const h=n.morphTargetsRelative?1:1-c;t.getUniforms().setValue(u,"morphTargetBaseInfluence",h),t.getUniforms().setValue(u,"morphTargetInfluences",p)}}}function vi(t,r,s,a){let o=new WeakMap;function l(t){const e=t.target;e.removeEventListener("dispose",l),s.remove(e.instanceMatrix),null!==e.instanceColor&&s.remove(e.instanceColor)}return{update:function(t){const e=a.render.frame,n=t.geometry,i=r.get(t,n);return o.get(i)!==e&&(r.update(i),o.set(i,e)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",l)&&t.addEventListener("dispose",l),s.update(t.instanceMatrix,34962),null!==t.instanceColor&&s.update(t.instanceColor,34962)),i},dispose:function(){o=new WeakMap}}}ii.physical={uniforms:Hn([ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Pt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new je(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ei.meshphysical_vert,fragmentShader:ei.meshphysical_frag};class yi extends at{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=k,this.minFilter=k,this.wrapR=U,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}yi.prototype.isDataTexture2DArray=!0;class xi extends at{constructor(t=null,e=1,n=1,i=1){super(null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=k,this.minFilter=k,this.wrapR=U,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}xi.prototype.isDataTexture3D=!0;const _i=new at,bi=new yi,wi=new xi,Mi=new qn,Si=[],Ti=[],Ei=new Float32Array(16),Ai=new Float32Array(9),Li=new Float32Array(4);function Ri(n,i,r){const t=n[0];if(t<=0||t>0)return n;const e=i*r;let s=Si[e];if(void 0===s&&(s=new Float32Array(e),Si[e]=s),0!==i){t.toArray(s,0);for(let t=1,e=0;t!==i;++t)e+=r,n[t].toArray(s,e)}return s}function Ci(n,i){if(n.length!==i.length)return!1;for(let t=0,e=n.length;t<e;t++)if(n[t]!==i[t])return!1;return!0}function Pi(n,i){for(let t=0,e=i.length;t<e;t++)n[t]=i[t]}function Di(e,n){let i=Ti[n];void 0===i&&(i=new Int32Array(n),Ti[n]=i);for(let t=0;t!==n;++t)i[t]=e.allocateTextureUnit();return i}function Ii(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Ni(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ci(n,e))return;t.uniform2fv(this.addr,e),Pi(n,e)}}function Bi(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ci(n,e))return;t.uniform3fv(this.addr,e),Pi(n,e)}}function Oi(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ci(n,e))return;t.uniform4fv(this.addr,e),Pi(n,e)}}function zi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ci(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Pi(n,e)}else{if(Ci(n,i))return;Li.set(i),t.uniformMatrix2fv(this.addr,!1,Li),Pi(n,i)}}function Fi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ci(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Pi(n,e)}else{if(Ci(n,i))return;Ai.set(i),t.uniformMatrix3fv(this.addr,!1,Ai),Pi(n,i)}}function Hi(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ci(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Pi(n,e)}else{if(Ci(n,i))return;Ei.set(i),t.uniformMatrix4fv(this.addr,!1,Ei),Pi(n,i)}}function Ui(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Gi(t,e){const n=this.cache;Ci(n,e)||(t.uniform2iv(this.addr,e),Pi(n,e))}function ki(t,e){const n=this.cache;Ci(n,e)||(t.uniform3iv(this.addr,e),Pi(n,e))}function Vi(t,e){const n=this.cache;Ci(n,e)||(t.uniform4iv(this.addr,e),Pi(n,e))}function Wi(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function ji(t,e){const n=this.cache;Ci(n,e)||(t.uniform2uiv(this.addr,e),Pi(n,e))}function qi(t,e){const n=this.cache;Ci(n,e)||(t.uniform3uiv(this.addr,e),Pi(n,e))}function Xi(t,e){const n=this.cache;Ci(n,e)||(t.uniform4uiv(this.addr,e),Pi(n,e))}function Yi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||_i,r)}function Zi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||wi,r)}function Ji(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Mi,r)}function Qi(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||bi,r)}function Ki(t,e){t.uniform1fv(this.addr,e)}function $i(t,e){const n=Ri(e,this.size,2);t.uniform2fv(this.addr,n)}function tr(t,e){const n=Ri(e,this.size,3);t.uniform3fv(this.addr,n)}function er(t,e){const n=Ri(e,this.size,4);t.uniform4fv(this.addr,n)}function nr(t,e){const n=Ri(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function ir(t,e){const n=Ri(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function rr(t,e){const n=Ri(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function sr(t,e){t.uniform1iv(this.addr,e)}function ar(t,e){t.uniform2iv(this.addr,e)}function or(t,e){t.uniform3iv(this.addr,e)}function lr(t,e){t.uniform4iv(this.addr,e)}function cr(t,e){t.uniform1uiv(this.addr,e)}function hr(t,e){t.uniform2uiv(this.addr,e)}function ur(t,e){t.uniform3uiv(this.addr,e)}function dr(t,e){t.uniform4uiv(this.addr,e)}function pr(t,e,n){const i=e.length,r=Di(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||_i,r[t])}function fr(t,e,n){const i=e.length,r=Di(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||Mi,r[t])}function mr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Ii;case 35664:return Ni;case 35665:return Bi;case 35666:return Oi;case 35674:return zi;case 35675:return Fi;case 35676:return Hi;case 5124:case 35670:return Ui;case 35667:case 35671:return Gi;case 35668:case 35672:return ki;case 35669:case 35673:return Vi;case 5125:return Wi;case 36294:return ji;case 36295:return qi;case 36296:return Xi;case 35678:case 36198:case 36298:case 36306:case 35682:return Yi;case 35679:case 36299:case 36307:return Zi;case 35680:case 36300:case 36308:case 36293:return Ji;case 36289:case 36303:case 36311:case 36292:return Qi}}(e.type)}function gr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ki;case 35664:return $i;case 35665:return tr;case 35666:return er;case 35674:return nr;case 35675:return ir;case 35676:return rr;case 5124:case 35670:return sr;case 35667:case 35671:return ar;case 35668:case 35672:return or;case 35669:case 35673:return lr;case 5125:return cr;case 36294:return hr;case 36295:return ur;case 36296:return dr;case 35678:case 36198:case 36298:case 36306:case 35682:return pr;case 35680:case 36300:case 36308:case 36293:return fr}}(e.type)}function vr(t){this.id=t,this.seq=[],this.map={}}gr.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Pi(e,t)},vr.prototype.setValue=function(n,i,r){const s=this.seq;for(let e=0,t=s.length;e!==t;++e){const t=s[e];t.setValue(n,i[t.id],r)}};const yr=/(\w+)(\])?(\[|\.)?/g;function xr(t,e){t.seq.push(e),t.map[e.id]=e}function _r(s,a,o){const l=s.name,c=l.length;for(yr.lastIndex=0;;){const t=yr.exec(l),e=yr.lastIndex;let n=t[1];const i="]"===t[2],r=t[3];if(i&&(n|=0),void 0===r||"["===r&&e+2===c){xr(o,void 0===r?new mr(n,s,a):new gr(n,s,a));break}{let t=o.map[n];void 0===t&&(t=new vr(n),xr(o,t)),o=t}}}function br(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,35718);for(let t=0;t<i;++t){const i=e.getActiveUniform(n,t);_r(i,e.getUniformLocation(n,i.name),this)}}function wr(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}br.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},br.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},br.upload=function(i,r,s,a){for(let n=0,t=r.length;n!==t;++n){const t=r[n],e=s[t.id];!1!==e.needsUpdate&&t.setValue(i,e.value,a)}},br.seqWithValue=function(n,i){const r=[];for(let e=0,t=n.length;e!==t;++e){const t=n[e];t.id in i&&r.push(t)}return r};let Mr=0;function Sr(t){switch(t){case Rt:return["Linear","( value )"];case M:return["sRGB","( value )"];case R:return["RGBE","( value )"];case C:return["RGBM","( value, 7.0 )"];case P:return["RGBM","( value, 16.0 )"];case D:return["RGBD","( value, 256.0 )"];case L:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Tr(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function Er(t,e){const n=Sr(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ar(t,e){const n=Sr(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Lr(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Rr(t){return""!==t}function Cr(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Pr(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Dr=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ir(t){return t.replace(Dr,Nr)}function Nr(t,e){const n=ei[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Ir(n)}const Br=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Or=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function zr(t){return t.replace(Or,Hr).replace(Br,Fr)}function Fr(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Hr(t,e,n,i)}function Hr(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Ur(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Gr(n,i,r,t){const s=n.getContext(),e=r.defines;let a=r.vertexShader,o=r.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(r),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case S:case T:e="ENVMAP_TYPE_CUBE";break;case E:case A:e="ENVMAP_TYPE_CUBE_UV"}return e}(r),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case T:case A:e="ENVMAP_MODE_REFRACTION"}return e}(r),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(r),d=n.gammaFactor>0?n.gammaFactor:1,p=r.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Rr).join("\n")}(r),f=function(n){const i=[];for(const e in n){const t=n[e];!1!==t&&i.push("#define "+e+" "+t)}return i.join("\n")}(e),m=s.createProgram();let g,v,y=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(g=[f].filter(Rr).join("\n"),g.length>0&&(g+="\n"),v=[p,f].filter(Rr).join("\n"),v.length>0&&(v+="\n")):(g=[Ur(r),"#define SHADER_NAME "+r.shaderName,f,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+h:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Rr).join("\n"),v=[p,Ur(r),"#define SHADER_NAME "+r.shaderName,f,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.envMap?"#define "+h:"",r.envMap?"#define "+u:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?ei.tonemapping_pars_fragment:"",0!==r.toneMapping?Lr("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",ei.encodings_pars_fragment,r.map?Er("mapTexelToLinear",r.mapEncoding):"",r.matcap?Er("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?Er("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?Er("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?Er("lightMapTexelToLinear",r.lightMapEncoding):"",Ar("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Rr).join("\n")),a=Ir(a),a=Cr(a,r),a=Pr(a,r),o=Ir(o),o=Cr(o,r),o=Pr(o,r),a=zr(a),o=zr(o),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",r.glslVersion===O?"":"out highp vec4 pc_fragColor;",r.glslVersion===O?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+o,_=wr(s,35633,y+g+a),b=wr(s,35632,x);if(s.attachShader(m,_),s.attachShader(m,b),void 0!==r.index0AttributeName?s.bindAttribLocation(m,0,r.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation(m,0,"position"),s.linkProgram(m),n.debug.checkShaderErrors){const n=s.getProgramInfoLog(m).trim(),i=s.getShaderInfoLog(_).trim(),r=s.getShaderInfoLog(b).trim();let t=!0,e=!0;if(!1===s.getProgramParameter(m,35714)){t=!1;const i=Tr(s,_,"vertex"),r=Tr(s,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(m,35715),"gl.getProgramInfoLog",n,i,r)}else""!==n?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",n):""!==i&&""!==r||(e=!1);e&&(this.diagnostics={runnable:t,programLog:n,vertexShader:{log:i,prefix:g},fragmentShader:{log:r,prefix:v}})}let w,M;return s.deleteShader(_),s.deleteShader(b),this.getUniforms=function(){return void 0===w&&(w=new br(s,m)),w},this.getAttributes=function(){return void 0===M&&(M=function(e,n){const i={},r=e.getProgramParameter(n,35721);for(let t=0;t<r;t++){const r=e.getActiveAttrib(n,t).name;i[r]=e.getAttribLocation(n,r)}return i}(s,m)),M},this.destroy=function(){t.releaseStatesOfProgram(this),s.deleteProgram(m),this.program=void 0},this.name=r.shaderName,this.id=Mr++,this.cacheKey=i,this.usedTimes=1,this.program=m,this.vertexShader=_,this.fragmentShader=b,this}function kr(p,f,m,g,t,v){const s=[],y=g.isWebGL2,x=g.logarithmicDepthBuffer,_=g.floatVertexTextures,b=g.maxVertexUniforms,w=g.vertexTextures;let M=g.precision;const S={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},i=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function T(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Rt,e}return{getParameters:function(t,e,n,i,r){const s=i.fog,a=t.isMeshStandardMaterial?i.environment:null,o=f.get(t.envMap||a),l=S[t.type],c=r.isSkinnedMesh?function(n){const i=n.skeleton.bones;if(_)return 1024;{const n=b,t=Math.floor((n-20)/4),e=Math.min(t,i.length);return e<i.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+i.length+" bones. This GPU supports "+e+"."),0):e}}(r):0;let h,u;if(null!==t.precision&&(M=g.getMaxPrecision(t.precision),M!==t.precision&&console.warn("THREE.WebGLProgram.getParameters:",t.precision,"not supported, using",M,"instead.")),l){const p=ii[l];h=p.vertexShader,u=p.fragmentShader}else h=t.vertexShader,u=t.fragmentShader;const d=p.getRenderTarget();return{isWebGL2:y,shaderID:l,shaderName:t.type,vertexShader:h,fragmentShader:u,defines:t.defines,isRawShaderMaterial:!0===t.isRawShaderMaterial,glslVersion:t.glslVersion,precision:M,instancing:!0===r.isInstancedMesh,instancingColor:!0===r.isInstancedMesh&&null!==r.instanceColor,supportsVertexTextures:w,outputEncoding:null!==d?T(d.texture):p.outputEncoding,map:!!t.map,mapEncoding:T(t.map),matcap:!!t.matcap,matcapEncoding:T(t.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:T(o),envMapCubeUV:!!o&&(o.mapping===E||o.mapping===A),lightMap:!!t.lightMap,lightMapEncoding:T(t.lightMap),aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:T(t.emissiveMap),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,objectSpaceNormalMap:1===t.normalMapType,tangentSpaceNormalMap:0===t.normalMapType,clearcoatMap:!!t.clearcoatMap,clearcoatRoughnessMap:!!t.clearcoatRoughnessMap,clearcoatNormalMap:!!t.clearcoatNormalMap,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,sheen:!!t.sheen,transmissionMap:!!t.transmissionMap,combine:t.combine,vertexTangents:t.normalMap&&t.vertexTangents,vertexColors:t.vertexColors,vertexAlphas:!0===t.vertexColors&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,vertexUvs:!!(t.map||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t.emissiveMap||t.roughnessMap||t.metalnessMap||t.clearcoatMap||t.clearcoatRoughnessMap||t.clearcoatNormalMap||t.displacementMap||t.transmissionMap),uvsVertexOnly:!(t.map||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t.emissiveMap||t.roughnessMap||t.metalnessMap||t.clearcoatNormalMap||t.transmissionMap||!t.displacementMap),fog:!!s,useFog:t.fog,fogExp2:s&&s.isFogExp2,flatShading:!!t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:x,skinning:t.skinning&&c>0,maxBones:c,useVertexTexture:_,morphTargets:t.morphTargets,morphNormals:t.morphNormals,numDirLights:e.directional.length,numPointLights:e.point.length,numSpotLights:e.spot.length,numRectAreaLights:e.rectArea.length,numHemiLights:e.hemi.length,numDirLightShadows:e.directionalShadowMap.length,numPointLightShadows:e.pointShadowMap.length,numSpotLightShadows:e.spotShadowMap.length,numClippingPlanes:v.numPlanes,numClipIntersection:v.numIntersection,dithering:t.dithering,shadowMapEnabled:p.shadowMap.enabled&&n.length>0,shadowMapType:p.shadowMap.type,toneMapping:t.toneMapped?p.toneMapping:0,physicallyCorrectLights:p.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:2===t.side,flipSided:1===t.side,depthPacking:void 0!==t.depthPacking&&t.depthPacking,index0AttributeName:t.index0AttributeName,extensionDerivatives:t.extensions&&t.extensions.derivatives,extensionFragDepth:t.extensions&&t.extensions.fragDepth,extensionDrawBuffers:t.extensions&&t.extensions.drawBuffers,extensionShaderTextureLOD:t.extensions&&t.extensions.shaderTextureLOD,rendererExtensionFragDepth:y||m.has("EXT_frag_depth"),rendererExtensionDrawBuffers:y||m.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:y||m.has("EXT_shader_texture_lod"),customProgramCacheKey:t.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const p in e.defines)n.push(p),n.push(e.defines[p]);if(!1===e.isRawShaderMaterial){for(let t=0;t<i.length;t++)n.push(e[i[t]]);n.push(p.outputEncoding),n.push(p.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=S[t.type];let n;if(e){const t=ii[e];n=Un.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(n,i){let r;for(let t=0,e=s.length;t<e;t++){const n=s[t];if(n.cacheKey===i){r=n,++r.usedTimes;break}}return void 0===r&&(r=new Gr(p,i,n,t),s.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},programs:s}}function Vr(){let i=new WeakMap;return{get:function(t){let e=i.get(t);return void 0===e&&(e={},i.set(t,e)),e},remove:function(t){i.delete(t)},update:function(t,e,n){i.get(t)[e]=n},dispose:function(){i=new WeakMap}}}function Wr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function jr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function qr(l){const c=[];let h=0;const o=[],u=[],d={id:-1};function p(t,e,n,i,r,s){let a=c[h];const o=l.get(n);return void 0===a?(a={id:t.id,object:t,geometry:e,material:n,program:o.program||d,groupOrder:i,renderOrder:t.renderOrder,z:r,group:s},c[h]=a):(a.id=t.id,a.object=t,a.geometry=e,a.material=n,a.program=o.program||d,a.groupOrder=i,a.renderOrder=t.renderOrder,a.z=r,a.group=s),h++,a}return{opaque:o,transparent:u,init:function(){h=0,o.length=0,u.length=0},push:function(t,e,n,i,r,s){const a=p(t,e,n,i,r,s);(!0===n.transparent?u:o).push(a)},unshift:function(t,e,n,i,r,s){const a=p(t,e,n,i,r,s);(!0===n.transparent?u:o).unshift(a)},finish:function(){for(let t=h,e=c.length;t<e;t++){const h=c[t];if(null===h.id)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.program=null,h.group=null}},sort:function(t,e){o.length>1&&o.sort(t||Wr),u.length>1&&u.sort(e||jr)}}}function Xr(i){let r=new WeakMap;return{get:function(t,e){let n;return!1===r.has(t)?(n=new qr(i),r.set(t,[n])):e>=r.get(t).length?(n=new qr(i),r.get(t).push(n)):n=r.get(t)[e],n},dispose:function(){r=new WeakMap}}}function Yr(){const n={};return{get:function(t){if(void 0!==n[t.id])return n[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new It,color:new je};break;case"SpotLight":e={position:new It,direction:new It,color:new je,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new It,color:new je,distance:0,decay:0};break;case"HemisphereLight":e={direction:new It,skyColor:new je,groundColor:new je};break;case"RectAreaLight":e={color:new je,position:new It,halfWidth:new It,halfHeight:new It}}return n[t.id]=e,e}}}let Zr=0;function Jr(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Qr(v,y){const x=new Yr,_=function(){const n={};return{get:function(t){if(void 0!==n[t.id])return n[t.id];let e;switch(t.type){case"DirectionalLight":case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt,shadowCameraNear:1,shadowCameraFar:1e3}}return n[t.id]=e,e}}}(),b={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)b.probe.push(new It);const c=new It,h=new Jt,u=new Jt;return{setup:function(r){let s=0,a=0,o=0;for(let t=0;t<9;t++)b.probe[t].set(0,0,0);let l=0,c=0,h=0,u=0,d=0,p=0,f=0,m=0;r.sort(Jr);for(let i=0,t=r.length;i<t;i++){const y=r[i],g=y.color,e=y.intensity,t=y.distance,n=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)s+=g.r*e,a+=g.g*e,o+=g.b*e;else if(y.isLightProbe)for(let t=0;t<9;t++)b.probe[t].addScaledVector(y.sh.coefficients[t],e);else if(y.isDirectionalLight){const v=x.get(y);if(v.color.copy(y.color).multiplyScalar(y.intensity),y.castShadow){const v=y.shadow,x=_.get(y);x.shadowBias=v.bias,x.shadowNormalBias=v.normalBias,x.shadowRadius=v.radius,x.shadowMapSize=v.mapSize,b.directionalShadow[l]=x,b.directionalShadowMap[l]=n,b.directionalShadowMatrix[l]=y.shadow.matrix,p++}b.directional[l]=v,l++}else if(y.isSpotLight){const v=x.get(y);if(v.position.setFromMatrixPosition(y.matrixWorld),v.color.copy(g).multiplyScalar(e),v.distance=t,v.coneCos=Math.cos(y.angle),v.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),v.decay=y.decay,y.castShadow){const v=y.shadow,x=_.get(y);x.shadowBias=v.bias,x.shadowNormalBias=v.normalBias,x.shadowRadius=v.radius,x.shadowMapSize=v.mapSize,b.spotShadow[h]=x,b.spotShadowMap[h]=n,b.spotShadowMatrix[h]=y.shadow.matrix,m++}b.spot[h]=v,h++}else if(y.isRectAreaLight){const v=x.get(y);v.color.copy(g).multiplyScalar(e),v.halfWidth.set(.5*y.width,0,0),v.halfHeight.set(0,.5*y.height,0),b.rectArea[u]=v,u++}else if(y.isPointLight){const v=x.get(y);if(v.color.copy(y.color).multiplyScalar(y.intensity),v.distance=y.distance,v.decay=y.decay,y.castShadow){const v=y.shadow,x=_.get(y);x.shadowBias=v.bias,x.shadowNormalBias=v.normalBias,x.shadowRadius=v.radius,x.shadowMapSize=v.mapSize,x.shadowCameraNear=v.camera.near,x.shadowCameraFar=v.camera.far,b.pointShadow[c]=x,b.pointShadowMap[c]=n,b.pointShadowMatrix[c]=y.shadow.matrix,f++}b.point[c]=v,c++}else if(y.isHemisphereLight){const v=x.get(y);v.skyColor.copy(y.color).multiplyScalar(e),v.groundColor.copy(y.groundColor).multiplyScalar(e),b.hemi[d]=v,d++}}u>0&&(y.isWebGL2||!0===v.has("OES_texture_float_linear")?(b.rectAreaLTC1=ni.LTC_FLOAT_1,b.rectAreaLTC2=ni.LTC_FLOAT_2):!0===v.has("OES_texture_half_float_linear")?(b.rectAreaLTC1=ni.LTC_HALF_1,b.rectAreaLTC2=ni.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),b.ambient[0]=s,b.ambient[1]=a,b.ambient[2]=o;const g=b.hash;g.directionalLength===l&&g.pointLength===c&&g.spotLength===h&&g.rectAreaLength===u&&g.hemiLength===d&&g.numDirectionalShadows===p&&g.numPointShadows===f&&g.numSpotShadows===m||(b.directional.length=l,b.spot.length=h,b.rectArea.length=u,b.point.length=c,b.hemi.length=d,b.directionalShadow.length=p,b.directionalShadowMap.length=p,b.pointShadow.length=f,b.pointShadowMap.length=f,b.spotShadow.length=m,b.spotShadowMap.length=m,b.directionalShadowMatrix.length=p,b.pointShadowMatrix.length=f,b.spotShadowMatrix.length=m,g.directionalLength=l,g.pointLength=c,g.spotLength=h,g.rectAreaLength=u,g.hemiLength=d,g.numDirectionalShadows=p,g.numPointShadows=f,g.numSpotShadows=m,b.version=Zr++)},setupView:function(n,t){let i=0,r=0,s=0,a=0,o=0;const l=t.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){const t=n[e];if(t.isDirectionalLight){const n=b.directional[i];n.direction.setFromMatrixPosition(t.matrixWorld),c.setFromMatrixPosition(t.target.matrixWorld),n.direction.sub(c),n.direction.transformDirection(l),i++}else if(t.isSpotLight){const n=b.spot[s];n.position.setFromMatrixPosition(t.matrixWorld),n.position.applyMatrix4(l),n.direction.setFromMatrixPosition(t.matrixWorld),c.setFromMatrixPosition(t.target.matrixWorld),n.direction.sub(c),n.direction.transformDirection(l),s++}else if(t.isRectAreaLight){const n=b.rectArea[a];n.position.setFromMatrixPosition(t.matrixWorld),n.position.applyMatrix4(l),u.identity(),h.copy(t.matrixWorld),h.premultiply(l),u.extractRotation(h),n.halfWidth.set(.5*t.width,0,0),n.halfHeight.set(0,.5*t.height,0),n.halfWidth.applyMatrix4(u),n.halfHeight.applyMatrix4(u),a++}else if(t.isPointLight){const n=b.point[r];n.position.setFromMatrixPosition(t.matrixWorld),n.position.applyMatrix4(l),r++}else if(t.isHemisphereLight){const n=b.hemi[o];n.direction.setFromMatrixPosition(t.matrixWorld),n.direction.transformDirection(l),n.direction.normalize(),o++}}},state:b}}function Kr(t,e){const n=new Qr(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function $r(i,r){let s=new WeakMap;return{get:function(t,e=0){let n;return!1===s.has(t)?(n=new Kr(i,r),s.set(t,[n])):e>=s.get(t).length?(n=new Kr(i,r),s.get(t).push(n)):n=s.get(t)[e],n},dispose:function(){s=new WeakMap}}}class ts extends Fe{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}ts.prototype.isMeshDepthMaterial=!0;class es extends Fe{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new It,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}es.prototype.isMeshDistanceMaterial=!0;function ns(h,l,t){let c=new Qn;const u=new Pt,d=new Pt,p=new Dt,s=[],a=[],f={},m=t.maxTextureSize,g={0:1,1:0,2:2},i=new Gn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Pt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),r=i.clone();r.defines.HORIZONTAL_PASS=1;const e=new vn;e.setAttribute("position",new Ze(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const o=new Bn(e,i),n=this;function v(t,e){const n=l.update(o);i.uniforms.shadow_pass.value=t.map.texture,i.uniforms.resolution.value=t.mapSize,i.uniforms.radius.value=t.radius,h.setRenderTarget(t.mapPass),h.clear(),h.renderBufferDirect(e,null,n,i,o,null),r.uniforms.shadow_pass.value=t.mapPass.texture,r.uniforms.resolution.value=t.mapSize,r.uniforms.radius.value=t.radius,h.setRenderTarget(t.map),h.clear(),h.renderBufferDirect(e,null,n,r,o,null)}function y(t,e,n){const i=t<<0|e<<1|n<<2;let r=s[i];return void 0===r&&(r=new ts({depthPacking:3201,morphTargets:t,skinning:e}),s[i]=r),r}function x(t,e,n){const i=t<<0|e<<1|n<<2;let r=a[i];return void 0===r&&(r=new es({morphTargets:t,skinning:e}),a[i]=r),r}function _(n,i,r,t,e,s,a){let o=null,l=y,c=n.customDepthMaterial;if(!0===t.isPointLight&&(l=x,c=n.customDistanceMaterial),void 0===c){let t=!1;!0===r.morphTargets&&(t=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0);let e=!1;!0===n.isSkinnedMesh&&(!0===r.skinning?e=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",n));o=l(t,e,!0===n.isInstancedMesh)}else o=c;if(h.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const h=o.uuid,n=r.uuid;let t=f[h];void 0===t&&(t={},f[h]=t);let e=t[n];void 0===e&&(e=o.clone(),t[n]=e),o=e}return o.visible=r.visible,o.wireframe=r.wireframe,o.side=3===a?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:g[r.side],o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.clipIntersection=r.clipIntersection,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,!0===t.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(t.matrixWorld),o.nearDistance=e,o.farDistance=s),o}function b(i,r,s,a,o){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||c.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const c=l.update(i),r=i.material;if(Array.isArray(r)){const l=c.groups;for(let n=0,t=l.length;n<t;n++){const t=l[n],e=r[t.materialIndex];if(e&&e.visible){const l=_(i,c,e,a,s.near,s.far,o);h.renderBufferDirect(s,null,c,l,i,t)}}}else if(r.visible){const l=_(i,c,r,a,s.near,s.far,o);h.renderBufferDirect(s,null,c,l,i,null)}}const n=i.children;for(let t=0,e=n.length;t<e;t++)b(n[t],r,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(i,r,s){if(!1===n.enabled)return;if(!1===n.autoUpdate&&!1===n.needsUpdate)return;if(0===i.length)return;const t=h.getRenderTarget(),a=h.getActiveCubeFace(),o=h.getActiveMipmapLevel(),l=h.state;l.setBlending(0),l.buffers.color.setClear(1,1,1,1),l.buffers.depth.setTest(!0),l.setScissorTest(!1);for(let n=0,t=i.length;n<t;n++){const a=i[n],o=a.shadow;if(void 0===o){console.warn("THREE.WebGLShadowMap:",a,"has no shadow.");continue}if(!1===o.autoUpdate&&!1===o.needsUpdate)continue;u.copy(o.mapSize);const t=o.getFrameExtents();if(u.multiply(t),d.copy(o.mapSize),(u.x>m||u.y>m)&&(u.x>m&&(d.x=Math.floor(m/t.x),u.x=d.x*t.x,o.mapSize.x=d.x),u.y>m&&(d.y=Math.floor(m/t.y),u.y=d.y*t.y,o.mapSize.y=d.y)),null===o.map&&!o.isPointLightShadow&&3===this.type){const h={minFilter:q,magFilter:q,format:Lt};o.map=new lt(u.x,u.y,h),o.map.texture.name=a.name+".shadowMap",o.mapPass=new lt(u.x,u.y,h),o.camera.updateProjectionMatrix()}if(null===o.map){const h={minFilter:k,magFilter:k,format:Lt};o.map=new lt(u.x,u.y,h),o.map.texture.name=a.name+".shadowMap",o.camera.updateProjectionMatrix()}h.setRenderTarget(o.map),h.clear();const e=o.getViewportCount();for(let t=0;t<e;t++){const i=o.getViewport(t);p.set(d.x*i.x,d.y*i.y,d.x*i.z,d.y*i.w),l.viewport(p),o.updateMatrices(a,t),c=o.getFrustum(),b(r,s,o.camera,a,this.type)}o.isPointLightShadow||3!==this.type||v(o,s),o.needsUpdate=!1}n.needsUpdate=!1,h.setRenderTarget(t,a,o)}}function is(h,t,e){const n=e.isWebGL2;const r=new function(){let e=!1;const s=new Dt;let n=null;const a=new Dt(0,0,0,0);return{setMask:function(t){n===t||e||(h.colorMask(t,t,t,t),n=t)},setLocked:function(t){e=t},setClear:function(t,e,n,i,r){!0===r&&(t*=i,e*=i,n*=i),s.set(t,e,n,i),!1===a.equals(s)&&(h.clearColor(t,e,n,i),a.copy(s))},reset:function(){e=!1,n=null,a.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(t){t?B(2929):O(2929)},setMask:function(t){n===t||e||(h.depthMask(t),n=t)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:h.depthFunc(512);break;case 1:h.depthFunc(519);break;case 2:h.depthFunc(513);break;case 3:h.depthFunc(515);break;case 4:h.depthFunc(514);break;case 5:h.depthFunc(518);break;case 6:h.depthFunc(516);break;case 7:h.depthFunc(517);break;default:h.depthFunc(515)}else h.depthFunc(515);i=t}},setLocked:function(t){e=t},setClear:function(t){r!==t&&(h.clearDepth(t),r=t)},reset:function(){e=!1,n=null,i=null,r=null}}},a=new function(){let e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?B(2960):O(2960))},setMask:function(t){n===t||e||(h.stencilMask(t),n=t)},setFunc:function(t,e,n){i===t&&r===e&&s===n||(h.stencilFunc(t,e,n),i=t,r=e,s=n)},setOp:function(t,e,n){a===t&&o===e&&l===n||(h.stencilOp(t,e,n),a=t,o=e,l=n)},setLocked:function(t){e=t},setClear:function(t){c!==t&&(h.clearStencil(t),c=t)},reset:function(){e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null}}};let i={},o=null,l={},c=null,u=!1,d=null,p=null,f=null,m=null,g=null,v=null,y=null,x=!1,_=null,b=null,w=null,M=null,S=null;const T=h.getParameter(35661);let E=!1,A=0;const L=h.getParameter(7938);-1!==L.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(L)[1]),E=A>=1):-1!==L.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),E=A>=2);let R=null,C={};const P=new Dt(0,0,h.canvas.width,h.canvas.height),D=new Dt(0,0,h.canvas.width,h.canvas.height);function I(t,e,n){const i=new Uint8Array(4),r=h.createTexture();h.bindTexture(t,r),h.texParameteri(t,10241,9728),h.texParameteri(t,10240,9728);for(let t=0;t<n;t++)h.texImage2D(e+t,0,6408,1,1,0,6408,5121,i);return r}const N={};function B(t){!0!==i[t]&&(h.enable(t),i[t]=!0)}function O(t){!1!==i[t]&&(h.disable(t),i[t]=!1)}N[3553]=I(3553,3553,1),N[34067]=I(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),a.setClear(0),B(2929),s.setFunc(3),U(!1),G(1),B(2884),H(0);const z={[W]:32774,101:32778,102:32779};if(n)z[103]=32775,z[104]=32776;else{const h=t.get("EXT_blend_minmax");null!==h&&(z[103]=h.MIN_EXT,z[104]=h.MAX_EXT)}const F={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function H(t,e,n,i,r,s,a,o){if(0!==t){if(!1===u&&(B(3042),u=!0),5===t)r=r||e,s=s||n,a=a||i,e===p&&r===g||(h.blendEquationSeparate(z[e],z[r]),p=e,g=r),n===f&&i===m&&s===v&&a===y||(h.blendFuncSeparate(F[n],F[i],F[s],F[a]),f=n,m=i,v=s,y=a),d=t,x=null;else if(t!==d||o!==x){if(p===W&&g===W||(h.blendEquation(32774),p=W,g=W),o)switch(t){case 1:h.blendFuncSeparate(1,771,1,771);break;case 2:h.blendFunc(1,1);break;case 3:h.blendFuncSeparate(0,0,769,771);break;case 4:h.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:h.blendFuncSeparate(770,771,1,771);break;case 2:h.blendFunc(770,1);break;case 3:h.blendFunc(0,769);break;case 4:h.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,m=null,v=null,y=null,d=t,x=o}}else!0===u&&(O(3042),u=!1)}function U(t){_!==t&&(t?h.frontFace(2304):h.frontFace(2305),_=t)}function G(t){0!==t?(B(2884),t!==b&&(1===t?h.cullFace(1029):2===t?h.cullFace(1028):h.cullFace(1032))):O(2884),b=t}function k(t,e,n){t?(B(32823),M===e&&S===n||(h.polygonOffset(e,n),M=e,S=n)):O(32823)}function V(t){void 0===t&&(t=33984+T-1),R!==t&&(h.activeTexture(t),R=t)}return{buffers:{color:r,depth:s,stencil:a},enable:B,disable:O,bindFramebuffer:function(t,e){null===e&&null!==o&&(e=o),l[t]!==e&&(h.bindFramebuffer(t,e),l[t]=e,n&&(36009===t&&(l[36160]=e),36160===t&&(l[36009]=e)))},bindXRFramebuffer:function(t){t!==o&&(h.bindFramebuffer(36160,t),o=t)},useProgram:function(t){return c!==t&&(h.useProgram(t),c=t,!0)},setBlending:H,setMaterial:function(t,e){2===t.side?O(2884):B(2884);let n=1===t.side;e&&(n=!n),U(n),1===t.blending&&!1===t.transparent?H(0):H(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;a.setTest(i),i&&(a.setMask(t.stencilWriteMask),a.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),a.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),k(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?B(32926):O(32926)},setFlipSided:U,setCullFace:G,setLineWidth:function(t){t!==w&&(E&&h.lineWidth(t),w=t)},setPolygonOffset:k,setScissorTest:function(t){t?B(3089):O(3089)},activeTexture:V,bindTexture:function(t,e){null===R&&V();let n=C[R];void 0===n&&(n={type:void 0,texture:void 0},C[R]=n),n.type===t&&n.texture===e||(h.bindTexture(t,e||N[t]),n.type=t,n.texture=e)},unbindTexture:function(){const t=C[R];void 0!==t&&void 0!==t.type&&(h.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===P.equals(t)&&(h.scissor(t.x,t.y,t.z,t.w),P.copy(t))},viewport:function(t){!1===D.equals(t)&&(h.viewport(t.x,t.y,t.z,t.w),D.copy(t))},reset:function(){h.disable(3042),h.disable(2884),h.disable(2929),h.disable(32823),h.disable(3089),h.disable(2960),h.disable(32926),h.blendEquation(32774),h.blendFunc(1,0),h.blendFuncSeparate(1,0,1,0),h.colorMask(!0,!0,!0,!0),h.clearColor(0,0,0,0),h.depthMask(!0),h.depthFunc(513),h.clearDepth(1),h.stencilMask(4294967295),h.stencilFunc(519,0,4294967295),h.stencilOp(7680,7680,7680),h.clearStencil(0),h.cullFace(1029),h.frontFace(2305),h.polygonOffset(0,0),h.activeTexture(33984),h.bindFramebuffer(36160,null),!0===n&&(h.bindFramebuffer(36009,null),h.bindFramebuffer(36008,null)),h.useProgram(null),h.lineWidth(1),h.scissor(0,0,h.canvas.width,h.canvas.height),h.viewport(0,0,h.canvas.width,h.canvas.height),i={},R=null,C={},o=null,l={},c=null,u=!1,d=null,p=null,f=null,m=null,g=null,v=null,y=null,x=!1,_=null,b=null,w=null,M=null,S=null,P.set(0,0,h.canvas.width,h.canvas.height),D.set(0,0,h.canvas.width,h.canvas.height),r.reset(),s.reset(),a.reset()}}}function rs(d,r,p,l,i,f,c){const m=i.isWebGL2,e=i.maxTextures,g=i.maxCubemapSize,v=i.maxTextureSize,n=i.maxSamples,s=new WeakMap;let h,a=!1;try{a="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(d){}function u(t,e){return a?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(i,r,s,a){let o=1;if((i.width>a||i.height>a)&&(o=a/Math.max(i.width,i.height)),o<1||!0===r){if("undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&i instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&i instanceof ImageBitmap){const a=r?Ct.floorPowerOfTwo:Math.floor,t=a(o*i.width),e=a(o*i.height);void 0===h&&(h=u(t,e));const n=s?u(t,e):h;n.width=t,n.height=e;return n.getContext("2d").drawImage(i,0,0,t,e),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+i.width+"x"+i.height+") to ("+t+"x"+e+")."),n}return"data"in i&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+i.width+"x"+i.height+")."),i}return i}function x(t){return Ct.isPowerOfTwo(t.width)&&Ct.isPowerOfTwo(t.height)}function _(t,e){return t.generateMipmaps&&e&&t.minFilter!==k&&t.minFilter!==q}function b(t,e,n,i){d.generateMipmap(t);l.get(e).__maxMipLevel=Math.log2(Math.max(n,i))}function w(t,e,n){if(!1===m)return e;if(null!==t){if(void 0!==d[t])return d[t];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+t+"'")}let i=e;return 6403===e&&(5126===n&&(i=33326),5131===n&&(i=33325),5121===n&&(i=33321)),6407===e&&(5126===n&&(i=34837),5131===n&&(i=34843),5121===n&&(i=32849)),6408===e&&(5126===n&&(i=34836),5131===n&&(i=34842),5121===n&&(i=32856)),33325!==i&&33326!==i&&34842!==i&&34836!==i||r.get("EXT_color_buffer_float"),i}function o(t){return t===k||t===V||t===j?9728:9729}function M(t){const e=t.target;e.removeEventListener("dispose",M),function(t){const e=l.get(t);if(void 0===e.__webglInit)return;d.deleteTexture(e.__webglTexture),l.remove(t)}(e),e.isVideoTexture&&s.delete(e),c.memory.textures--}function S(t){const e=t.target;e.removeEventListener("dispose",S),function(t){const e=t.texture,n=l.get(t),i=l.get(e);if(!t)return;void 0!==i.__webglTexture&&d.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)d.deleteFramebuffer(n.__webglFramebuffer[t]),n.__webglDepthbuffer&&d.deleteRenderbuffer(n.__webglDepthbuffer[t]);else d.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&d.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&d.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&d.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&d.deleteRenderbuffer(n.__webglDepthRenderbuffer);l.remove(e),l.remove(t)}(e),c.memory.textures--}let T=0;function E(t,e){const n=l.get(t);if(t.isVideoTexture&&function(t){const e=c.render.frame;s.get(t)!==e&&(s.set(t,e),t.update())}(t),t.version>0&&n.__version!==t.version){const p=t.image;if(void 0===p)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==p.complete)return void D(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}p.activeTexture(33984+e),p.bindTexture(3553,n.__webglTexture)}function A(t,e){const n=l.get(t);t.version>0&&n.__version!==t.version?function(t,n,i){if(6!==n.image.length)return;P(t,n),p.activeTexture(33984+i),p.bindTexture(34067,t.__webglTexture),d.pixelStorei(37440,n.flipY),d.pixelStorei(37441,n.premultiplyAlpha),d.pixelStorei(3317,n.unpackAlignment),d.pixelStorei(37443,0);const e=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),r=n.image[0]&&n.image[0].isDataTexture,s=[];for(let t=0;t<6;t++)s[t]=e||r?r?n.image[t].image:n.image[t]:y(n.image[t],!1,!0,g);const a=s[0],o=x(a)||m,l=f.convert(n.format),c=f.convert(n.type),h=w(n.internalFormat,l,c);let u;if(C(34067,n,o),e){for(let e=0;e<6;e++){u=s[e].mipmaps;for(let t=0;t<u.length;t++){const i=u[t];n.format!==Lt&&n.format!==K?null!==l?p.compressedTexImage2D(34069+e,t,h,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):p.texImage2D(34069+e,t,h,i.width,i.height,0,l,c,i.data)}}t.__maxMipLevel=u.length-1}else{u=n.mipmaps;for(let e=0;e<6;e++)if(r){p.texImage2D(34069+e,0,h,s[e].width,s[e].height,0,l,c,s[e].data);for(let t=0;t<u.length;t++){const n=u[t].image[e].image;p.texImage2D(34069+e,t+1,h,n.width,n.height,0,l,c,n.data)}}else{p.texImage2D(34069+e,0,h,l,c,s[e]);for(let t=0;t<u.length;t++){const n=u[t];p.texImage2D(34069+e,t+1,h,l,c,n.image[e])}}t.__maxMipLevel=u.length}_(n,o)&&b(34067,n,a.width,a.height);t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(n,t,e):(p.activeTexture(33984+e),p.bindTexture(34067,n.__webglTexture))}const L={[H]:10497,[U]:33071,[G]:33648},R={[k]:9728,[V]:9984,[j]:9986,[q]:9729,[X]:9985,[Y]:9987};function C(t,e,n){if(n?(d.texParameteri(t,10242,L[e.wrapS]),d.texParameteri(t,10243,L[e.wrapT]),32879!==t&&35866!==t||d.texParameteri(t,32882,L[e.wrapR]),d.texParameteri(t,10240,R[e.magFilter]),d.texParameteri(t,10241,R[e.minFilter])):(d.texParameteri(t,10242,33071),d.texParameteri(t,10243,33071),32879!==t&&35866!==t||d.texParameteri(t,32882,33071),e.wrapS===U&&e.wrapT===U||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),d.texParameteri(t,10240,o(e.magFilter)),d.texParameteri(t,10241,o(e.minFilter)),e.minFilter!==k&&e.minFilter!==q&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===r.has("EXT_texture_filter_anisotropic")){const n=r.get("EXT_texture_filter_anisotropic");if(e.type===Et&&!1===r.has("OES_texture_float_linear"))return;if(!1===m&&e.type===At&&!1===r.has("OES_texture_half_float_linear"))return;(e.anisotropy>1||l.get(e).__currentAnisotropy)&&(d.texParameterf(t,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,i.getMaxAnisotropy())),l.get(e).__currentAnisotropy=e.anisotropy)}}function P(t,e){void 0===t.__webglInit&&(t.__webglInit=!0,e.addEventListener("dispose",M),t.__webglTexture=d.createTexture(),c.memory.textures++)}function D(t,n,e){let i=3553;n.isDataTexture2DArray&&(i=35866),n.isDataTexture3D&&(i=32879),P(t,n),p.activeTexture(33984+e),p.bindTexture(i,t.__webglTexture),d.pixelStorei(37440,n.flipY),d.pixelStorei(37441,n.premultiplyAlpha),d.pixelStorei(3317,n.unpackAlignment),d.pixelStorei(37443,0);const r=function(t){return!m&&(t.wrapS!==U||t.wrapT!==U||t.minFilter!==k&&t.minFilter!==q)}(n)&&!1===x(n.image),s=y(n.image,r,!1,v),a=x(s)||m,o=f.convert(n.format);let l,c=f.convert(n.type),h=w(n.internalFormat,o,c);C(i,n,a);const u=n.mipmaps;if(n.isDepthTexture)h=6402,m?h=n.type===Et?36012:n.type===J?33190:n.type===Q?35056:33189:n.type===Et&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===$&&6402===h&&n.type!==Z&&n.type!==J&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Z,c=f.convert(n.type)),n.format===tt&&6402===h&&(h=34041,n.type!==Q&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Q,c=f.convert(n.type))),p.texImage2D(3553,0,h,s.width,s.height,0,o,c,null);else if(n.isDataTexture)if(u.length>0&&a){for(let t=0,e=u.length;t<e;t++)l=u[t],p.texImage2D(3553,t,h,l.width,l.height,0,o,c,l.data);n.generateMipmaps=!1,t.__maxMipLevel=u.length-1}else p.texImage2D(3553,0,h,s.width,s.height,0,o,c,s.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=u.length;t<e;t++)l=u[t],n.format!==Lt&&n.format!==K?null!==o?p.compressedTexImage2D(3553,t,h,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):p.texImage2D(3553,t,h,l.width,l.height,0,o,c,l.data);t.__maxMipLevel=u.length-1}else if(n.isDataTexture2DArray)p.texImage3D(35866,0,h,s.width,s.height,s.depth,0,o,c,s.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)p.texImage3D(32879,0,h,s.width,s.height,s.depth,0,o,c,s.data),t.__maxMipLevel=0;else if(u.length>0&&a){for(let t=0,e=u.length;t<e;t++)l=u[t],p.texImage2D(3553,t,h,o,c,l);n.generateMipmaps=!1,t.__maxMipLevel=u.length-1}else p.texImage2D(3553,0,h,o,c,s),t.__maxMipLevel=0;_(n,a)&&b(i,n,s.width,s.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function I(t,e,n,i){const r=e.texture,s=f.convert(r.format),a=f.convert(r.type),o=w(r.internalFormat,s,a);32879===i||35866===i?p.texImage3D(i,0,o,e.width,e.height,e.depth,0,s,a,null):p.texImage2D(i,0,o,e.width,e.height,0,s,a,null),p.bindFramebuffer(36160,t),d.framebufferTexture2D(36160,n,i,l.get(r).__webglTexture,0),p.bindFramebuffer(36160,null)}function N(i,r,s){if(d.bindRenderbuffer(36161,i),r.depthBuffer&&!r.stencilBuffer){let t=33189;if(s){const i=r.depthTexture;i&&i.isDepthTexture&&(i.type===Et?t=36012:i.type===J&&(t=33190));const s=O(r);d.renderbufferStorageMultisample(36161,s,t,r.width,r.height)}else d.renderbufferStorage(36161,t,r.width,r.height);d.framebufferRenderbuffer(36160,36096,36161,i)}else if(r.depthBuffer&&r.stencilBuffer){if(s){const i=O(r);d.renderbufferStorageMultisample(36161,i,35056,r.width,r.height)}else d.renderbufferStorage(36161,34041,r.width,r.height);d.framebufferRenderbuffer(36160,33306,36161,i)}else{const i=r.texture,t=f.convert(i.format),e=f.convert(i.type),n=w(i.internalFormat,t,e);if(s){const i=O(r);d.renderbufferStorageMultisample(36161,i,n,r.width,r.height)}else d.renderbufferStorage(36161,n,r.width,r.height)}d.bindRenderbuffer(36161,null)}function B(e){const n=l.get(e),t=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(t)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,e){if(e&&e.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(p.bindFramebuffer(36160,t),!e.depthTexture||!e.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");l.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),E(e.depthTexture,0);const n=l.get(e.depthTexture).__webglTexture;if(e.depthTexture.format===$)d.framebufferTexture2D(36160,36096,3553,n,0);else{if(e.depthTexture.format!==tt)throw new Error("Unknown depthTexture format");d.framebufferTexture2D(36160,33306,3553,n,0)}}(n.__webglFramebuffer,e)}else if(t){n.__webglDepthbuffer=[];for(let t=0;t<6;t++)p.bindFramebuffer(36160,n.__webglFramebuffer[t]),n.__webglDepthbuffer[t]=d.createRenderbuffer(),N(n.__webglDepthbuffer[t],e,!1)}else p.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=d.createRenderbuffer(),N(n.__webglDepthbuffer,e,!1);p.bindFramebuffer(36160,null)}function O(t){return m&&t.isWebGLMultisampleRenderTarget?Math.min(n,t.samples):0}let z=!1,F=!1;this.allocateTextureUnit=function(){const t=T;return t>=e&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+e),T+=1,t},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(t,e){const n=l.get(t);t.version>0&&n.__version!==t.version?D(n,t,e):(p.activeTexture(33984+e),p.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=l.get(t);t.version>0&&n.__version!==t.version?D(n,t,e):(p.activeTexture(33984+e),p.bindTexture(32879,n.__webglTexture))},this.setTextureCube=A,this.setupRenderTarget=function(e){const n=e.texture,i=l.get(e),r=l.get(n);e.addEventListener("dispose",S),r.__webglTexture=d.createTexture(),r.__version=n.version,c.memory.textures++;const t=!0===e.isWebGLCubeRenderTarget,s=!0===e.isWebGLMultisampleRenderTarget,a=n.isDataTexture3D||n.isDataTexture2DArray,o=x(e)||m;if(!m||n.format!==K||n.type!==Et&&n.type!==At||(n.format=Lt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),t){i.__webglFramebuffer=[];for(let t=0;t<6;t++)i.__webglFramebuffer[t]=d.createFramebuffer()}else if(i.__webglFramebuffer=d.createFramebuffer(),s)if(m){i.__webglMultisampledFramebuffer=d.createFramebuffer(),i.__webglColorRenderbuffer=d.createRenderbuffer(),d.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const l=f.convert(n.format),c=f.convert(n.type),m=w(n.internalFormat,l,c),r=O(e);d.renderbufferStorageMultisample(36161,r,m,e.width,e.height),p.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),d.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),d.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=d.createRenderbuffer(),N(i.__webglDepthRenderbuffer,e,!0)),p.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(t){p.bindTexture(34067,r.__webglTexture),C(34067,n,o);for(let t=0;t<6;t++)I(i.__webglFramebuffer[t],e,36064,34069+t);_(n,o)&&b(34067,n,e.width,e.height),p.bindTexture(34067,null)}else{let t=3553;if(a)if(m){t=n.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");p.bindTexture(t,r.__webglTexture),C(t,n,o),I(i.__webglFramebuffer,e,36064,t),_(n,o)&&b(3553,n,e.width,e.height),p.bindTexture(3553,null)}e.depthBuffer&&B(e)},this.updateRenderTargetMipmap=function(n){const i=n.texture;if(_(i,x(n)||m)){const t=n.isWebGLCubeRenderTarget?34067:3553,e=l.get(i).__webglTexture;p.bindTexture(t,e),b(t,i,n.width,n.height),p.bindTexture(t,null)}},this.updateMultisampleRenderTarget=function(i){if(i.isWebGLMultisampleRenderTarget)if(m){const t=i.width,e=i.height;let n=16384;i.depthBuffer&&(n|=256),i.stencilBuffer&&(n|=1024);const m=l.get(i);p.bindFramebuffer(36008,m.__webglMultisampledFramebuffer),p.bindFramebuffer(36009,m.__webglFramebuffer),d.blitFramebuffer(0,0,t,e,0,0,t,e,n,9728),p.bindFramebuffer(36008,null),p.bindFramebuffer(36009,m.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),z=!0),t=t.texture),E(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),t=t.texture),A(t,e)}}function ss(t,n,e){const i=e.isWebGL2;return{convert:function(t){let e;if(t===Tt)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===Z)return 5123;if(1013===t)return 5124;if(t===J)return 5125;if(t===Et)return 5126;if(t===At)return i?5131:(e=n.get("OES_texture_half_float"),null!==e?e.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===K)return 6407;if(t===Lt)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===$)return 6402;if(t===tt)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(t===r||t===s||t===l||t===c){if(e=n.get("WEBGL_compressed_texture_s3tc"),null===e)return null;if(t===r)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===s)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===l)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===c)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===h||t===u||t===d||t===p){if(e=n.get("WEBGL_compressed_texture_pvrtc"),null===e)return null;if(t===h)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===u)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===d)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===p)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return e=n.get("WEBGL_compressed_texture_etc1"),null!==e?e.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===f||t===m)&&(e=n.get("WEBGL_compressed_texture_etc"),null!==e)){if(t===f)return e.COMPRESSED_RGB8_ETC2;if(t===m)return e.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(e=n.get("WEBGL_compressed_texture_astc"),null!==e?t:null):36492===t?(e=n.get("EXT_texture_compression_bptc"),null!==e?t:null):t===Q?i?34042:(e=n.get("WEBGL_depth_texture"),null!==e?e.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class as extends Vn{constructor(t=[]){super(),this.cameras=t}}as.prototype.isArrayCamera=!0;class os extends be{constructor(){super(),this.type="Group"}}function ls(){this._targetRay=null,this._grip=null,this._hand=null}function cs(t,i){const r=this,s=t.state;let a=null,o=1,l=null,c="local-floor",h=null;const n=[],u=new Map,d=new Vn;d.layers.enable(1),d.viewport=new Dt;const p=new Vn;p.layers.enable(2),p.viewport=new Dt;const f=[d,p],m=new as;m.layers.enable(1),m.layers.enable(2);let g=null,v=null;function y(t){const e=u.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function x(){u.forEach(function(t,e){t.disconnect(e)}),u.clear(),g=null,v=null,s.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),T.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function _(i){const e=a.inputSources;for(let t=0;t<n.length;t++)u.set(e[t],n[t]);for(let n=0;n<i.removed.length;n++){const t=i.removed[n],e=u.get(t);e&&(e.dispatchEvent({type:"disconnected",data:t}),u.delete(t))}for(let n=0;n<i.added.length;n++){const t=i.added[n],e=u.get(t);e&&e.dispatchEvent({type:"connected",data:t})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=n[t];return void 0===e&&(e=new ls,n[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=n[t];return void 0===e&&(e=new ls,n[t]=e),e.getGripSpace()},this.getHand=function(t){let e=n[t];return void 0===e&&(e=new ls,n[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){c=t,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l},this.getSession=function(){return a},this.setSession=async function(n){if(a=n,null!==a){a.addEventListener("select",y),a.addEventListener("selectstart",y),a.addEventListener("selectend",y),a.addEventListener("squeeze",y),a.addEventListener("squeezestart",y),a.addEventListener("squeezeend",y),a.addEventListener("end",x),a.addEventListener("inputsourceschange",_);const n=i.getContextAttributes();!0!==n.xrCompatible&&await i.makeXRCompatible();const t={antialias:n.antialias,alpha:n.alpha,depth:n.depth,stencil:n.stencil,framebufferScaleFactor:o},e=new XRWebGLLayer(a,i,t);a.updateRenderState({baseLayer:e}),l=await a.requestReferenceSpace(c),T.setContext(a),T.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};const w=new It,M=new It;function b(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){m.near=p.near=d.near=t.near,m.far=p.far=d.far=t.far,g===m.near&&v===m.far||(a.updateRenderState({depthNear:m.near,depthFar:m.far}),g=m.near,v=m.far);const e=t.parent,n=m.cameras;b(m,e);for(let t=0;t<n.length;t++)b(n[t],e);t.matrixWorld.copy(m.matrixWorld),t.matrix.copy(m.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){w.setFromMatrixPosition(e.matrixWorld),M.setFromMatrixPosition(n.matrixWorld);const i=w.distanceTo(M),r=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=a*h,p=a*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+f,v=o+f,y=d-m,x=p+(i-m),_=l*o/v*g,b=c*o/v*g;t.projectionMatrix.makePerspective(y,x,_,b,g,v)}(m,d,p):m.projectionMatrix.copy(d.projectionMatrix),m};let S=null;const T=new Kn;T.setAnimationLoop(function(i,r){if(h=r.getViewerPose(l),null!==h){const i=h.views,r=a.renderState.baseLayer;s.bindXRFramebuffer(r.framebuffer);let n=!1;i.length!==m.cameras.length&&(m.cameras.length=0,n=!0);for(let e=0;e<i.length;e++){const a=i[e],t=r.getViewport(a),l=f[e];l.matrix.fromArray(a.transform.matrix),l.projectionMatrix.fromArray(a.projectionMatrix),l.viewport.set(t.x,t.y,t.width,t.height),0===e&&m.matrix.copy(l.matrix),!0===n&&m.cameras.push(l)}}const e=a.inputSources;for(let t=0;t<n.length;t++){const s=n[t],a=e[t];s.update(a,r,l)}S&&S(i,r)}),this.setAnimationLoop=function(t){S=t},this.dispose=function(){}}function hs(s){function r(t,e){t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap);const n=s.get(e).envMap;if(n){t.envMap.value=n,t.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio;const i=s.get(n).__maxMipLevel;void 0!==i&&(t.maxMipLevel.value=i)}let i,r;e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap?i=e.emissiveMap:e.clearcoatMap?i=e.clearcoatMap:e.clearcoatNormalMap?i=e.clearcoatNormalMap:e.clearcoatRoughnessMap&&(i=e.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),e.aoMap?r=e.aoMap:e.lightMap&&(r=e.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uv2Transform.value.copy(r.matrix))}function a(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);s.get(e).envMap&&(t.envMapIntensity.value=e.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,e,n,i){e.isMeshBasicMaterial?r(t,e):e.isMeshLambertMaterial?(r(t,e),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,e)):e.isMeshToonMaterial?(r(t,e),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,e)):e.isMeshPhongMaterial?(r(t,e),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,e)):e.isMeshStandardMaterial?(r(t,e),e.isMeshPhysicalMaterial?function(t,e){a(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,e):a(t,e)):e.isMeshMatcapMaterial?(r(t,e),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,e)):e.isMeshDepthMaterial?(r(t,e),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,e)):e.isMeshDistanceMaterial?(r(t,e),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,e)):e.isMeshNormalMaterial?(r(t,e),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,e)):e.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,e),e.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,e)):e.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,e,n,i):e.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}}}function us(t){const s=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),e=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,_=null;const d=[],p=[];this.domElement=s,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Rt,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const b=this;let f=!1,m=0,g=0,w=null,M=-1,S=null;const v=new Dt,y=new Dt;let x=null,T=s.width,E=s.height,A=1,L=null,R=null;const C=new Dt(0,0,T,E),P=new Dt(0,0,T,E);let D=!1;const I=new Qn;let N=!1,B=!1;const O=new Jt,z=new It,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===w?A:1}let U,G,k,V,W,j,q,X,Y,Z,J,Q,K,$,tt,et,nt,it,rt,st,at,ot,lt=e;function ct(i,r){for(let n=0;n<i.length;n++){const t=i[n],e=s.getContext(t,r);if(null!==e)return e}return null}try{const t={alpha:n,depth:i,stencil:r,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(s.addEventListener("webglcontextlost",dt,!1),s.addEventListener("webglcontextrestored",pt,!1),null===lt){const s=["webgl2","webgl","experimental-webgl"];if(!0===b.isWebGL1Renderer&&s.shift(),lt=ct(s,t),null===lt)throw ct(s)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===lt.getShaderPrecisionFormat&&(lt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ht(){U=new hi(lt),G=new oi(lt,U,t),U.init(G),at=new ss(lt,U,G),k=new is(lt,U,G),V=new pi(lt),W=new Vr,j=new rs(lt,U,k,W,G,at,V),q=new ci(b),X=new $n(lt,G),ot=new si(lt,U,X,G),Y=new ui(lt,X,V,ot),Z=new vi(lt,Y,X,V),it=new gi(lt),tt=new li(W),J=new kr(b,q,U,G,ot,tt),Q=new hs(W),K=new Xr(W),$=new $r(U,G),nt=new ri(b,q,k,Z,o),et=new ns(b,Z,G),rt=new ai(lt,U,V,G),st=new di(lt,U,V,G),V.programs=J.programs,b.capabilities=G,b.extensions=U,b.properties=W,b.renderLists=K,b.shadowMap=et,b.state=k,b.info=V}ht();const ut=new cs(b,lt);function dt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function pt(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1;const t=V.autoReset,e=et.enabled,n=et.autoUpdate,i=et.needsUpdate,r=et.type;ht(),V.autoReset=t,et.enabled=e,et.autoUpdate=n,et.needsUpdate=i,et.type=r}function ft(t){const e=t.target;e.removeEventListener("dispose",ft),function(t){(function(t){const e=W.get(t).programs;void 0!==e&&e.forEach(function(t){J.releaseProgram(t)})})(t),W.remove(t)}(e)}this.xr=ut,this.getContext=function(){return lt},this.getContextAttributes=function(){return lt.getContextAttributes()},this.forceContextLoss=function(){const t=U.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=U.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(t){void 0!==t&&(A=t,this.setSize(T,E,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Pt),t.set(T,E)},this.setSize=function(t,e,n){ut.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=t,E=e,s.width=Math.floor(t*A),s.height=Math.floor(e*A),!1!==n&&(s.style.width=t+"px",s.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Pt),t.set(T*A,E*A).floor()},this.setDrawingBufferSize=function(t,e,n){T=t,E=e,A=n,s.width=Math.floor(t*n),s.height=Math.floor(e*n),this.setViewport(0,0,t,e)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new Dt),t.copy(v)},this.getViewport=function(t){return t.copy(C)},this.setViewport=function(t,e,n,i){t.isVector4?C.set(t.x,t.y,t.z,t.w):C.set(t,e,n,i),k.viewport(v.copy(C).multiplyScalar(A).floor())},this.getScissor=function(t){return t.copy(P)},this.setScissor=function(t,e,n,i){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,n,i),k.scissor(y.copy(P).multiplyScalar(A).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(t){k.setScissorTest(D=t)},this.setOpaqueSort=function(t){L=t},this.setTransparentSort=function(t){R=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new je),t.copy(nt.getClearColor())},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=16384),(void 0===e||e)&&(i|=256),(void 0===n||n)&&(i|=1024),lt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){s.removeEventListener("webglcontextlost",dt,!1),s.removeEventListener("webglcontextrestored",pt,!1),K.dispose(),$.dispose(),W.dispose(),q.dispose(),Z.dispose(),ot.dispose(),ut.dispose(),ut.removeEventListener("sessionstart",gt),ut.removeEventListener("sessionend",vt),yt.stop()},this.renderBufferImmediate=function(t,e){ot.initAttributes();const n=W.get(t);t.hasPositions&&!n.position&&(n.position=lt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=lt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=lt.createBuffer()),t.hasColors&&!n.color&&(n.color=lt.createBuffer());const i=e.getAttributes();t.hasPositions&&(lt.bindBuffer(34962,n.position),lt.bufferData(34962,t.positionArray,35048),ot.enableAttribute(i.position),lt.vertexAttribPointer(i.position,3,5126,!1,0,0)),t.hasNormals&&(lt.bindBuffer(34962,n.normal),lt.bufferData(34962,t.normalArray,35048),ot.enableAttribute(i.normal),lt.vertexAttribPointer(i.normal,3,5126,!1,0,0)),t.hasUvs&&(lt.bindBuffer(34962,n.uv),lt.bufferData(34962,t.uvArray,35048),ot.enableAttribute(i.uv),lt.vertexAttribPointer(i.uv,2,5126,!1,0,0)),t.hasColors&&(lt.bindBuffer(34962,n.color),lt.bufferData(34962,t.colorArray,35048),ot.enableAttribute(i.color),lt.vertexAttribPointer(i.color,3,5126,!1,0,0)),ot.disableUnusedAttributes(),lt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,s){null===e&&(e=F);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=St(t,e,i,r);k.setMaterial(i,a);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=Y.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&it.update(r,n,i,o),ot.setup(r,i,o,n,l);let d=rt;null!==l&&(h=X.get(l),d=st,d.setIndex(h));const p=null!==l?l.count:c.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==s?s.start*u:0,v=null!==s?s.count*u:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,_=Math.max(0,x-y+1);if(0!==_){if(r.isMesh)!0===i.wireframe?(k.setLineWidth(i.wireframeLinewidth*H()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),k.setLineWidth(t*H()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,_,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,_,t)}else d.render(y,_)}},this.compile=function(i,e){_=$.get(i),_.init(),i.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(_.pushLight(t),t.castShadow&&_.pushShadow(t))}),_.setupLights(),i.traverse(function(e){const n=e.material;if(n)if(Array.isArray(n))for(let t=0;t<n.length;t++){wt(n[t],i,e)}else wt(n,i,e)})};let mt=null;function gt(){yt.stop()}function vt(){yt.start()}const yt=new Kn;function xt(i,r,s,a){if(!1===i.visible)return;if(i.layers.test(r.layers))if(i.isGroup)s=i.renderOrder;else if(i.isLOD)!0===i.autoUpdate&&i.update(r);else if(i.isLight)_.pushLight(i),i.castShadow&&_.pushShadow(i);else if(i.isSprite){if(!i.frustumCulled||I.intersectsSprite(i)){a&&z.setFromMatrixPosition(i.matrixWorld).applyMatrix4(O);const r=Z.update(i),o=i.material;o.visible&&u.push(i,r,o,s,z.z,null)}}else if(i.isImmediateRenderObject)a&&z.setFromMatrixPosition(i.matrixWorld).applyMatrix4(O),u.push(i,null,i.material,s,z.z,null);else if((i.isMesh||i.isLine||i.isPoints)&&(i.isSkinnedMesh&&i.skeleton.frame!==V.render.frame&&(i.skeleton.update(),i.skeleton.frame=V.render.frame),!i.frustumCulled||I.intersectsObject(i))){a&&z.setFromMatrixPosition(i.matrixWorld).applyMatrix4(O);const r=Z.update(i),o=i.material;if(Array.isArray(o)){const a=r.groups;for(let n=0,t=a.length;n<t;n++){const t=a[n],e=o[t.materialIndex];e&&e.visible&&u.push(i,r,e,s,z.z,t)}}else o.visible&&u.push(i,r,o,s,z.z,null)}const o=i.children;for(let t=0,e=o.length;t<e;t++)xt(o[t],r,s,a)}function _t(a,o,l){const c=!0===o.isScene?o.overrideMaterial:null;for(let e=0,t=a.length;e<t;e++){const t=a[e],n=t.object,i=t.geometry,r=null===c?t.material:c,s=t.group;if(l.isArrayCamera){const a=l.cameras;for(let t=0,e=a.length;t<e;t++){const c=a[t];n.layers.test(c.layers)&&(k.viewport(v.copy(c.viewport)),_.setupLightsView(c),bt(n,o,c,i,r,s))}}else bt(n,o,l,i,r,s)}}function bt(t,e,n,i,r,s){if(t.onBeforeRender(b,e,n,i,r,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=St(n,e,r,t);k.setMaterial(r),ot.reset(),function(t,e){t.render(function(t){b.renderBufferImmediate(t,e)})}(t,i)}else b.renderBufferDirect(n,e,i,r,t,s);t.onAfterRender(b,e,n,i,r,s)}function wt(t,e,n){!0!==e.isScene&&(e=F);const i=W.get(t),r=_.state.lights,s=_.state.shadowsArray,a=r.state.version,o=J.getParameters(t,r.state,s,e,n),l=J.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=q.get(t.envMap||i.environment),void 0===c&&(t.addEventListener("dispose",ft),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===a)return Mt(t,o),h}else o.uniforms=J.getUniforms(t),t.onBeforeCompile(o,b),h=J.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=tt.uniform),Mt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const d=h.getUniforms(),p=br.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Mt(t,e){const n=W.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function St(e,n,t,i){!0!==n.isScene&&(n=F),j.resetTextureUnits();const r=n.fog,s=t.isMeshStandardMaterial?n.environment:null,a=null===w?b.outputEncoding:w.texture.encoding,o=q.get(t.envMap||s),l=!0===t.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,c=W.get(t),h=_.state.lights;if(!0===N&&(!0===B||e!==S)){const n=e===S&&t.id===M;tt.setState(t,e,n)}let u=!1;t.version===c.__version?c.needsLights&&c.lightsStateVersion!==h.state.version||c.outputEncoding!==a||i.isInstancedMesh&&!1===c.instancing?u=!0:i.isInstancedMesh||!0!==c.instancing?c.envMap!==o||t.fog&&c.fog!==r?u=!0:void 0===c.numClippingPlanes||c.numClippingPlanes===tt.numPlanes&&c.numIntersection===tt.numIntersection?c.vertexAlphas!==l&&(u=!0):u=!0:u=!0:(u=!0,c.__version=t.version);let d=c.currentProgram;!0===u&&(d=wt(t,n,i));let p=!1,f=!1,m=!1;const g=d.getUniforms(),v=c.uniforms;if(k.useProgram(d.program)&&(p=!0,f=!0,m=!0),t.id!==M&&(M=t.id,f=!0),p||S!==e){if(g.setValue(lt,"projectionMatrix",e.projectionMatrix),G.logarithmicDepthBuffer&&g.setValue(lt,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),S!==e&&(S=e,f=!0,m=!0),t.isShaderMaterial||t.isMeshPhongMaterial||t.isMeshToonMaterial||t.isMeshStandardMaterial||t.envMap){const n=g.map.cameraPosition;void 0!==n&&n.setValue(lt,z.setFromMatrixPosition(e.matrixWorld))}(t.isMeshPhongMaterial||t.isMeshToonMaterial||t.isMeshLambertMaterial||t.isMeshBasicMaterial||t.isMeshStandardMaterial||t.isShaderMaterial)&&g.setValue(lt,"isOrthographic",!0===e.isOrthographicCamera),(t.isMeshPhongMaterial||t.isMeshToonMaterial||t.isMeshLambertMaterial||t.isMeshBasicMaterial||t.isMeshStandardMaterial||t.isShaderMaterial||t.isShadowMaterial||t.skinning)&&g.setValue(lt,"viewMatrix",e.matrixWorldInverse)}if(t.skinning){g.setOptional(lt,i,"bindMatrix"),g.setOptional(lt,i,"bindMatrixInverse");const e=i.skeleton;if(e){const n=e.bones;if(G.floatVertexTextures){if(null===e.boneTexture){let t=Math.sqrt(4*n.length);t=Ct.ceilPowerOfTwo(t),t=Math.max(t,4);const i=new Float32Array(t*t*4);i.set(e.boneMatrices);const r=new Yn(i,t,t,Lt,Et);e.boneMatrices=i,e.boneTexture=r,e.boneTextureSize=t}g.setValue(lt,"boneTexture",e.boneTexture,j),g.setValue(lt,"boneTextureSize",e.boneTextureSize)}else g.setOptional(lt,e,"boneMatrices")}}var y,x;return(f||c.receiveShadow!==i.receiveShadow)&&(c.receiveShadow=i.receiveShadow,g.setValue(lt,"receiveShadow",i.receiveShadow)),f&&(g.setValue(lt,"toneMappingExposure",b.toneMappingExposure),c.needsLights&&(x=m,(y=v).ambientLightColor.needsUpdate=x,y.lightProbe.needsUpdate=x,y.directionalLights.needsUpdate=x,y.directionalLightShadows.needsUpdate=x,y.pointLights.needsUpdate=x,y.pointLightShadows.needsUpdate=x,y.spotLights.needsUpdate=x,y.spotLightShadows.needsUpdate=x,y.rectAreaLights.needsUpdate=x,y.hemisphereLights.needsUpdate=x),r&&t.fog&&Q.refreshFogUniforms(v,r),Q.refreshMaterialUniforms(v,t,A,E),br.upload(lt,c.uniformsList,v,j)),t.isShaderMaterial&&!0===t.uniformsNeedUpdate&&(br.upload(lt,c.uniformsList,v,j),t.uniformsNeedUpdate=!1),t.isSpriteMaterial&&g.setValue(lt,"center",i.center),g.setValue(lt,"modelViewMatrix",i.modelViewMatrix),g.setValue(lt,"normalMatrix",i.normalMatrix),g.setValue(lt,"modelMatrix",i.matrixWorld),d}yt.setAnimationLoop(function(t){mt&&mt(t)}),"undefined"!=typeof window&&yt.setContext(window),this.setAnimationLoop=function(t){mt=t,ut.setAnimationLoop(t),null===t?yt.stop():yt.start()},ut.addEventListener("sessionstart",gt),ut.addEventListener("sessionend",vt),this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===f)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ut.enabled&&!0===ut.isPresenting&&(e=ut.getCamera(e)),!0===t.isScene&&t.onBeforeRender(b,t,e,n||w),_=$.get(t,p.length),_.init(),p.push(_),O.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),I.setFromProjectionMatrix(O),B=this.localClippingEnabled,N=tt.init(this.clippingPlanes,B,e),u=K.get(t,d.length),u.init(),d.push(u),xt(t,e,0,b.sortObjects),u.finish(),!0===b.sortObjects&&u.sort(L,R),!0===N&&tt.beginShadows();const r=_.state.shadowsArray;et.render(r,t,e),_.setupLights(),_.setupLightsView(e),!0===N&&tt.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(u,t,e,i);const s=u.opaque,a=u.transparent;s.length>0&&_t(s,t,e),a.length>0&&_t(a,t,e),null!==w&&(j.updateRenderTargetMipmap(w),j.updateMultisampleRenderTarget(w)),!0===t.isScene&&t.onAfterRender(b,t,e),k.buffers.depth.setTest(!0),k.buffers.depth.setMask(!0),k.buffers.color.setMask(!0),k.setPolygonOffset(!1),ot.resetDefaultState(),M=-1,S=null,p.pop(),_=p.length>0?p[p.length-1]:null,d.pop(),u=d.length>0?d[d.length-1]:null},this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return w},this.setRenderTarget=function(e,n=0,i=0){w=e,m=n,g=i,e&&void 0===W.get(e).__webglFramebuffer&&j.setupRenderTarget(e);let r=null,s=!1,a=!1;if(e){const i=e.texture;(i.isDataTexture3D||i.isDataTexture2DArray)&&(a=!0);const t=W.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=t[n],s=!0):r=e.isWebGLMultisampleRenderTarget?W.get(e).__webglMultisampledFramebuffer:t,v.copy(e.viewport),y.copy(e.scissor),x=e.scissorTest}else v.copy(C).multiplyScalar(A).floor(),y.copy(P).multiplyScalar(A).floor(),x=D;if(k.bindFramebuffer(36160,r),k.viewport(v),k.scissor(y),k.setScissorTest(x),s){const r=W.get(e.texture);lt.framebufferTexture2D(36160,36064,34069+n,r.__webglTexture,i)}else if(a){const r=W.get(e.texture),s=n||0;lt.framebufferTextureLayer(36160,36064,r.__webglTexture,i||0,s)}},this.readRenderTargetPixels=function(n,i,r,s,a,o,l){if(!n||!n.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let c=W.get(n).__webglFramebuffer;if(n.isWebGLCubeRenderTarget&&void 0!==l&&(c=c[l]),c){k.bindFramebuffer(36160,c);try{const l=n.texture,c=l.format,t=l.type;if(c!==Lt&&at.convert(c)!==lt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const e=t===At&&(U.has("EXT_color_buffer_half_float")||G.isWebGL2&&U.has("EXT_color_buffer_float"));if(!(t===Tt||at.convert(t)===lt.getParameter(35738)||t===Et&&(G.isWebGL2||U.has("OES_texture_float")||U.has("WEBGL_color_buffer_float"))||e))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===lt.checkFramebufferStatus(36160)?i>=0&&i<=n.width-s&&r>=0&&r<=n.height-a&&lt.readPixels(i,r,s,a,at.convert(c),at.convert(t),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const n=null!==w?W.get(w).__webglFramebuffer:null;k.bindFramebuffer(36160,n)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i),a=at.convert(e.format);j.setTexture2D(e,0),lt.copyTexImage2D(3553,n,a,t.x,t.y,r,s,0),k.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,s=e.image.height,a=at.convert(n.format),o=at.convert(n.type);j.setTexture2D(n,0),lt.pixelStorei(37440,n.flipY),lt.pixelStorei(37441,n.premultiplyAlpha),lt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?lt.texSubImage2D(3553,i,t.x,t.y,r,s,a,o,e.image.data):e.isCompressedTexture?lt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):lt.texSubImage2D(3553,i,t.x,t.y,a,o,e.image),0===i&&n.generateMipmaps&&lt.generateMipmap(3553),k.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(b.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:s,height:a,data:o}=n.image,l=at.convert(i.format),c=at.convert(i.type);let h;if(i.isDataTexture3D)j.setTexture3D(i,0),h=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");j.setTexture2DArray(i,0),h=35866}lt.pixelStorei(37440,i.flipY),lt.pixelStorei(37441,i.premultiplyAlpha),lt.pixelStorei(3317,i.unpackAlignment);const u=lt.getParameter(3314),d=lt.getParameter(32878),p=lt.getParameter(3316),f=lt.getParameter(3315),m=lt.getParameter(32877);lt.pixelStorei(3314,s),lt.pixelStorei(32878,a),lt.pixelStorei(3316,t.min.x),lt.pixelStorei(3315,t.min.y),lt.pixelStorei(32877,t.min.z),lt.texSubImage3D(h,r,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,l,c,o),lt.pixelStorei(3314,u),lt.pixelStorei(32878,d),lt.pixelStorei(3316,p),lt.pixelStorei(3315,f),lt.pixelStorei(32877,m),0===r&&i.generateMipmaps&&lt.generateMipmap(h),k.unbindTexture()},this.initTexture=function(t){j.setTexture2D(t,0),k.unbindTexture()},this.resetState=function(){m=0,g=0,w=null,k.reset(),ot.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}os.prototype.isGroup=!0,Object.assign(ls.prototype,{constructor:ls,getHandSpace:function(){return null===this._hand&&(this._hand=new os,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new os,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new os,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,n,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&"visible-blurred"!==n.session.visibilityState)if(null!==o&&(r=n.getPose(e.targetRaySpace,i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),c&&e.hand){a=!0;for(const r of e.hand.values()){const e=n.getJointPose(r,i);if(void 0===c.joints[r.jointName]){const e=new os;e.matrixAutoUpdate=!1,e.visible=!1,c.joints[r.jointName]=e,c.add(e)}const s=c.joints[r.jointName];null!==e&&(s.matrix.fromArray(e.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=e.radius),s.visible=null!==e}const r=c.joints["index-finger-tip"],s=c.joints["thumb-tip"],o=r.position.distanceTo(s.position),l=.02,t=.005;c.inputState.pinching&&o>l+t?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&o<=l-t&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(s=n.getPose(e.gripSpace,i),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale)));return null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),null!==c&&(c.visible=null!==a),this}}),Object.assign(cs.prototype,z.prototype);class ds extends us{}ds.prototype.isWebGL1Renderer=!0;class ps{constructor(t,e=25e-5){this.name="",this.color=new je(t),this.density=e}clone(){return new ps(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}ps.prototype.isFogExp2=!0;class fs{constructor(t,e=1,n=1e3){this.name="",this.color=new je(t),this.near=e,this.far=n}clone(){return new fs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}fs.prototype.isFog=!0;class ms extends be{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function gs(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=N,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ct.generateUUID()}ms.prototype.isScene=!0,Object.defineProperty(gs.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(gs.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(n,i,r){n*=this.stride,r*=i.stride;for(let t=0,e=this.stride;t<e;t++)this.array[n+t]=i.array[r+t];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ct.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new gs(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ct.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const vs=new It;function ys(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===i}Object.defineProperties(ys.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(ys.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let t=0,e=this.data.count;t<e;t++)vs.x=this.getX(t),vs.y=this.getY(t),vs.z=this.getZ(t),vs.applyMatrix4(n),this.setXYZ(t,vs.x,vs.y,vs.z);return this},applyNormalMatrix:function(n){for(let t=0,e=this.count;t<e;t++)vs.x=this.getX(t),vs.y=this.getY(t),vs.z=this.getZ(t),vs.applyNormalMatrix(n),this.setXYZ(t,vs.x,vs.y,vs.z);return this},transformDirection:function(n){for(let t=0,e=this.count;t<e;t++)vs.x=this.getX(t),vs.y=this.getY(t),vs.z=this.getZ(t),vs.transformDirection(n),this.setXYZ(t,vs.x,vs.y,vs.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let t=0;t<this.count;t++){const e=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)n.push(this.data.array[e+t])}return new Ze(new this.array.constructor(n),this.itemSize,this.normalized)}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new ys(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let t=0;t<this.count;t++){const e=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)n.push(this.data.array[e+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});class xs extends Fe{constructor(t){super(),this.type="SpriteMaterial",this.color=new je(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let _s;xs.prototype.isSpriteMaterial=!0;const bs=new It,ws=new It,Ms=new It,Ss=new Pt,Ts=new Pt,Es=new Jt,As=new It,Ls=new It,Rs=new It,Cs=new Pt,Ps=new Pt,Ds=new Pt;class Is extends be{constructor(t){if(super(),this.type="Sprite",void 0===_s){_s=new vn;const t=new gs(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);_s.setIndex([0,1,2,0,2,3]),_s.setAttribute("position",new ys(t,3,0,!1)),_s.setAttribute("uv",new ys(t,2,3,!1))}this.geometry=_s,this.material=void 0!==t?t:new xs,this.center=new Pt(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ws.setFromMatrixScale(this.matrixWorld),Es.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Ms.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ws.multiplyScalar(-Ms.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Ns(As.set(-.5,-.5,0),Ms,s,ws,i,r),Ns(Ls.set(.5,-.5,0),Ms,s,ws,i,r),Ns(Rs.set(.5,.5,0),Ms,s,ws,i,r),Cs.set(0,0),Ps.set(1,0),Ds.set(1,1);let a=t.ray.intersectTriangle(As,Ls,Rs,!1,bs);if(null===a&&(Ns(Ls.set(-.5,.5,0),Ms,s,ws,i,r),Ps.set(0,1),a=t.ray.intersectTriangle(As,Rs,Ls,!1,bs),null===a))return;const o=t.ray.origin.distanceTo(bs);o<t.near||o>t.far||e.push({distance:o,point:bs.clone(),uv:Oe.getUV(bs,As,Ls,Rs,Cs,Ps,Ds,new Pt),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Ns(t,e,n,i,r,s){Ss.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(Ts.x=s*Ss.x-r*Ss.y,Ts.y=r*Ss.x+s*Ss.y):Ts.copy(Ss),t.copy(e),t.x+=Ts.x,t.y+=Ts.y,t.applyMatrix4(Es)}Is.prototype.isSprite=!0;const Bs=new It,Os=new It;class zs extends be{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const n=t.levels;for(let e=0,t=n.length;e<t;e++){const t=n[e];this.addLevel(t.object.clone(),t.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){const i=this.levels;if(i.length>0){let t,e;for(t=1,e=i.length;t<e&&!(n<i[t].distance);t++);return i[t-1].object}return null}raycast(e,n){if(this.levels.length>0){Bs.setFromMatrixPosition(this.matrixWorld);const t=e.ray.origin.distanceTo(Bs);this.getObjectForDistance(t).raycast(e,n)}}update(i){const r=this.levels;if(r.length>1){Bs.setFromMatrixPosition(i.matrixWorld),Os.setFromMatrixPosition(this.matrixWorld);const t=Bs.distanceTo(Os)/i.zoom;let e,n;for(r[0].object.visible=!0,e=1,n=r.length;e<n&&t>=r[e].distance;e++)r[e-1].object.visible=!1,r[e].object.visible=!0;for(this._currentLevel=e-1;e<n;e++)r[e].object.visible=!1}}toJSON(t){const n=super.toJSON(t);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];const i=this.levels;for(let e=0,t=i.length;e<t;e++){const t=i[e];n.object.levels.push({object:t.object.uuid,distance:t.distance})}return n}}const Fs=new It,Hs=new Dt,Us=new Dt,Gs=new It,ks=new Jt;function Vs(t,e){Bn.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Jt,this.bindMatrixInverse=new Jt}function Ws(){be.call(this),this.type="Bone"}Vs.prototype=Object.assign(Object.create(Bn.prototype),{constructor:Vs,isSkinnedMesh:!0,copy:function(t){return Bn.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new Dt,i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){n.x=i.getX(e),n.y=i.getY(e),n.z=i.getZ(e),n.w=i.getW(e);const t=1/n.manhattanLength();t!==1/0?n.multiplyScalar(t):n.set(1,0,0,0),i.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(t){Bn.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,n){const i=this.skeleton,r=this.geometry;Hs.fromBufferAttribute(r.attributes.skinIndex,t),Us.fromBufferAttribute(r.attributes.skinWeight,t),Fs.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(let e=0;e<4;e++){const r=Us.getComponent(e);if(0!==r){const t=Hs.getComponent(e);ks.multiplyMatrices(i.bones[t].matrixWorld,i.boneInverses[t]),n.addScaledVector(Gs.copy(Fs).applyMatrix4(ks),r)}}return n.applyMatrix4(this.bindMatrixInverse)}}),Ws.prototype=Object.assign(Object.create(be.prototype),{constructor:Ws,isBone:!0});const js=new Jt,qs=new Jt;class Xs{constructor(t=[],e=[]){this.uuid=Ct.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Jt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Jt;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const n=this.bones,i=this.boneInverses,r=this.boneMatrices,t=this.boneTexture;for(let e=0,t=n.length;e<t;e++){const t=n[e]?n[e].matrixWorld:qs;js.multiplyMatrices(t,i[e]),js.toArray(r,16*e)}null!==t&&(t.needsUpdate=!0)}clone(){return new Xs(this.bones,this.boneInverses)}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];if(t.name===n)return t}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(i,r){this.uuid=i.uuid;for(let n=0,t=i.bones.length;n<t;n++){const t=i.bones[n];let e=r[t];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",t),e=new Ws),this.bones.push(e),this.boneInverses.push((new Jt).fromArray(i.boneInverses[n]))}return this.init(),this}toJSON(){const i={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};i.uuid=this.uuid;const r=this.bones,s=this.boneInverses;for(let n=0,t=r.length;n<t;n++){const t=r[n];i.bones.push(t.uuid);const e=s[n];i.boneInverses.push(e.toArray())}return i}}const Ys=new Jt,Zs=new Jt,Js=[],Qs=new Bn;function Ks(t,e,n){Bn.call(this,t,e),this.instanceMatrix=new Ze(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Ks.prototype=Object.assign(Object.create(Bn.prototype),{constructor:Ks,isInstancedMesh:!0,copy:function(t){return Bn.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,i){const r=this.matrixWorld,e=this.count;if(Qs.geometry=this.geometry,Qs.material=this.material,void 0!==Qs.material)for(let n=0;n<e;n++){this.getMatrixAt(n,Ys),Zs.multiplyMatrices(r,Ys),Qs.matrixWorld=Zs,Qs.raycast(t,Js);for(let t=0,e=Js.length;t<e;t++){const r=Js[t];r.instanceId=n,r.object=this,i.push(r)}Js.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new Ze(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class $s extends Fe{constructor(t){super(),this.type="LineBasicMaterial",this.color=new je(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}$s.prototype.isLineBasicMaterial=!0;const ta=new It,ea=new It,na=new Jt,ia=new Zt,ra=new Gt;function sa(t=new vn,e=new $s){be.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}sa.prototype=Object.assign(Object.create(be.prototype),{constructor:sa,isLine:!0,copy:function(t){return be.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const n=t.attributes.position,i=[0];for(let t=1,e=n.count;t<e;t++)ta.fromBufferAttribute(n,t-1),ea.fromBufferAttribute(n,t),i[t]=i[t-1],i[t]+=ta.distanceTo(ea);t.setAttribute("lineDistance",new sn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,i){const t=this.geometry,r=this.matrixWorld,s=n.params.Line.threshold,a=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),ra.copy(t.boundingSphere),ra.applyMatrix4(r),ra.radius+=s,!1===n.ray.intersectsSphere(ra))return;na.copy(r).invert(),ia.copy(n.ray).applyMatrix4(na);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new It,h=new It,u=new It,d=new It,p=this.isLineSegments?2:1;if(t.isBufferGeometry){const r=t.index,s=t.attributes.position;if(null!==r){for(let t=Math.max(0,a.start),e=Math.min(r.count,a.start+a.count)-1;t<e;t+=p){const a=r.getX(t),o=r.getX(t+1);c.fromBufferAttribute(s,a),h.fromBufferAttribute(s,o);if(ia.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const p=n.ray.origin.distanceTo(d);p<n.near||p>n.far||i.push({distance:p,point:u.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this})}}else{for(let t=Math.max(0,a.start),e=Math.min(s.count,a.start+a.count)-1;t<e;t+=p){c.fromBufferAttribute(s,t),h.fromBufferAttribute(s,t+1);if(ia.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const r=n.ray.origin.distanceTo(d);r<n.near||r>n.far||i.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:t,face:null,faceIndex:null,object:this})}}}else t.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const t=n.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}else{const t=n.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const aa=new It,oa=new It;function la(t,e){sa.call(this,t,e),this.type="LineSegments"}la.prototype=Object.assign(Object.create(sa.prototype),{constructor:la,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const n=t.attributes.position,i=[];for(let t=0,e=n.count;t<e;t+=2)aa.fromBufferAttribute(n,t),oa.fromBufferAttribute(n,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+aa.distanceTo(oa);t.setAttribute("lineDistance",new sn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});class ca extends sa{constructor(t,e){super(t,e),this.type="LineLoop"}}ca.prototype.isLineLoop=!0;class ha extends Fe{constructor(t){super(),this.type="PointsMaterial",this.color=new je(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}ha.prototype.isPointsMaterial=!0;const ua=new Jt,da=new Zt,pa=new Gt,fa=new It;function ma(t=new vn,e=new ha){be.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function ga(e,n,i,r,s,a,o){const l=da.distanceSqToPoint(e);if(l<i){const i=new It;da.closestPointToPoint(e,i),i.applyMatrix4(r);const t=s.ray.origin.distanceTo(i);if(t<s.near||t>s.far)return;a.push({distance:t,distanceToRay:Math.sqrt(l),point:i,index:n,face:null,object:o})}}ma.prototype=Object.assign(Object.create(be.prototype),{constructor:ma,isPoints:!0,copy:function(t){return be.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(n,i){const t=this.geometry,r=this.matrixWorld,s=n.params.Points.threshold,a=t.drawRange;if(null===t.boundingSphere&&t.computeBoundingSphere(),pa.copy(t.boundingSphere),pa.applyMatrix4(r),pa.radius+=s,!1===n.ray.intersectsSphere(pa))return;ua.copy(r).invert(),da.copy(n.ray).applyMatrix4(ua);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(t.isBufferGeometry){const s=t.index,o=t.attributes.position;if(null!==s){for(let t=Math.max(0,a.start),e=Math.min(s.count,a.start+a.count);t<e;t++){const a=s.getX(t);fa.fromBufferAttribute(o,a),ga(fa,a,l,r,n,i,this)}}else{for(let t=Math.max(0,a.start),e=Math.min(o.count,a.start+a.count);t<e;t++)fa.fromBufferAttribute(o,t),ga(fa,t,l,r,n,i,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const t=n.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}else{const t=n.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class va extends at{constructor(e,t,n,i,r,s,a,o,l){super(e,t,n,i,r,s,a,o,l),this.format=void 0!==a?a:K,this.minFilter=void 0!==s?s:q,this.magFilter=void 0!==r?r:q,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function t(){c.needsUpdate=!0,e.requestVideoFrameCallback(t)})}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}va.prototype.isVideoTexture=!0;class ya extends at{constructor(t,e,n,i,r,s,a,o,l,c,h,u){super(null,s,a,o,l,c,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}ya.prototype.isCompressedTexture=!0;class xa extends at{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.needsUpdate=!0}}xa.prototype.isCanvasTexture=!0;class _a extends at{constructor(t,e,n,i,r,s,a,o,l,c){if((c=void 0!==c?c:$)!==$&&c!==tt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===$&&(n=Z),void 0===n&&c===tt&&(n=Q),super(null,i,r,s,a,o,c,n,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:k,this.minFilter=void 0!==o?o:k,this.flipY=!1,this.generateMipmaps=!1}}_a.prototype.isDepthTexture=!0;class ba extends vn{constructor(i=1,r=8,s=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:i,segments:r,thetaStart:s,thetaLength:a},r=Math.max(3,r);const e=[],o=[],l=[],c=[],h=new It,u=new Pt;o.push(0,0,0),l.push(0,0,1),c.push(.5,.5);for(let e=0,n=3;e<=r;e++,n+=3){const t=s+e/r*a;h.x=i*Math.cos(t),h.y=i*Math.sin(t),o.push(h.x,h.y,h.z),l.push(0,0,1),u.x=(o[n]/i+1)/2,u.y=(o[n+1]/i+1)/2,c.push(u.x,u.y)}for(let t=1;t<=r;t++)e.push(t,t+1,0);this.setIndex(e),this.setAttribute("position",new sn(o,3)),this.setAttribute("normal",new sn(l,3)),this.setAttribute("uv",new sn(c,2))}}class wa extends vn{constructor(c=1,h=1,s=1,u=8,a=1,t=!1,d=0,p=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:c,radiusBottom:h,height:s,radialSegments:u,heightSegments:a,openEnded:t,thetaStart:d,thetaLength:p};const f=this;u=Math.floor(u),a=Math.floor(a);const m=[],g=[],v=[],y=[];let x=0;const o=[],_=s/2;let b=0;function e(e){const n=x,i=new Pt,r=new It;let s=0;const a=!0===e?c:h,o=!0===e?1:-1;for(let t=1;t<=u;t++)g.push(0,_*o,0),v.push(0,o,0),y.push(.5,.5),x++;const l=x;for(let t=0;t<=u;t++){const h=t/u*p+d,e=Math.cos(h),n=Math.sin(h);r.x=a*n,r.y=_*o,r.z=a*e,g.push(r.x,r.y,r.z),v.push(0,o,0),i.x=.5*e+.5,i.y=.5*n*o+.5,y.push(i.x,i.y),x++}for(let t=0;t<u;t++){const h=n+t,u=l+t;!0===e?m.push(u,u+1,h):m.push(u+1,u,h),s+=3}f.addGroup(b,s,!0===e?1:2),b+=s}!function(){const n=new It,e=new It;let i=0;const r=(h-c)/s;for(let t=0;t<=a;t++){const m=[],b=t/a,i=b*(h-c)+c;for(let t=0;t<=u;t++){const h=t/u,a=h*p+d,f=Math.sin(a),o=Math.cos(a);e.x=i*f,e.y=-b*s+_,e.z=i*o,g.push(e.x,e.y,e.z),n.set(f,r,o).normalize(),v.push(n.x,n.y,n.z),y.push(h,1-b),m.push(x++)}o.push(m)}for(let e=0;e<u;e++)for(let t=0;t<a;t++){const s=o[t][e],u=o[t+1][e],a=o[t+1][e+1],n=o[t][e+1];m.push(s,u,n),m.push(u,a,n),i+=6}f.addGroup(b,i,0),b+=i}(),!1===t&&(c>0&&e(!0),h>0&&e(!1)),this.setIndex(m),this.setAttribute("position",new sn(g,3)),this.setAttribute("normal",new sn(v,3)),this.setAttribute("uv",new sn(y,2))}}class Ma extends wa{constructor(t=1,e=1,n=8,i=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,n,i,r,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}}class Sa extends vn{constructor(i,s,t=1,e=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:i,indices:s,radius:t,detail:e};const h=[],u=[];function a(t,r,s,e){const a=e+1,o=[];for(let i=0;i<=a;i++){o[i]=[];const e=t.clone().lerp(s,i/a),l=r.clone().lerp(s,i/a),n=a-i;for(let t=0;t<=n;t++)o[i][t]=0===t&&i===a?e:e.clone().lerp(l,t/n)}for(let e=0;e<a;e++)for(let t=0;t<2*(a-e)-1;t++){const s=Math.floor(t/2);t%2==0?(l(o[e][s+1]),l(o[e+1][s]),l(o[e][s])):(l(o[e][s+1]),l(o[e+1][s+1]),l(o[e+1][s]))}}function l(t){h.push(t.x,t.y,t.z)}function o(t,e){const n=3*t;e.x=i[n+0],e.y=i[n+1],e.z=i[n+2]}function d(t,e,n,i){i<0&&1===t.x&&(u[e]=t.x-1),0===n.x&&0===n.z&&(u[e]=i/2/Math.PI+.5)}function p(t){return Math.atan2(t.z,-t.x)}!function(e){const n=new It,i=new It,r=new It;for(let t=0;t<s.length;t+=3)o(s[t+0],n),o(s[t+1],i),o(s[t+2],r),a(n,i,r,e)}(e),function(e){const n=new It;for(let t=0;t<h.length;t+=3)n.x=h[t+0],n.y=h[t+1],n.z=h[t+2],n.normalize().multiplyScalar(e),h[t+0]=n.x,h[t+1]=n.y,h[t+2]=n.z}(t),function(){const i=new It;for(let n=0;n<h.length;n+=3){i.x=h[n+0],i.y=h[n+1],i.z=h[n+2];const t=p(i)/2/Math.PI+.5,e=(r=i,Math.atan2(-r.y,Math.sqrt(r.x*r.x+r.z*r.z))/Math.PI+.5);u.push(t,1-e)}var r;(function(){const i=new It,r=new It,s=new It,a=new It,o=new Pt,l=new Pt,c=new Pt;for(let e=0,n=0;e<h.length;e+=9,n+=6){i.set(h[e+0],h[e+1],h[e+2]),r.set(h[e+3],h[e+4],h[e+5]),s.set(h[e+6],h[e+7],h[e+8]),o.set(u[n+0],u[n+1]),l.set(u[n+2],u[n+3]),c.set(u[n+4],u[n+5]),a.copy(i).add(r).add(s).divideScalar(3);const t=p(a);d(o,n+0,i,t),d(l,n+2,r,t),d(c,n+4,s,t)}})(),function(){for(let s=0;s<u.length;s+=6){const t=u[s+0],e=u[s+2],n=u[s+4],i=Math.max(t,e,n),r=Math.min(t,e,n);i>.9&&r<.1&&(t<.2&&(u[s+0]+=1),e<.2&&(u[s+2]+=1),n<.2&&(u[s+4]+=1))}}()}(),this.setAttribute("position",new sn(h,3)),this.setAttribute("normal",new sn(h.slice(),3)),this.setAttribute("uv",new sn(u,2)),0===e?this.computeVertexNormals():this.normalizeNormals()}}class Ta extends Sa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const Ea=new It,Aa=new It,La=new It,Ra=new Oe;class Ca extends vn{constructor(t,i){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:i},i=void 0!==i?i:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const r=Math.pow(10,4),s=Math.cos(Ct.DEG2RAD*i),a=t.getIndex(),o=t.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},p=[];for(let e=0;e<l;e+=3){a?(c[0]=a.getX(e),c[1]=a.getX(e+1),c[2]=a.getX(e+2)):(c[0]=e,c[1]=e+1,c[2]=e+2);const{a:i,b:l,c:t}=Ra;if(i.fromBufferAttribute(o,c[0]),l.fromBufferAttribute(o,c[1]),t.fromBufferAttribute(o,c[2]),Ra.getNormal(La),u[0]=`${Math.round(i.x*r)},${Math.round(i.y*r)},${Math.round(i.z*r)}`,u[1]=`${Math.round(l.x*r)},${Math.round(l.y*r)},${Math.round(l.z*r)}`,u[2]=`${Math.round(t.x*r)},${Math.round(t.y*r)},${Math.round(t.z*r)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let n=0;n<3;n++){const i=(n+1)%3,r=u[n],a=u[i],o=Ra[h[n]],l=Ra[h[i]],t=`${r}_${a}`,e=`${a}_${r}`;e in d&&d[e]?(La.dot(d[e].normal)<=s&&(p.push(o.x,o.y,o.z),p.push(l.x,l.y,l.z)),d[e]=null):t in d||(d[t]={index0:c[n],index1:c[i],normal:La.clone()})}}for(const t in d)if(d[t]){const{index0:i,index1:r}=d[t];Ea.fromBufferAttribute(o,i),Aa.fromBufferAttribute(o,r),p.push(Ea.x,Ea.y,Ea.z),p.push(Aa.x,Aa.y,Aa.z)}this.setAttribute("position",new sn(p,3))}}const Pa=function(e,t,n){n=n||2;const i=t&&t.length,r=i?t[0]*n:e.length;let s=Da(e,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,d,p;if(i&&(s=function(t,e,n,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=Da(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(Va(c));for(r.sort(Ha),s=0;s<r.length;s++)Ua(r[s],n),n=Ia(n,n.next);return n}(e,t,s,n)),e.length>80*n){o=c=e[0],l=h=e[1];for(let t=n;t<r;t+=n)u=e[t],d=e[t+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return Na(s,a,n,o,l,p),a};function Da(t,e,n,i,r){let s,a;if(r===function(n,i,r,s){let a=0;for(let t=i,e=r-s;t<r;t+=s)a+=(n[e]-n[t])*(n[t+1]+n[e+1]),e=t;return a}(t,e,n,i)>0)for(s=e;s<n;s+=i)a=$a(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=$a(s,t[s],t[s+1],a);return a&&Xa(a,a.next)&&(to(a),a=a.next),a}function Ia(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!Xa(i,i.next)&&0!==qa(i.prev,i,i.next))i=i.next;else{if(to(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Na(t,e,n,i,r,s,a){if(!t)return;!a&&s&&function(t,e,n,i){let r=t;do{null===r.z&&(r.z=ka(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1)}(r)}(t,i,r,s);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?Oa(t,i,r,s):Ba(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),to(t),t=l.next,c=l.next;else if((t=l)===c){a?1===a?Na(t=za(Ia(t),e,n),e,n,i,r,s,2):2===a&&Fa(t,e,n,i,r,s):Na(Ia(t),e,n,i,r,s,1);break}}function Ba(t){const e=t.prev,n=t,i=t.next;if(qa(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Wa(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&qa(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Oa(t,e,n,i){const r=t.prev,s=t,a=t.next;if(qa(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,u=ka(o,l,e,n,i),d=ka(c,h,e,n,i);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=u&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Wa(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&qa(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Wa(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&qa(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Wa(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&qa(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Wa(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&qa(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function za(n,i,r){let s=n;do{const t=s.prev,e=s.next.next;!Xa(t,e)&&Ya(t,s,s.next,e)&&Qa(t,e)&&Qa(e,t)&&(i.push(t.i/r),i.push(s.i/r),i.push(e.i/r),to(s),to(s.next),s=n=e),s=s.next}while(s!==n);return Ia(s)}function Fa(t,n,i,r,s,a){let o=t;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&ja(o,e)){let t=Ka(o,e);return o=Ia(o,o.next),t=Ia(t,t.next),Na(o,n,i,r,s,a),void Na(t,n,i,r,s,a)}e=e.next}o=o.next}while(o!==t)}function Ha(t,e){return t.x-e.x}function Ua(e,n){if(n=function(t,e){let n=e;const i=t.x,r=t.y;let s,a=-1/0;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const t=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>a){if(a=t,t===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===a)return s;const o=s,l=s.x,c=s.y;let h,u=1/0;n=s;do{i>=n.x&&n.x>=l&&i!==n.x&&Wa(r<c?i:a,r,l,c,r<c?a:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Qa(n,t)&&(h<u||h===u&&(n.x>s.x||n.x===s.x&&Ga(s,n)))&&(s=n,u=h)),n=n.next}while(n!==o);return s}(e,n)){const t=Ka(n,e);Ia(n,n.next),Ia(t,t.next)}}function Ga(t,e){return qa(t.prev,t,e.prev)<0&&qa(e.next,t,t.next)<0}function ka(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Va(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Wa(t,e,n,i,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(r-a)*(i-o)>=0}function ja(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ya(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Qa(t,e)&&Qa(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(qa(t.prev,t,e.prev)||qa(t,e.prev,e))||Xa(t,e)&&qa(t.prev,t,t.next)>0&&qa(e.prev,e,e.next)>0)}function qa(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Xa(t,e){return t.x===e.x&&t.y===e.y}function Ya(t,e,n,i){const r=Ja(qa(t,e,n)),s=Ja(qa(t,e,i)),a=Ja(qa(n,i,t)),o=Ja(qa(n,i,e));return r!==s&&a!==o||(!(0!==r||!Za(t,n,e))||(!(0!==s||!Za(t,i,e))||(!(0!==a||!Za(n,t,i))||!(0!==o||!Za(n,e,i)))))}function Za(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ja(t){return t>0?1:t<0?-1:0}function Qa(t,e){return qa(t.prev,t,t.next)<0?qa(t,e,t.next)>=0&&qa(t,t.prev,e)>=0:qa(t,e,t.prev)<0||qa(t,t.next,e)<0}function Ka(t,e){const n=new eo(t.i,t.x,t.y),i=new eo(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function $a(t,e,n,i){const r=new eo(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function to(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function eo(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const no={area:function(n){const i=n.length;let r=0;for(let t=i-1,e=0;e<i;t=e++)r+=n[t].x*n[e].y-n[e].x*n[t].y;return.5*r},isClockWise:function(t){return no.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];io(t),ro(n,t);let s=t.length;e.forEach(io);for(let t=0;t<e.length;t++)i.push(s),s+=e[t].length,ro(n,e[t]);const a=Pa(n,i);for(let t=0;t<a.length;t+=3)r.push(a.slice(t,t+3));return r}};function io(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function ro(e,n){for(let t=0;t<n.length;t++)e.push(n[t].x),e.push(n[t].y)}class so extends vn{constructor(n,F){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:F},n=Array.isArray(n)?n:[n];const H=this,U=[],G=[];for(let t=0,e=n.length;t<e;t++){i(n[t])}function i(t){const i=[],e=void 0!==F.curveSegments?F.curveSegments:12,a=void 0!==F.steps?F.steps:1;let n=void 0!==F.depth?F.depth:100,r=void 0===F.bevelEnabled||F.bevelEnabled,s=void 0!==F.bevelThickness?F.bevelThickness:6,o=void 0!==F.bevelSize?F.bevelSize:s-2,l=void 0!==F.bevelOffset?F.bevelOffset:0,c=void 0!==F.bevelSegments?F.bevelSegments:3;const h=F.extrudePath,u=void 0!==F.UVGenerator?F.UVGenerator:ao;void 0!==F.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),n=F.amount);let d,p,f,m,g,v=!1;h&&(d=h.getSpacedPoints(a),v=!0,r=!1,p=h.computeFrenetFrames(a,!1),f=new It,m=new It,g=new It),r||(c=0,s=0,o=0,l=0);const y=t.extractPoints(e);let x=y.shape;const _=y.holes;if(!no.isClockWise(x)){x=x.reverse();for(let t=0,e=_.length;t<e;t++){const F=_[t];no.isClockWise(F)&&(_[t]=F.reverse())}}const b=no.triangulateShape(x,_),w=x;for(let t=0,e=_.length;t<e;t++){const F=_[t];x=x.concat(F)}function M(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const S=x.length,T=b.length;function E(s,a,o){let l,c,h;const u=s.x-a.x,d=s.y-a.y,p=o.x-s.x,f=o.y-s.y,m=u*u+d*d,g=u*f-d*p;if(Math.abs(g)>Number.EPSILON){const g=Math.sqrt(m),t=Math.sqrt(p*p+f*f),e=a.x-d/g,n=a.y+u/g,i=((o.x-f/t-e)*f-(o.y+p/t-n)*p)/(u*f-d*p);l=e+u*i-s.x,c=n+d*i-s.y;const r=l*l+c*c;if(r<=2)return new Pt(l,c);h=Math.sqrt(r/2)}else{let t=!1;u>Number.EPSILON?p>Number.EPSILON&&(t=!0):u<-Number.EPSILON?p<-Number.EPSILON&&(t=!0):Math.sign(d)===Math.sign(f)&&(t=!0),t?(l=-d,c=u,h=Math.sqrt(m)):(l=u,c=d,h=Math.sqrt(m/2))}return new Pt(l/h,c/h)}const A=[];for(let t=0,e=w.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),A[t]=E(w[t],w[n],w[i]);const L=[];let R,C=A.concat();for(let t=0,e=_.length;t<e;t++){const F=_[t];R=[];for(let t=0,e=F.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),R[t]=E(F[t],F[n],F[i]);L.push(R),C=C.concat(R)}for(let t=0;t<c;t++){const F=t/c,H=s*Math.cos(F*Math.PI/2),U=o*Math.sin(F*Math.PI/2)+l;for(let t=0,e=w.length;t<e;t++){const F=M(w[t],A[t],U);I(F.x,F.y,-H)}for(let t=0,e=_.length;t<e;t++){const F=_[t];R=L[t];for(let t=0,e=F.length;t<e;t++){const G=M(F[t],R[t],U);I(G.x,G.y,-H)}}}const P=o+l;for(let t=0;t<S;t++){const F=r?M(x[t],C[t],P):x[t];v?(m.copy(p.normals[0]).multiplyScalar(F.x),f.copy(p.binormals[0]).multiplyScalar(F.y),g.copy(d[0]).add(m).add(f),I(g.x,g.y,g.z)):I(F.x,F.y,0)}for(let e=1;e<=a;e++)for(let t=0;t<S;t++){const H=r?M(x[t],C[t],P):x[t];v?(m.copy(p.normals[e]).multiplyScalar(H.x),f.copy(p.binormals[e]).multiplyScalar(H.y),g.copy(d[e]).add(m).add(f),I(g.x,g.y,g.z)):I(H.x,H.y,n/a*e)}for(let t=c-1;t>=0;t--){const F=t/c,H=s*Math.cos(F*Math.PI/2),U=o*Math.sin(F*Math.PI/2)+l;for(let t=0,e=w.length;t<e;t++){const F=M(w[t],A[t],U);I(F.x,F.y,n+H)}for(let t=0,e=_.length;t<e;t++){const F=_[t];R=L[t];for(let t=0,e=F.length;t<e;t++){const G=M(F[t],R[t],U);v?I(G.x,G.y+d[a-1].y,d[a-1].x+H):I(G.x,G.y,n+H)}}}function D(t,r){let s=t.length;for(;--s>=0;){const n=s;let i=s-1;i<0&&(i=t.length-1);for(let e=0,t=a+2*c;e<t;e++){const s=S*e,t=S*(e+1);B(r+n+s,r+i+s,r+i+t,r+n+t)}}}function I(t,e,n){i.push(t),i.push(e),i.push(n)}function N(t,e,n){O(t),O(e),O(n);const i=U.length/3,r=u.generateTopUV(H,U,i-3,i-2,i-1);z(r[0]),z(r[1]),z(r[2])}function B(t,e,n,i){O(t),O(e),O(i),O(e),O(n),O(i);const r=U.length/3,s=u.generateSideWallUV(H,U,r-6,r-3,r-2,r-1);z(s[0]),z(s[1]),z(s[3]),z(s[1]),z(s[2]),z(s[3])}function O(t){U.push(i[3*t+0]),U.push(i[3*t+1]),U.push(i[3*t+2])}function z(t){G.push(t.x),G.push(t.y)}!function(){const t=U.length/3;if(r){let t=0,e=S*t;for(let t=0;t<T;t++){const H=b[t];N(H[2]+e,H[1]+e,H[0]+e)}t=a+2*c,e=S*t;for(let t=0;t<T;t++){const H=b[t];N(H[0]+e,H[1]+e,H[2]+e)}}else{for(let e=0;e<T;e++){const t=b[e];N(t[2],t[1],t[0])}for(let e=0;e<T;e++){const t=b[e];N(t[0]+S*a,t[1]+S*a,t[2]+S*a)}}H.addGroup(t,U.length/3-t,0)}(),function(){const t=U.length/3;let n=0;D(w,n),n+=w.length;for(let t=0,e=_.length;t<e;t++){const H=_[t];D(H,n),n+=H.length}H.addGroup(t,U.length/3-t,1)}()}this.setAttribute("position",new sn(U,3)),this.setAttribute("uv",new sn(G,2)),this.computeVertexNormals()}toJSON(){const t=vn.prototype.toJSON.call(this);return function(n,t,i){if(i.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){const t=n[e];i.shapes.push(t.uuid)}else i.shapes.push(n.uuid);void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,t)}}const ao={generateTopUV:function(t,e,n,i,r){const s=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new Pt(s,a),new Pt(o,l),new Pt(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*s],g=e[3*s+1],v=e[3*s+2];return Math.abs(o-h)<.01?[new Pt(a,1-l),new Pt(c,1-u),new Pt(d,1-f),new Pt(m,1-v)]:[new Pt(o,1-l),new Pt(h,1-u),new Pt(p,1-f),new Pt(g,1-v)]}};class oo extends Sa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class lo extends vn{constructor(r,s=12,a=0,o=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:r,segments:s,phiStart:a,phiLength:o},s=Math.floor(s),o=Ct.clamp(o,0,2*Math.PI);const n=[],l=[],c=[],h=1/s,u=new It,d=new Pt;for(let i=0;i<=s;i++){const t=a+i*h*o,e=Math.sin(t),n=Math.cos(t);for(let t=0;t<=r.length-1;t++)u.x=r[t].x*e,u.y=r[t].y,u.z=r[t].x*n,l.push(u.x,u.y,u.z),d.x=i/s,d.y=t/(r.length-1),c.push(d.x,d.y)}for(let e=0;e<s;e++)for(let t=0;t<r.length-1;t++){const o=t+e*r.length,l=o,c=o+r.length,h=o+r.length+1,u=o+1;n.push(l,c,u),n.push(c,h,u)}if(this.setIndex(n),this.setAttribute("position",new sn(l,3)),this.setAttribute("uv",new sn(c,2)),this.computeVertexNormals(),o===2*Math.PI){const a=this.attributes.normal.array,o=new It,n=new It,l=new It,c=s*r.length*3;for(let t=0,e=0;t<r.length;t++,e+=3)o.x=a[e+0],o.y=a[e+1],o.z=a[e+2],n.x=a[c+e+0],n.y=a[c+e+1],n.z=a[c+e+2],l.addVectors(o,n).normalize(),a[e+0]=a[c+e+0]=l.x,a[e+1]=a[c+e+1]=l.y,a[e+2]=a[c+e+2]=l.z}}}class co extends Sa{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}function ho(e,n,i){vn.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:n,stacks:i};const r=[],s=[],a=[],o=[],l=1e-5,c=new It,h=new It,u=new It,d=new It,p=new It;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const f=n+1;for(let t=0;t<=i;t++){const f=t/i;for(let t=0;t<=n;t++){const r=t/n;e(r,f,h),s.push(h.x,h.y,h.z),r-l>=0?(e(r-l,f,u),d.subVectors(h,u)):(e(r+l,f,u),d.subVectors(u,h)),f-l>=0?(e(r,f-l,u),p.subVectors(h,u)):(e(r,f+l,u),p.subVectors(u,h)),c.crossVectors(d,p).normalize(),a.push(c.x,c.y,c.z),o.push(r,f)}}for(let e=0;e<i;e++)for(let t=0;t<n;t++){const n=e*f+t,s=e*f+t+1,a=(e+1)*f+t+1,o=(e+1)*f+t;r.push(n,s,o),r.push(s,a,o)}this.setIndex(r),this.setAttribute("position",new sn(s,3)),this.setAttribute("normal",new sn(a,3)),this.setAttribute("uv",new sn(o,2))}ho.prototype=Object.create(vn.prototype),ho.prototype.constructor=ho;class uo extends vn{constructor(t=.5,e=1,n=8,i=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let h=t;const u=(e-t)/(i=Math.max(1,i)),d=new It,p=new Pt;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=r+t/n*s;d.x=h*Math.cos(i),d.y=h*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}h+=u}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,s=i+n+1,o=i+n+2,l=i+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new sn(o,3)),this.setAttribute("normal",new sn(l,3)),this.setAttribute("uv",new sn(c,2))}}class po extends vn{constructor(e,a=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:a};const o=[],l=[],c=[],h=[];let n=0,u=0;if(!1===Array.isArray(e))i(e);else for(let t=0;t<e.length;t++)i(e[t]),this.addGroup(n,u,t),n+=u,u=0;function i(t){const n=l.length/3,e=t.extractPoints(a);let i=e.shape;const r=e.holes;!1===no.isClockWise(i)&&(i=i.reverse());for(let t=0,e=r.length;t<e;t++){const a=r[t];!0===no.isClockWise(a)&&(r[t]=a.reverse())}const s=no.triangulateShape(i,r);for(let t=0,e=r.length;t<e;t++){const a=r[t];i=i.concat(a)}for(let t=0,e=i.length;t<e;t++){const a=i[t];l.push(a.x,a.y,0),c.push(0,0,1),h.push(a.x,a.y)}for(let t=0,e=s.length;t<e;t++){const a=s[t],l=a[0]+n,c=a[1]+n,h=a[2]+n;o.push(l,c,h),u+=3}}this.setIndex(o),this.setAttribute("position",new sn(l,3)),this.setAttribute("normal",new sn(c,3)),this.setAttribute("uv",new sn(h,2))}toJSON(){const t=vn.prototype.toJSON.call(this);return function(n,i){if(i.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){const t=n[e];i.shapes.push(t.uuid)}else i.shapes.push(n.uuid);return i}(this.parameters.shapes,t)}}class fo extends vn{constructor(r=1,s=8,a=6,o=0,l=2*Math.PI,c=0,h=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:r,widthSegments:s,heightSegments:a,phiStart:o,phiLength:l,thetaStart:c,thetaLength:h},s=Math.max(3,Math.floor(s)),a=Math.max(2,Math.floor(a));const u=Math.min(c+h,Math.PI);let d=0;const p=[],f=new It,m=new It,n=[],g=[],v=[],y=[];for(let t=0;t<=a;t++){const e=[],n=t/a;let i=0;0==t&&0==c?i=.5/s:t==a&&u==Math.PI&&(i=-.5/s);for(let t=0;t<=s;t++){const u=t/s;f.x=-r*Math.cos(o+u*l)*Math.sin(c+n*h),f.y=r*Math.cos(c+n*h),f.z=r*Math.sin(o+u*l)*Math.sin(c+n*h),g.push(f.x,f.y,f.z),m.copy(f).normalize(),v.push(m.x,m.y,m.z),y.push(u+i,1-n),e.push(d++)}p.push(e)}for(let e=0;e<a;e++)for(let t=0;t<s;t++){const s=p[e][t+1],l=p[e][t],h=p[e+1][t],d=p[e+1][t+1];(0!==e||c>0)&&n.push(s,l,d),(e!==a-1||u<Math.PI)&&n.push(l,h,d)}this.setIndex(n),this.setAttribute("position",new sn(g,3)),this.setAttribute("normal",new sn(v,3)),this.setAttribute("uv",new sn(y,2))}}class mo extends Sa{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class go extends so{constructor(t,e={}){const n=e.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new vn;const i=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(i,e),this.type="TextGeometry"}}class vo extends vn{constructor(r=1,s=.4,a=8,o=6,l=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:r,tube:s,radialSegments:a,tubularSegments:o,arc:l},a=Math.floor(a),o=Math.floor(o);const n=[],c=[],h=[],u=[],d=new It,p=new It,f=new It;for(let i=0;i<=a;i++)for(let n=0;n<=o;n++){const t=n/o*l,e=i/a*Math.PI*2;p.x=(r+s*Math.cos(e))*Math.cos(t),p.y=(r+s*Math.cos(e))*Math.sin(t),p.z=s*Math.sin(e),c.push(p.x,p.y,p.z),d.x=r*Math.cos(t),d.y=r*Math.sin(t),f.subVectors(p,d).normalize(),h.push(f.x,f.y,f.z),u.push(n/o),u.push(i/a)}for(let e=1;e<=a;e++)for(let t=1;t<=o;t++){const a=(o+1)*e+t-1,l=(o+1)*(e-1)+t-1,c=(o+1)*(e-1)+t,h=(o+1)*e+t;n.push(a,l,h),n.push(l,c,h)}this.setIndex(n),this.setAttribute("position",new sn(c,3)),this.setAttribute("normal",new sn(h,3)),this.setAttribute("uv",new sn(u,2))}}class yo extends vn{constructor(n=1,i=.4,r=64,s=8,a=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:n,tube:i,tubularSegments:r,radialSegments:s,p:a,q:o},r=Math.floor(r),s=Math.floor(s);const l=[],c=[],h=[],u=[],d=new It,p=new It,f=new It,m=new It,g=new It,v=new It,y=new It;for(let e=0;e<=r;++e){const t=e/r*a*Math.PI*2;x(t,a,o,n,f),x(t+.01,a,o,n,m),v.subVectors(m,f),y.addVectors(m,f),g.crossVectors(v,y),y.crossVectors(g,v),g.normalize(),y.normalize();for(let t=0;t<=s;++t){const a=t/s*Math.PI*2,o=-i*Math.cos(a),m=i*Math.sin(a);d.x=f.x+(o*y.x+m*g.x),d.y=f.y+(o*y.y+m*g.y),d.z=f.z+(o*y.z+m*g.z),c.push(d.x,d.y,d.z),p.subVectors(d,f).normalize(),h.push(p.x,p.y,p.z),u.push(e/r),u.push(t/s)}}for(let e=1;e<=r;e++)for(let t=1;t<=s;t++){const r=(s+1)*(e-1)+(t-1),a=(s+1)*e+(t-1),o=(s+1)*e+t,c=(s+1)*(e-1)+t;l.push(r,a,c),l.push(a,o,c)}function x(t,e,n,i,r){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);r.x=i*(2+l)*.5*s,r.y=i*(2+l)*a*.5,r.z=i*Math.sin(o)*.5}this.setIndex(l),this.setAttribute("position",new sn(c,3)),this.setAttribute("normal",new sn(h,3)),this.setAttribute("uv",new sn(u,2))}}class xo extends vn{constructor(t,r=64,s=1,a=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:r,radius:s,radialSegments:a,closed:e};const o=t.computeFrenetFrames(r,e);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const l=new It,c=new It,n=new Pt;let h=new It;const u=[],d=[],i=[],p=[];function f(e){h=t.getPointAt(e/r,h);const n=o.normals[e],i=o.binormals[e];for(let t=0;t<=a;t++){const r=t/a*Math.PI*2,e=Math.sin(r),o=-Math.cos(r);c.x=o*n.x+e*i.x,c.y=o*n.y+e*i.y,c.z=o*n.z+e*i.z,c.normalize(),d.push(c.x,c.y,c.z),l.x=h.x+s*c.x,l.y=h.y+s*c.y,l.z=h.z+s*c.z,u.push(l.x,l.y,l.z)}}!function(){for(let t=0;t<r;t++)f(t);f(!1===e?r:0),function(){for(let e=0;e<=r;e++)for(let t=0;t<=a;t++)n.x=e/r,n.y=t/a,i.push(n.x,n.y)}(),function(){for(let s=1;s<=r;s++)for(let r=1;r<=a;r++){const t=(a+1)*(s-1)+(r-1),e=(a+1)*s+(r-1),n=(a+1)*s+r,i=(a+1)*(s-1)+r;p.push(t,e,i),p.push(e,n,i)}}()}(),this.setIndex(p),this.setAttribute("position",new sn(u,3)),this.setAttribute("normal",new sn(d,3)),this.setAttribute("uv",new sn(i,2))}toJSON(){const t=vn.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class _o extends vn{constructor(e){if(super(),this.type="WireframeGeometry",!0===e.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const s=[],a=[0,0],o={},l=new It;if(null!==e.index){const t=e.attributes.position,r=e.index;let n=e.groups;0===n.length&&(n=[{start:0,count:r.count,materialIndex:0}]);for(let t=0,e=n.length;t<e;++t){const s=n[t],l=s.start;for(let i=l,t=l+s.count;i<t;i+=3)for(let n=0;n<3;n++){const l=r.getX(i+n),t=r.getX(i+(n+1)%3);a[0]=Math.min(l,t),a[1]=Math.max(l,t);const e=a[0]+","+a[1];void 0===o[e]&&(o[e]={index1:a[0],index2:a[1]})}}for(const e in o){const a=o[e];l.fromBufferAttribute(t,a.index1),s.push(l.x,l.y,l.z),l.fromBufferAttribute(t,a.index2),s.push(l.x,l.y,l.z)}}else{const a=e.attributes.position;for(let i=0,t=a.count/3;i<t;i++)for(let n=0;n<3;n++){const t=3*i+n;l.fromBufferAttribute(a,t),s.push(l.x,l.y,l.z);const e=3*i+(n+1)%3;l.fromBufferAttribute(a,e),s.push(l.x,l.y,l.z)}}this.setAttribute("position",new sn(s,3))}}var bo=Object.freeze({__proto__:null,BoxGeometry:zn,BoxBufferGeometry:zn,CircleGeometry:ba,CircleBufferGeometry:ba,ConeGeometry:Ma,ConeBufferGeometry:Ma,CylinderGeometry:wa,CylinderBufferGeometry:wa,DodecahedronGeometry:Ta,DodecahedronBufferGeometry:Ta,EdgesGeometry:Ca,ExtrudeGeometry:so,ExtrudeBufferGeometry:so,IcosahedronGeometry:oo,IcosahedronBufferGeometry:oo,LatheGeometry:lo,LatheBufferGeometry:lo,OctahedronGeometry:co,OctahedronBufferGeometry:co,ParametricGeometry:ho,ParametricBufferGeometry:ho,PlaneGeometry:ti,PlaneBufferGeometry:ti,PolyhedronGeometry:Sa,PolyhedronBufferGeometry:Sa,RingGeometry:uo,RingBufferGeometry:uo,ShapeGeometry:po,ShapeBufferGeometry:po,SphereGeometry:fo,SphereBufferGeometry:fo,TetrahedronGeometry:mo,TetrahedronBufferGeometry:mo,TextGeometry:go,TextBufferGeometry:go,TorusGeometry:vo,TorusBufferGeometry:vo,TorusKnotGeometry:yo,TorusKnotBufferGeometry:yo,TubeGeometry:xo,TubeBufferGeometry:xo,WireframeGeometry:_o});class wo extends Fe{constructor(t){super(),this.type="ShadowMaterial",this.color=new je(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}wo.prototype.isShadowMaterial=!0;class Mo extends Gn{constructor(t){super(t),this.type="RawShaderMaterial"}}function So(t){Fe.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new je(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new je(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}function To(t){So.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Pt(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Ct.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}Mo.prototype.isRawShaderMaterial=!0,So.prototype=Object.create(Fe.prototype),So.prototype.constructor=So,So.prototype.isMeshStandardMaterial=!0,So.prototype.copy=function(t){return Fe.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this},To.prototype=Object.create(So.prototype),To.prototype.constructor=To,To.prototype.isMeshPhysicalMaterial=!0,To.prototype.copy=function(t){return So.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new je).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};class Eo extends Fe{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new je(16777215),this.specular=new je(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new je(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Eo.prototype.isMeshPhongMaterial=!0;class Ao extends Fe{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new je(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new je(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}Ao.prototype.isMeshToonMaterial=!0;class Lo extends Fe{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Lo.prototype.isMeshNormalMaterial=!0;class Ro extends Fe{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new je(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new je(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}Ro.prototype.isMeshLambertMaterial=!0;class Co extends Fe{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new je(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Co.prototype.isMeshMatcapMaterial=!0;class Po extends $s{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}Po.prototype.isLineDashedMaterial=!0;var Do=Object.freeze({__proto__:null,ShadowMaterial:wo,SpriteMaterial:xs,RawShaderMaterial:Mo,ShaderMaterial:Gn,PointsMaterial:ha,MeshPhysicalMaterial:To,MeshStandardMaterial:So,MeshPhongMaterial:Eo,MeshToonMaterial:Ao,MeshNormalMaterial:Lo,MeshLambertMaterial:Ro,MeshDepthMaterial:ts,MeshDistanceMaterial:es,MeshBasicMaterial:qe,MeshMatcapMaterial:Co,LineDashedMaterial:Po,LineBasicMaterial:$s,Material:Fe});const Io={arraySlice:function(t,e,n){return Io.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(n){const e=n.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort(function(t,e){return n[t]-n[e]}),i},sortedArray:function(n,i,r){const s=n.length,a=new n.constructor(s);for(let t=0,e=0;e!==s;++t){const s=r[t]*i;for(let t=0;t!==i;++t)a[e++]=n[s+t]}return a},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[r++];if(void 0===s)return;let a=s[i];if(void 0!==a)if(Array.isArray(a))do{a=s[i],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[i],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++]}while(void 0!==s);else do{a=s[i],void 0!==a&&(e.push(s.time),n.push(a)),s=t[r++]}while(void 0!==s)},subclip:function(t,i,r,s,a=30){const o=t.clone();o.name=i;const l=[];for(let e=0;e<o.tracks.length;++e){const i=o.tracks[e],c=i.getValueSize(),t=[],n=[];for(let e=0;e<i.times.length;++e){const o=i.times[e]*a;if(!(o<r||o>=s)){t.push(i.times[e]);for(let t=0;t<c;++t)n.push(i.values[e*c+t])}}0!==t.length&&(i.times=Io.convertArray(t,i.times.constructor),i.values=Io.convertArray(n,i.values.constructor),l.push(i))}o.tracks=l;let c=1/0;for(let t=0;t<o.tracks.length;++t)c>o.tracks[t].times[0]&&(c=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*c);return o.resetDuration(),o},makeClipAdditive:function(c,h=0,u=c,d=30){d<=0&&(d=30);const p=u.tracks.length,f=h/d;for(let l=0;l<p;++l){const d=u.tracks[l],p=d.ValueTypeName;if("bool"===p||"string"===p)continue;const e=c.tracks.find(function(t){return t.name===d.name&&t.ValueTypeName===p});if(void 0===e)continue;let t=0;const n=d.getValueSize();d.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=n/3);let i=0;const r=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(i=r/3);const s=d.times.length-1;let a;if(f<=d.times[0]){const c=t,h=n-t;a=Io.arraySlice(d.values,c,h)}else if(f>=d.times[s]){const c=s*n+t,h=c+n-t;a=Io.arraySlice(d.values,c,h)}else{const c=d.createInterpolant(),h=t,u=n-t;c.evaluate(f),a=Io.arraySlice(c.resultBuffer,h,u)}if("quaternion"===p){(new ht).fromArray(a).normalize().conjugate().toArray(a)}const o=e.times.length;for(let t=0;t<o;++t){const h=t*r+i;if("quaternion"===p)ht.multiplyQuaternionsFlat(e.values,h,a,0,e.values,h);else{const c=r-2*i;for(let t=0;t<c;++t)e.values[h+t]-=a[t]}}}return c.blendMode=w,c}};function No(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Bo(t,e,n,i){No.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Oo(t,e,n,i){No.call(this,t,e,n,i)}function zo(t,e,n,i){No.call(this,t,e,n,i)}Object.assign(No.prototype,{evaluate:function(n){const i=this.parameterPositions;let r=this._cachedIndex,s=i[r],a=i[r-1];t:{e:{let e;n:{i:if(!(n<s)){for(let t=r+2;;){if(void 0===s){if(n<a)break i;return r=i.length,this._cachedIndex=r,this.afterEnd_(r-1,n,a)}if(r===t)break;if(a=s,s=i[++r],n<s)break e}e=i.length;break n}if(n>=a)break t;{const t=i[1];n<t&&(r=2,a=t);for(let t=r-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,n,s);if(r===t)break;if(s=a,a=i[--r-1],n>=a)break e}e=r,r=0}}for(;r<e;){const s=r+e>>>1;n<i[s]?e=s:r=s+1}if(s=i[r],a=i[r-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,n,s);if(void 0===s)return r=i.length,this._cachedIndex=r,this.afterEnd_(r-1,a,n)}this._cachedIndex=r,this.intervalChanged_(r,a,s)}return this.interpolate_(r,a,n,s)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let t=0;t!==i;++t)e[t]=n[r+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(No.prototype,{beforeStart_:No.prototype.copySampleValue_,afterEnd_:No.prototype.copySampleValue_}),Bo.prototype=Object.assign(Object.create(No.prototype),{constructor:Bo,DefaultSettings_:{endingStart:y,endingEnd:y},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,a=i[r],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case x:r=t,a=2*e-n;break;case _:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case x:s=t,o=2*n-e;break;case _:s=1,o=n+i[1]-i[0];break;default:s=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let t=0;t!==a;++t)r[t]=g*s[c+t]+v*s[l+t]+y*s[o+t]+x*s[h+t];return r}}),Oo.prototype=Object.assign(Object.create(No.prototype),{constructor:Oo,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),h=1-c;for(let t=0;t!==a;++t)r[t]=s[l+t]*h+s[o+t]*c;return r}}),zo.prototype=Object.assign(Object.create(No.prototype),{constructor:zo,interpolate_:function(t){return this.copySampleValue_(t-1)}});class Fo{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Io.convertArray(e,this.TimeBufferType),this.values=Io.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Io.convertArray(t.times,Array),values:Io.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new zo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Oo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Bo(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case i:e=this.InterpolantFactoryMethodDiscrete;break;case g:e=this.InterpolantFactoryMethodLinear;break;case v:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return i;case this.InterpolantFactoryMethodLinear:return g;case this.InterpolantFactoryMethodSmooth:return v}}getValueSize(){return this.values.length/this.times.length}shift(i){if(0!==i){const n=this.times;for(let t=0,e=n.length;t!==e;++t)n[t]+=i}return this}scale(i){if(1!==i){const n=this.times;for(let t=0,e=n.length;t!==e;++t)n[t]*=i}return this}trim(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=Io.arraySlice(n,r,s),this.values=Io.arraySlice(this.values,r*t,s*t)}return this}validate(){let n=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const i=this.times,r=this.values,e=i.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let s=null;for(let t=0;t!==e;t++){const r=i[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),n=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,s),n=!1;break}s=r}if(void 0!==r&&Io.isTypedArray(r))for(let t=0,e=r.length;t!==e;++t){const i=r[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),n=!1;break}}return n}optimize(){const i=Io.arraySlice(this.times),r=Io.arraySlice(this.values),s=this.getValueSize(),a=this.getInterpolation()===v,o=i.length-1;let l=1;for(let n=1;n<o;++n){let e=!1;const t=i[n];if(t!==i[n+1]&&(1!==n||t!==i[0]))if(a)e=!0;else{const i=n*s,a=i-s,l=i+s;for(let t=0;t!==s;++t){const s=r[i+t];if(s!==r[a+t]||s!==r[l+t]){e=!0;break}}}if(e){if(n!==l){i[l]=i[n];const a=n*s,o=l*s;for(let t=0;t!==s;++t)r[o+t]=r[a+t]}++l}}if(o>0){i[l]=i[o];for(let t=o*s,e=l*s,n=0;n!==s;++n)r[e+n]=r[t+n];++l}return l!==i.length?(this.times=Io.arraySlice(i,0,l),this.values=Io.arraySlice(r,0,l*s)):(this.times=i,this.values=r),this}clone(){const t=Io.arraySlice(this.times,0),e=Io.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Fo.prototype.TimeBufferType=Float32Array,Fo.prototype.ValueBufferType=Float32Array,Fo.prototype.DefaultInterpolation=g;class Ho extends Fo{}Ho.prototype.ValueTypeName="bool",Ho.prototype.ValueBufferType=Array,Ho.prototype.DefaultInterpolation=i,Ho.prototype.InterpolantFactoryMethodLinear=void 0,Ho.prototype.InterpolantFactoryMethodSmooth=void 0;class Uo extends Fo{}Uo.prototype.ValueTypeName="color";class Go extends Fo{}function ko(t,e,n,i){No.call(this,t,e,n,i)}Go.prototype.ValueTypeName="number",ko.prototype=Object.assign(Object.create(No.prototype),{constructor:ko,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let t=l+a;l!==t;l+=4)ht.slerpFlat(r,0,s,l-a,s,l,o);return r}});class Vo extends Fo{InterpolantFactoryMethodLinear(t){return new ko(this.times,this.values,this.getValueSize(),t)}}Vo.prototype.ValueTypeName="quaternion",Vo.prototype.DefaultInterpolation=g,Vo.prototype.InterpolantFactoryMethodSmooth=void 0;class Wo extends Fo{}Wo.prototype.ValueTypeName="string",Wo.prototype.ValueBufferType=Array,Wo.prototype.DefaultInterpolation=i,Wo.prototype.InterpolantFactoryMethodLinear=void 0,Wo.prototype.InterpolantFactoryMethodSmooth=void 0;class jo extends Fo{}jo.prototype.ValueTypeName="vector";class qo{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Ct.generateUUID(),this.duration<0&&this.resetDuration()}static parse(t){const n=[],i=t.tracks,r=1/(t.fps||1);for(let t=0,e=i.length;t!==e;++t)n.push(Xo(i[t]).scale(r));const e=new this(t.name,t.duration,n,t.blendMode);return e.uuid=t.uuid,e}static toJSON(t){const n=[],i=t.tracks,e={name:t.name,duration:t.duration,tracks:n,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,e=i.length;t!==e;++t)n.push(Fo.toJSON(i[t]));return e}static CreateFromMorphTargetSequence(t,r,s,a){const o=r.length,l=[];for(let i=0;i<o;i++){let t=[],e=[];t.push((i+o-1)%o,i,(i+1)%o),e.push(0,1,0);const n=Io.getKeyframeOrder(t);t=Io.sortedArray(t,1,n),e=Io.sortedArray(e,1,n),a||0!==t[0]||(t.push(o),e.push(e[0])),l.push(new Go(".morphTargetInfluences["+r[i].name+"]",t,e).scale(1/s))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(n,t,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let t=0,e=n.length;t<e;t++){const i=n[t],a=i.name.match(s);if(a&&a.length>1){const n=a[1];let t=r[n];t||(r[n]=t=[]),t.push(i)}}const a=[];for(const n in r)a.push(this.CreateFromMorphTargetSequence(n,r[n],t,i));return a}static parseAnimation(n,e){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(n,i,r,s,a){if(0!==r.length){const t=[],e=[];Io.flattenJSON(r,t,e,s),0!==t.length&&a.push(new n(i,t,e))}},r=[],s=n.name||"default",a=n.fps||30,t=n.blendMode;let o=n.length||-1;const l=n.hierarchy||[];for(let t=0;t<l.length;t++){const s=l[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const n={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let t=0;t<s[e].morphTargets.length;t++)n[s[e].morphTargets[t]]=-1;for(const i in n){const n=[],a=[];for(let t=0;t!==s[e].morphTargets.length;++t){const r=s[e];n.push(r.time),a.push(r.morphTarget===i?1:0)}r.push(new Go(".morphTargetInfluence["+i+"]",n,a))}o=n.length*(a||1)}else{const a=".bones["+e[t].name+"]";i(jo,a+".position",s,"pos",r),i(Vo,a+".quaternion",s,"rot",r),i(jo,a+".scale",s,"scl",r)}}if(0===r.length)return null;return new this(s,o,r,t)}resetDuration(){let n=0;for(let e=0,t=this.tracks.length;e!==t;++e){const t=this.tracks[e];n=Math.max(n,t.times[t.times.length-1])}return this.duration=n,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Xo(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const n=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Go;case"vector":case"vector2":case"vector3":case"vector4":return jo;case"color":return Uo;case"quaternion":return Vo;case"bool":case"boolean":return Ho;case"string":return Wo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(e.type);if(void 0===e.times){const n=[],t=[];Io.flattenJSON(e.keys,n,t,"value"),e.times=n,e.values=t}return void 0!==n.parse?n.parse(e):new n(e.name,e.times,e.values,e.interpolation)}const Yo={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Zo(t,e,n){const i=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==i.onStart&&i.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(i){for(let n=0,t=l.length;n<t;n+=2){const t=l[n],e=l[n+1];if(t.global&&(t.lastIndex=0),t.test(i))return e}return null}}const Jo=new Zo;function Qo(t){this.manager=void 0!==t?t:Jo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Qo.prototype,{load:function(){},loadAsync:function(n,i){const r=this;return new Promise(function(t,e){r.load(n,t,i,e)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Ko={};function $o(t){Qo.call(this,t)}$o.prototype=Object.assign(Object.create(Qo.prototype),{constructor:$o,load:function(s,n,i,t){void 0===s&&(s=""),void 0!==this.path&&(s=this.path+s),s=this.manager.resolveURL(s);const a=this,r=Yo.get(s);if(void 0!==r)return a.manager.itemStart(s),setTimeout(function(){n&&n(r),a.manager.itemEnd(s)},0),r;if(void 0!==Ko[s])return void Ko[s].push({onLoad:n,onProgress:i,onError:t});const o=s.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(o){const i=o[1],r=!!o[2];let e=o[3];e=decodeURIComponent(e),r&&(e=atob(e));try{let t;const r=(this.responseType||"").toLowerCase();switch(r){case"arraybuffer":case"blob":const s=new Uint8Array(e.length);for(let t=0;t<e.length;t++)s[t]=e.charCodeAt(t);t="blob"===r?new Blob([s.buffer],{type:i}):s.buffer;break;case"document":const n=new DOMParser;t=n.parseFromString(e,i);break;case"json":t=JSON.parse(e);break;default:t=e}setTimeout(function(){n&&n(t),a.manager.itemEnd(s)},0)}catch(n){setTimeout(function(){t&&t(n),a.manager.itemError(s),a.manager.itemEnd(s)},0)}}else{Ko[s]=[],Ko[s].push({onLoad:n,onProgress:i,onError:t}),e=new XMLHttpRequest,e.open("GET",s,!0),e.addEventListener("load",function(n){const i=this.response,r=Ko[s];if(delete Ko[s],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Yo.add(s,i);for(let t=0,e=r.length;t<e;t++){const n=r[t];n.onLoad&&n.onLoad(i)}a.manager.itemEnd(s)}else{for(let t=0,e=r.length;t<e;t++){const i=r[t];i.onError&&i.onError(n)}a.manager.itemError(s),a.manager.itemEnd(s)}},!1),e.addEventListener("progress",function(n){const i=Ko[s];for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onProgress&&t.onProgress(n)}},!1),e.addEventListener("error",function(n){const i=Ko[s];delete Ko[s];for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onError&&t.onError(n)}a.manager.itemError(s),a.manager.itemEnd(s)},!1),e.addEventListener("abort",function(n){const i=Ko[s];delete Ko[s];for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onError&&t.onError(n)}a.manager.itemError(s),a.manager.itemEnd(s)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const s in this.requestHeader)e.setRequestHeader(s,this.requestHeader[s]);e.send(null)}return a.manager.itemStart(s),e},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}});function tl(t){Qo.call(this,t)}tl.prototype=Object.assign(Object.create(Qo.prototype),{constructor:tl,load:function(i,r,t,e){const s=this,a=[],o=new ya,l=new $o(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function n(n){l.load(i[n],function(t){const e=s.parse(t,!0);a[n]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},c+=1,6===c&&(1===e.mipmapCount&&(o.minFilter=q),o.image=a,o.format=e.format,o.needsUpdate=!0,r&&r(o))},t,e)}if(Array.isArray(i))for(let t=0,e=i.length;t<e;++t)n(t);else l.load(i,function(t){const n=s.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){a[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)a[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),a[e].format=n.format,a[e].width=n.width,a[e].height=n.height}o.image=a}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=q),o.format=n.format,o.needsUpdate=!0,r&&r(o)},t,e);return o}});class el extends Qo{constructor(t){super(t)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Yo.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),Yo.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class nl extends Qo{constructor(t){super(t)}load(n,i,t,r){const s=new qn,a=new el(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function e(e){a.load(n[e],function(t){s.images[e]=t,o++,6===o&&(s.needsUpdate=!0,i&&i(s))},void 0,r)}for(let t=0;t<n.length;++t)e(t);return s}}function il(t){Qo.call(this,t)}function rl(t){Qo.call(this,t)}function sl(){this.type="Curve",this.arcLengthDivisions=200}il.prototype=Object.assign(Object.create(Qo.prototype),{constructor:il,load:function(t,n,e,i){const r=this,s=new Yn,a=new $o(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,function(t){const e=r.parse(t);e&&(void 0!==e.image?s.image=e.image:void 0!==e.data&&(s.image.width=e.width,s.image.height=e.height,s.image.data=e.data),s.wrapS=void 0!==e.wrapS?e.wrapS:U,s.wrapT=void 0!==e.wrapT?e.wrapT:U,s.magFilter=void 0!==e.magFilter?e.magFilter:q,s.minFilter=void 0!==e.minFilter?e.minFilter:q,s.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(s.encoding=e.encoding),void 0!==e.flipY&&(s.flipY=e.flipY),void 0!==e.format&&(s.format=e.format),void 0!==e.type&&(s.type=e.type),void 0!==e.mipmaps&&(s.mipmaps=e.mipmaps,s.minFilter=Y),1===e.mipmapCount&&(s.minFilter=q),void 0!==e.generateMipmaps&&(s.generateMipmaps=e.generateMipmaps),s.needsUpdate=!0,n&&n(s,e))},e,i),s}}),rl.prototype=Object.assign(Object.create(Qo.prototype),{constructor:rl,load:function(n,i,t,e){const r=new at,s=new el(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(n,function(t){r.image=t;const e=n.search(/\.jpe?g($|\?)/i)>0||0===n.search(/^data\:image\/jpeg/);r.format=e?K:Lt,r.needsUpdate=!0,void 0!==i&&i(r)},t,e),r}}),Object.assign(sl.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(e=5){const n=[];for(let t=0;t<=e;t++)n.push(this.getPoint(t/e));return n},getSpacedPoints:function(e=5){const n=[];for(let t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),s=0;n.push(0);for(let t=1;t<=e;t++)i=this.getPoint(t/e),s+=i.distanceTo(r),n.push(s),r=i;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;s=e||t*n[r-1];let a,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-s,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===s)return i/(r-1);const c=n[i];return(i+(s-c)/(n[i+1]-c))/(r-1)},getTangent:function(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=e||(s.isVector2?new Pt:new It);return o.copy(a).sub(s).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(n,t){const e=new It,i=[],r=[],s=[],a=new It,o=new Jt;for(let t=0;t<=n;t++){const e=t/n;i[t]=this.getTangentAt(e,new It),i[t].normalize()}r[0]=new It,s[0]=new It;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,e.set(1,0,0)),h<=l&&(l=h,e.set(0,1,0)),u<=l&&e.set(0,0,1),a.crossVectors(i[0],e).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let t=1;t<=n;t++){if(r[t]=r[t-1].clone(),s[t]=s[t-1].clone(),a.crossVectors(i[t-1],i[t]),a.length()>Number.EPSILON){a.normalize();const n=Math.acos(Ct.clamp(i[t-1].dot(i[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(a,n))}s[t].crossVectors(i[t],r[t])}if(!0===t){let e=Math.acos(Ct.clamp(r[0].dot(r[n]),-1,1));e/=n,i[0].dot(a.crossVectors(r[0],r[n]))>0&&(e=-e);for(let t=1;t<=n;t++)r[t].applyMatrix4(o.makeRotationAxis(i[t],e*t)),s[t].crossVectors(i[t],r[t])}return{tangents:i,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});class al extends sl{constructor(t=0,e=0,n=1,i=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new Pt,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const a=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}al.prototype.isEllipseCurve=!0;class ol extends al{constructor(t,e,n,i,r,s){super(t,e,n,n,i,r,s),this.type="ArcCurve"}}function ll(){let r=0,s=0,a=0,o=0;function c(t,e,n,i){r=t,s=n,a=-3*t+3*e-2*n-i,o=2*t-2*e+n+i}return{initCatmullRom:function(t,e,n,i,r){c(e,n,r*(n-t),r*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,r,s,a){let o=(e-t)/r-(n-t)/(r+s)+(n-e)/s,l=(n-e)/s-(i-e)/(s+a)+(i-n)/a;o*=s,l*=s,c(e,n,o,l)},calc:function(t){const e=t*t;return r+s*t+a*e+o*(e*t)}}}ol.prototype.isArcCurve=!0;const cl=new It,hl=new ll,ul=new ll,dl=new ll;class pl extends sl{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(i,t=new It){const e=t,n=this.points,r=n.length,s=(r-(this.closed?0:1))*i;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=n[(l-1)%r]:(cl.subVectors(n[0],n[1]).add(n[0]),a=cl);const h=n[l%r],u=n[(l+1)%r];if(this.closed||l+2<r?o=n[(l+2)%r]:(cl.subVectors(n[r-1],n[r-2]).add(n[r-1]),o=cl),"centripetal"===this.curveType||"chordal"===this.curveType){const i="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(h),i),e=Math.pow(h.distanceToSquared(u),i),n=Math.pow(u.distanceToSquared(o),i);e<1e-4&&(e=1),t<1e-4&&(t=e),n<1e-4&&(n=e),hl.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,t,e,n),ul.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,t,e,n),dl.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,t,e,n)}else"catmullrom"===this.curveType&&(hl.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),ul.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),dl.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return e.set(hl.calc(c),ul.calc(c),dl.calc(c)),e}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const t=n.points[e];this.points.push(t.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const t=this.points[e];n.points.push(t.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const t=n.points[e];this.points.push((new It).fromArray(t))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function fl(t,e,n,i,r){const s=.5*(i-e),a=.5*(r-n),o=t*t;return(2*n-2*i+s+a)*(t*o)+(-3*n+3*i-2*s-a)*o+s*t+n}function ml(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function gl(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}pl.prototype.isCatmullRomCurve3=!0;class vl extends sl{constructor(t=new Pt,e=new Pt,n=new Pt,i=new Pt){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Pt){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(gl(t,i.x,r.x,s.x,a.x),gl(t,i.y,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}vl.prototype.isCubicBezierCurve=!0;class yl extends sl{constructor(t=new It,e=new It,n=new It,i=new It){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new It){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(gl(t,i.x,r.x,s.x,a.x),gl(t,i.y,r.y,s.y,a.y),gl(t,i.z,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}yl.prototype.isCubicBezierCurve3=!0;class xl extends sl{constructor(t=new Pt,e=new Pt){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Pt){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new Pt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}xl.prototype.isLineCurve=!0;class _l extends sl{constructor(t=new It,e=new It){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new It){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class bl extends sl{constructor(t=new Pt,e=new Pt,n=new Pt){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Pt){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(ml(t,i.x,r.x,s.x),ml(t,i.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}bl.prototype.isQuadraticBezierCurve=!0;class wl extends sl{constructor(t=new It,e=new It,n=new It){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new It){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(ml(t,i.x,r.x,s.x),ml(t,i.y,r.y,s.y),ml(t,i.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}wl.prototype.isQuadraticBezierCurve3=!0;class Ml extends sl{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new Pt){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),a=r-s,o=i[0===s?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(fl(a,o.x,l.x,c.x,h.x),fl(a,o.y,l.y,c.y,h.y)),n}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const t=n.points[e];this.points.push(t.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const t=this.points[e];n.points.push(t.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const t=n.points[e];this.points.push((new Pt).fromArray(t))}return this}}Ml.prototype.isSplineCurve=!0;var Sl=Object.freeze({__proto__:null,ArcCurve:ol,CatmullRomCurve3:pl,CubicBezierCurve:vl,CubicBezierCurve3:yl,EllipseCurve:al,LineCurve:xl,LineCurve3:_l,QuadraticBezierCurve:bl,QuadraticBezierCurve3:wl,SplineCurve:Ml});class Tl extends sl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new xl(e,t))}getPoint(i){const r=i*this.getLength(),s=this.getCurveLengths();let a=0;for(;a<s.length;){if(s[a]>=r){const i=s[a]-r,t=this.curves[a],e=t.getLength(),n=0===e?0:1-i/e;return t.getPointAt(n)}a++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let i=0;for(let t=0,e=this.curves.length;t<e;t++)i+=this.curves[t].getLength(),n.push(i);return this.cacheLengths=n,n}getSpacedPoints(e=40){const n=[];for(let t=0;t<=e;t++)n.push(this.getPoint(t/e));return this.autoClose&&n.push(n[0]),n}getPoints(s=12){const a=[];let o;for(let i=0,r=this.curves;i<r.length;i++){const t=r[i],e=t&&t.isEllipseCurve?2*s:t&&(t.isLineCurve||t.isLineCurve3)?1:t&&t.isSplineCurve?s*t.points.length:s,n=t.getPoints(e);for(let e=0;e<n.length;e++){const t=n[e];o&&o.equals(t)||(a.push(t),o=t)}}return this.autoClose&&a.length>1&&!a[a.length-1].equals(a[0])&&a.push(a[0]),a}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const t=n.curves[e];this.curves.push(t.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const t=this.curves[e];n.curves.push(t.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const t=n.curves[e];this.curves.push((new Sl[t.type]).fromJSON(t))}return this}}class El extends Tl{constructor(t){super(),this.type="Path",this.currentPoint=new Pt,t&&this.setFromPoints(t)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let t=1,e=n.length;t<e;t++)this.lineTo(n[t].x,n[t].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new xl(this.currentPoint.clone(),new Pt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new bl(this.currentPoint.clone(),new Pt(t,e),new Pt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,s){const a=new vl(this.currentPoint.clone(),new Pt(t,e),new Pt(n,i),new Pt(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Ml(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,r,s),this}absarc(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this}ellipse(t,e,n,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,a,o),this}absellipse(t,e,n,i,r,s,a,o){const l=new al(t,e,n,i,r,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Al extends El{constructor(t){super(t),this.uuid=Ct.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(n){const i=[];for(let t=0,e=this.holes.length;t<e;t++)i[t]=this.holes[t].getPoints(n);return i}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const t=n.holes[e];this.holes.push(t.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const t=this.holes[e];n.holes.push(t.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const t=n.holes[e];this.holes.push((new El).fromJSON(t))}return this}}class Ll extends be{constructor(t,e=1){super(),this.type="Light",this.color=new je(t),this.intensity=e}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}Ll.prototype.isLight=!0;class Rl extends Ll{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.groundColor=new je(e)}copy(t){return Ll.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}Rl.prototype.isHemisphereLight=!0;const Cl=new Jt,Pl=new It,Dl=new It;class Il{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Pt(512,512),this.map=null,this.mapPass=null,this.matrix=new Jt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Qn,this._frameExtents=new Pt(1,1),this._viewportCount=1,this._viewports=[new Dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Pl.setFromMatrixPosition(t.matrixWorld),e.position.copy(Pl),Dl.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Dl),e.updateMatrixWorld(),Cl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Nl extends Il{constructor(){super(new Vn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*Ct.RAD2DEG*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Nl.prototype.isSpotLightShadow=!0;class Bl extends Ll{constructor(t,e,n=0,i=Math.PI/3,r=0,s=1){super(t,e),this.type="SpotLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.target=new be,this.distance=n,this.angle=i,this.penumbra=r,this.decay=s,this.shadow=new Nl}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Bl.prototype.isSpotLight=!0;const Ol=new Jt,zl=new It,Fl=new It;class Hl extends Il{constructor(){super(new Vn(90,1,.5,500)),this._frameExtents=new Pt(4,2),this._viewportCount=6,this._viewports=[new Dt(2,1,1,1),new Dt(0,1,1,1),new Dt(3,1,1,1),new Dt(1,1,1,1),new Dt(3,0,1,1),new Dt(1,0,1,1)],this._cubeDirections=[new It(1,0,0),new It(-1,0,0),new It(0,0,1),new It(0,0,-1),new It(0,1,0),new It(0,-1,0)],this._cubeUps=[new It(0,1,0),new It(0,1,0),new It(0,1,0),new It(0,1,0),new It(0,0,1),new It(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),zl.setFromMatrixPosition(t.matrixWorld),n.position.copy(zl),Fl.copy(n.position),Fl.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Fl),n.updateMatrixWorld(),i.makeTranslation(-zl.x,-zl.y,-zl.z),Ol.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ol)}}Hl.prototype.isPointLightShadow=!0;class Ul extends Ll{constructor(t,e,n=0,i=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Hl}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Ul.prototype.isPointLight=!0;class Gl extends kn{constructor(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=be.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Gl.prototype.isOrthographicCamera=!0;class kl extends Il{constructor(){super(new Gl(-5,5,5,-5,.5,500))}}kl.prototype.isDirectionalLightShadow=!0;class Vl extends Ll{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(be.DefaultUp),this.updateMatrix(),this.target=new be,this.shadow=new kl}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Vl.prototype.isDirectionalLight=!0;class Wl extends Ll{constructor(t,e){super(t,e),this.type="AmbientLight"}}Wl.prototype.isAmbientLight=!0;class jl extends Ll{constructor(t,e,n=10,i=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=i}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}jl.prototype.isRectAreaLight=!0;class ql{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new It)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*i),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*i*1.092548),e.addScaledVector(s[5],i*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],n*r*1.092548),e.addScaledVector(s[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*i),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*i),e.addScaledVector(s[5],.858086*i*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*n*r),e.addScaledVector(s[8],.429043*(n*n-i*i)),e}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,n){for(let t=0;t<9;t++)this.coefficients[t].addScaledVector(e.coefficients[t],n);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,n){for(let t=0;t<9;t++)this.coefficients[t].lerp(e.coefficients[t],n);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let t=0;t<9;t++)i[t].fromArray(e,n+3*t);return this}toArray(e=[],n=0){const i=this.coefficients;for(let t=0;t<9;t++)i[t].toArray(e,n+3*t);return e}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}ql.prototype.isSphericalHarmonics3=!0;class Xl extends Ll{constructor(t=new ql,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Xl.prototype.isLightProbe=!0;class Yl extends Qo{constructor(t){super(t),this.textures={}}load(e,n,t,i){const r=this,s=new $o(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{n(r.parse(JSON.parse(t)))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}},t,i)}parse(e){const n=this.textures;function i(t){return void 0===n[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),n[t]}const r=new Do[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=(new je).setHex(e.sheen)),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(r.morphNormals=e.morphNormals),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.vertexTangents&&(r.vertexTangents=e.vertexTangents),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const n in e.uniforms){const t=e.uniforms[n];switch(r.uniforms[n]={},t.type){case"t":r.uniforms[n].value=i(t.value);break;case"c":r.uniforms[n].value=(new je).setHex(t.value);break;case"v2":r.uniforms[n].value=(new Pt).fromArray(t.value);break;case"v3":r.uniforms[n].value=(new It).fromArray(t.value);break;case"v4":r.uniforms[n].value=(new Dt).fromArray(t.value);break;case"m3":r.uniforms[n].value=(new nt).fromArray(t.value);break;case"m4":r.uniforms[n].value=(new Jt).fromArray(t.value);break;default:r.uniforms[n].value=t.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const n in e.extensions)r.extensions[n]=e.extensions[n];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=i(e.map)),void 0!==e.matcap&&(r.matcap=i(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),r.normalScale=(new Pt).fromArray(t)}return void 0!==e.displacementMap&&(r.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=i(e.specularMap)),void 0!==e.envMap&&(r.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Pt).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.transmissionMap&&(r.transmissionMap=i(e.transmissionMap)),r}setTextures(t){return this.textures=t,this}}const Zl={decodeText:function(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let i="";for(let t=0,e=n.length;t<e;t++)i+=String.fromCharCode(n[t]);try{return decodeURIComponent(escape(i))}catch(n){return i}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}};function Jl(){vn.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Ql(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ze.call(this,t,e,n),this.meshPerAttribute=i||1}Jl.prototype=Object.assign(Object.create(vn.prototype),{constructor:Jl,isInstancedBufferGeometry:!0,copy:function(t){return vn.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=vn.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),Ql.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Ql,isInstancedBufferAttribute:!0,copy:function(t){return Ze.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Ze.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});class Kl extends Qo{constructor(t){super(t)}load(e,n,t,i){const r=this,s=new $o(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(t){try{n(r.parse(JSON.parse(t)))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}},t,i)}parse(n){const s={},a={};function i(t,e){if(void 0!==s[e])return s[e];const n=t.interleavedBuffers[e],i=function(t,e){if(void 0!==a[e])return a[e];const n=t.arrayBuffers[e],i=new Uint32Array(n).buffer;return a[e]=i,i}(t,n.buffer),r=new gs(cn(n.type,i),n.stride);return r.uuid=n.uuid,s[e]=r,r}const r=n.isInstancedBufferGeometry?new Jl:new vn,o=n.data.index;if(void 0!==o){const n=cn(o.type,o.array);r.setIndex(new Ze(n,1))}const e=n.data.attributes;for(const s in e){const a=e[s];let t;if(a.isInterleavedBufferAttribute){t=new ys(i(n.data,a.data),a.itemSize,a.offset,a.normalized)}else{const n=cn(a.type,a.array);t=new(a.isInstancedBufferAttribute?Ql:Ze)(n,a.itemSize,a.normalized)}void 0!==a.name&&(t.name=a.name),void 0!==a.usage&&t.setUsage(a.usage),void 0!==a.updateRange&&(t.updateRange.offset=a.updateRange.offset,t.updateRange.count=a.updateRange.count),r.setAttribute(s,t)}const t=n.data.morphAttributes;if(t)for(const s in t){const a=t[s],o=[];for(let e=0,t=a.length;e<t;e++){const r=a[e];let t;if(r.isInterleavedBufferAttribute){t=new ys(i(n.data,r.data),r.itemSize,r.offset,r.normalized)}else{t=new Ze(cn(r.type,r.array),r.itemSize,r.normalized)}void 0!==r.name&&(t.name=r.name),o.push(t)}r.morphAttributes[s]=o}n.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const s=l[t];r.addGroup(s.start,s.count,s.materialIndex)}const c=n.data.boundingSphere;if(void 0!==c){const n=new It;void 0!==c.center&&n.fromArray(c.center),r.boundingSphere=new Gt(n,c.radius)}return n.name&&(r.name=n.name),n.userData&&(r.userData=n.userData),r}}const $l={UVMapping:n,CubeReflectionMapping:S,CubeRefractionMapping:T,EquirectangularReflectionMapping:a,EquirectangularRefractionMapping:o,CubeUVReflectionMapping:E,CubeUVRefractionMapping:A},tc={RepeatWrapping:H,ClampToEdgeWrapping:U,MirroredRepeatWrapping:G},ec={NearestFilter:k,NearestMipmapNearestFilter:V,NearestMipmapLinearFilter:j,LinearFilter:q,LinearMipmapNearestFilter:X,LinearMipmapLinearFilter:Y};function nc(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Qo.call(this,t),this.options={premultiplyAlpha:"none"}}nc.prototype=Object.assign(Object.create(Qo.prototype),{constructor:nc,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,n,t,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Yo.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){n&&n(s),r.manager.itemEnd(e)},0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(t){Yo.add(e,t),n&&n(t),r.manager.itemEnd(e)}).catch(function(t){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});class ic{constructor(){this.type="ShapePath",this.color=new je,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new El,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(n,s){function t(i){const r=[];for(let n=0,t=i.length;n<t;n++){const t=i[n],e=new Al;e.curves=t.curves,r.push(e)}return r}function a(a,o){const t=o.length;let l=!1;for(let r=t-1,s=0;s<t;r=s++){let t=o[r],e=o[s],n=e.x-t.x,i=e.y-t.y;if(Math.abs(i)>Number.EPSILON){if(i<0&&(t=o[s],n=-n,e=o[r],i=-i),a.y<t.y||a.y>e.y)continue;if(a.y===t.y){if(a.x===t.x)return!0}else{const o=i*(a.x-t.x)-n*(a.y-t.y);if(0===o)return!0;if(o<0)continue;l=!l}}else{if(a.y!==t.y)continue;if(e.x<=a.x&&a.x<=t.x||t.x<=a.x&&a.x<=e.x)return!0}}return l}const o=no.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===s)return t(i);let l,r,c;const h=[];if(1===i.length)return r=i[0],c=new Al,c.curves=r.curves,h.push(c),h;let u=!o(i[0].getPoints());u=n?!u:u;const d=[],p=[];let f,m,g=[],v=0;p[v]=void 0,g[v]=[];for(let t=0,e=i.length;t<e;t++)r=i[t],f=r.getPoints(),l=o(f),l=n?!l:l,l?(!u&&p[v]&&v++,p[v]={s:new Al,p:f},p[v].s.curves=r.curves,u&&v++,g[v]=[]):g[v].push({h:r,p:f[0]});if(!p[0])return t(i);if(p.length>1){let r=!1;const s=[];for(let t=0,e=p.length;t<e;t++)d[t]=[];for(let i=0,t=p.length;i<t;i++){const o=g[i];for(let n=0;n<o.length;n++){const l=o[n];let e=!0;for(let t=0;t<p.length;t++)a(l.p,p[t].p)&&(i!==t&&s.push({froms:i,tos:t,hole:n}),e?(e=!1,d[t].push(l)):r=!0);e&&d[i].push(l)}}s.length>0&&(r||(g=d))}for(let t=0,e=p.length;t<e;t++){c=p[t].s,h.push(c),m=g[t];for(let t=0,e=m.length;t<e;t++)c.holes.push(m[t].h)}return h}}class rc{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=function(e,n,i){const r=Array.from(e),s=n/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*s,o=[];let l=0,c=0;for(let t=0;t<r.length;t++){const n=r[t];if("\n"===n)l=0,c-=a;else{const e=sc(n,s,l,c,i);l+=e.offsetX,o.push(e.path)}}return o}(t,e,this.data);for(let t=0,e=i.length;t<e;t++)Array.prototype.push.apply(n,i[t].toShapes());return n}}function sc(n,i,r,s,t){const e=t.glyphs[n]||t.glyphs["?"];if(!e)return void console.error('THREE.Font: character "'+n+'" does not exists in font family '+t.familyName+".");const a=new ic;let o,l,c,h,u,d,p,f;if(e.o){const n=e._cachedOutline||(e._cachedOutline=e.o.split(" "));for(let t=0,e=n.length;t<e;){switch(n[t++]){case"m":o=n[t++]*i+r,l=n[t++]*i+s,a.moveTo(o,l);break;case"l":o=n[t++]*i+r,l=n[t++]*i+s,a.lineTo(o,l);break;case"q":c=n[t++]*i+r,h=n[t++]*i+s,u=n[t++]*i+r,d=n[t++]*i+s,a.quadraticCurveTo(u,d,c,h);break;case"b":c=n[t++]*i+r,h=n[t++]*i+s,u=n[t++]*i+r,d=n[t++]*i+s,p=n[t++]*i+r,f=n[t++]*i+s,a.bezierCurveTo(u,d,p,f,c,h)}}}return{offsetX:e.ha*i,path:a}}rc.prototype.isFont=!0;let ac;const oc={getContext:function(){return void 0===ac&&(ac=new(window.AudioContext||window.webkitAudioContext)),ac},setContext:function(t){ac=t}};class lc extends Qo{constructor(t){super(t)}load(e,n,t,i){const r=this,s=new $o(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(t){try{const e=t.slice(0);oc.getContext().decodeAudioData(e,function(t){n(t)})}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}},t,i)}}class cc extends Xl{constructor(t,e,n=1){super(void 0,n);const i=(new je).set(t),r=(new je).set(e),s=new It(i.r,i.g,i.b),a=new It(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}cc.prototype.isHemisphereLightProbe=!0;class hc extends Xl{constructor(t,e=1){super(void 0,e);const n=(new je).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}hc.prototype.isAmbientLightProbe=!0;const uc=new Jt,dc=new Jt;class pc{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=fc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=fc();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function fc(){return("undefined"==typeof performance?Date:performance).now()}const mc=new It,gc=new ht,vc=new It,yc=new It;class xc extends be{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const _c=new It,bc=new ht,wc=new It,Mc=new It;class Sc{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const n=this.getFrequencyData();for(let t=0;t<n.length;t++)e+=n[t];return e/n.length}}class Tc{constructor(t,e,n){let i,r,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==i;++t)n[r+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const n=this.valueSize,i=this.buffer,r=t*n+n,e=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){const t=n*this._origIndex;this._mixBufferRegion(i,r,t,1-e,n)}s>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let t=n,e=n+n;t!==e;++t)if(i[t]!==i[t+n]){a.setValue(i,r);break}}saveOriginalState(){const t=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;t.getValue(n,r);for(let t=i,e=r;t!==e;++t)n[t]=n[r+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,n=e+this.valueSize;for(let t=e;t<n;t++)this.buffer[t]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let t=0;t<this.valueSize;t++)this.buffer[n+t]=this.buffer[e+t]}_select(e,n,i,t,r){if(t>=.5)for(let t=0;t!==r;++t)e[n+t]=e[i+t]}_slerp(t,e,n,i){ht.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const s=this._workIndex*r;ht.multiplyQuaternionsFlat(t,s,t,e,t,n),ht.slerpFlat(t,e,t,e,t,s,i)}_lerp(e,n,i,r,s){const a=1-r;for(let t=0;t!==s;++t){const s=n+t;e[s]=e[s]*a+e[i+t]*r}}_lerpAdditive(e,n,i,r,s){for(let t=0;t!==s;++t){const s=n+t;e[s]=e[s]+e[i+t]*r}}}const Ec="\\[\\]\\.:\\/",Ac=new RegExp("[\\[\\]\\.:\\/]","g"),Lc="[^\\[\\]\\.:\\/]",Rc="[^"+Ec.replace("\\.","")+"]",Cc=/((?:WC+[\/:])*)/.source.replace("WC",Lc),Pc=/(WCOD+)?/.source.replace("WCOD",Rc),Dc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Lc),Ic=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Lc),Nc=new RegExp("^"+Cc+Pc+Dc+Ic+"$"),Bc=["material","materials","bones"];function Oc(t,e,n){const i=n||zc.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function zc(t,e,n){this.path=e,this.parsedPath=n||zc.parseTrackName(e),this.node=zc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Oc.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)},setValue:function(n,i){const r=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=r.length;t!==e;++t)r[t].setValue(n,i)},bind:function(){const n=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=n.length;t!==e;++t)n[t].bind()},unbind:function(){const n=this._bindings;for(let t=this._targetGroup.nCachedObjects_,e=n.length;t!==e;++t)n[t].unbind()}}),Object.assign(zc,{Composite:Oc,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new zc.Composite(t,e,n):new zc(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Ac,"")},parseTrackName:function(t){const e=Nc.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Bc.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(e,s){if(!s||""===s||"."===s||-1===s||s===e.name||s===e.uuid)return e;if(e.skeleton){const t=e.skeleton.getBoneByName(s);if(void 0!==t)return t}if(e.children){const r=function(i){for(let n=0;n<i.length;n++){const t=i[n];if(t.name===s||t.uuid===s)return t;const e=r(t.children);if(e)return e}return null},t=r(e.children);if(t)return t}return null}}),Object.assign(zc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(n,i){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)n[i++]=r[t]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(n,i){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=n[i++]},function(n,i){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=n[i++];this.targetObject.needsUpdate=!0},function(n,i){const r=this.resolvedProperty;for(let t=0,e=r.length;t!==e;++t)r[t]=n[i++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let n=this.node;const t=this.parsedPath,i=t.objectName,e=t.propertyName;let r=t.propertyIndex;if(n||(n=zc.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let e=t.objectIndex;switch(i){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let t=0;t<n.length;t++)if(n[t].name===e){e=t;break}break;default:if(void 0===n[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[i]}if(void 0!==e){if(void 0===n[e])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[e]}}const s=n[e];if(void 0===s){const i=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+e+" but it wasn't found.",n)}let a=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===e){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[r]&&(r=n.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=e;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(zc.prototype,{_getValue_unbound:zc.prototype.getValue,_setValue_unbound:zc.prototype.setValue});class Fc{constructor(){this.uuid=Ct.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let t=0,e=arguments.length;t!==e;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const r=this._objects,s=this._indicesByUUID,a=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length;let h,u=r.length,d=this.nCachedObjects_;for(let t=0,e=arguments.length;t!==e;++t){const n=arguments[t],e=n.uuid;let i=s[e];if(void 0===i){i=u++,s[e]=i,r.push(n);for(let t=0,e=c;t!==e;++t)l[t].push(new zc(n,a[t],o[t]))}else if(i<d){h=r[i];const u=--d,t=r[u];s[t.uuid]=i,r[i]=t,s[e]=u,r[u]=n;for(let e=0,t=c;e!==t;++e){const s=l[e],c=s[u];let t=s[i];s[i]=c,void 0===t&&(t=new zc(n,a[e],o[e])),s[u]=t}}else r[i]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=d}remove(){const s=this._objects,a=this._indicesByUUID,o=this._bindings,l=o.length;let c=this.nCachedObjects_;for(let t=0,e=arguments.length;t!==e;++t){const e=arguments[t],i=e.uuid,r=a[i];if(void 0!==r&&r>=c){const n=c++,t=s[n];a[t.uuid]=r,s[r]=t,a[i]=n,s[n]=e;for(let t=0,e=l;t!==e;++t){const a=o[t],l=a[n],c=a[r];a[r]=l,a[n]=c}}}this.nCachedObjects_=c}uncache(){const s=this._objects,a=this._indicesByUUID,o=this._bindings,l=o.length;let c=this.nCachedObjects_,h=s.length;for(let e=0,t=arguments.length;e!==t;++e){const t=arguments[e].uuid,r=a[t];if(void 0!==r)if(delete a[t],r<c){const n=--c,t=s[n],i=--h,e=s[i];a[t.uuid]=r,s[r]=t,a[e.uuid]=n,s[n]=e,s.pop();for(let t=0,e=l;t!==e;++t){const a=o[t],l=a[n],c=a[i];a[r]=l,a[n]=c,a.pop()}}else{const c=--h,t=s[c];c>0&&(a[t.uuid]=r),s[r]=t,s.pop();for(let t=0,e=l;t!==e;++t){const a=o[t];a[r]=a[c],a.pop()}}}this.nCachedObjects_=c}subscribe_(n,i){const t=this._bindingsIndicesByPath;let r=t[n];const e=this._bindings;if(void 0!==r)return e[r];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);r=e.length,t[n]=r,s.push(n),a.push(i),e.push(h);for(let t=c,e=o.length;t!==e;++t){const r=o[t];h[t]=new zc(r,n,i)}return h}unsubscribe_(s){const a=this._bindingsIndicesByPath,o=a[s];if(void 0!==o){const t=this._paths,e=this._parsedPaths,n=this._bindings,i=n.length-1,r=n[i];a[s[i]]=o,n[o]=r,n.pop(),e[o]=e[i],e.pop(),t[o]=t[i],t.pop()}}}Fc.prototype.isAnimationObjectGroup=!0;class Hc{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:y,endingEnd:y};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(i,r,s){if(i.fadeOut(r),this.fadeIn(r),s){const s=this._clip.duration,t=i._clip.duration,e=t/s,n=s/t;i.warp(1,e,r),this.warp(n,1,r)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(n,i,t,r){if(!this.enabled)return void this._updateWeight(n);const e=this._startTime;if(null!==e){const r=(n-e)*t;if(r<0||0===t)return;this._startTime=null,i=t*r}i*=this._updateTimeScale(n);const s=this._updateTime(i),a=this._updateWeight(n);if(a>0){const n=this._interpolants,i=this._propertyBindings;switch(this.blendMode){case w:for(let t=0,e=n.length;t!==e;++t)n[t].evaluate(s),i[t].accumulateAdditive(a);break;case b:default:for(let t=0,e=n.length;t!==e;++t)n[t].evaluate(s),i[t].accumulate(r,a)}}}_updateWeight(n){let i=0;if(this.enabled){i=this.weight;const e=this._weightInterpolant;if(null!==e){const t=e.evaluate(n)[0];i*=t,n>e.parameterPositions[1]&&(this.stopFading(),0===t&&(this.enabled=!1))}}return this._effectiveWeight=i,i}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const t=this._timeScaleInterpolant;if(null!==t){n*=t.evaluate(e)[0],e>t.parameterPositions[1]&&(this.stopWarping(),0===n?this.paused=!0:this.timeScale=n)}}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=2202===i;if(0===e)return-1===s?r:a&&1==(1&s)?n-r:r;if(2200===i){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=n)r=n;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===s&&(e>=0?(s=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=n||r<0){const i=Math.floor(r/n);r-=n*i,s+=Math.abs(i);const t=this.repetitions-s;if(t<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===t){const n=e<0;this._setEndings(n,!n,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=r;if(a&&1==(1&s))return n-r}return r}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=x,i.endingEnd=x):(i.endingStart=t?this.zeroSlopeAtStart?x:y:_,i.endingEnd=e?this.zeroSlopeAtEnd?x:y:_)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=n,this}}class Uc extends z{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,n){const i=t._localRoot||this._root,r=t._clip.tracks,s=r.length,a=t._propertyBindings,o=t._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];void 0===h&&(h={},c[l]=h);for(let e=0;e!==s;++e){const s=r[e],c=s.name;let t=h[c];if(void 0!==t)a[e]=t;else{if(t=a[e],void 0!==t){null===t._cacheIndex&&(++t.referenceCount,this._addInactiveBinding(t,l,c));continue}const r=n&&n._propertyBindings[e].binding.parsedPath;t=new Tc(zc.create(i,c,r),s.ValueTypeName,s.getValueSize()),++t.referenceCount,this._addInactiveBinding(t,l,c),a[e]=t}o[e].resultBuffer=t.buffer}}_activateAction(i){if(!this._isActiveAction(i)){if(null===i._cacheIndex){const t=(i._localRoot||this._root).uuid,e=i._clip.uuid,n=this._actionsByClip[e];this._bindAction(i,n&&n.knownActions[0]),this._addInactiveAction(i,e,t)}const n=i._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const t=n[e];0==t.useCount++&&(this._lendBinding(t),t.saveOriginalState())}this._lendAction(i)}}_deactivateAction(t){if(this._isActiveAction(t)){const n=t._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const t=n[e];0==--t.useCount&&(t.restoreOriginalState(),this._takeBackBinding(t))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const n=t._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const t=n[e];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];void 0===s&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new Oo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let s="string"==typeof t?qo.findByName(i,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:b),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new Hc(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?qo.findByName(n,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let t=0;t!==i;++t){n[t]._update(r,e,s,a)}const o=this._bindings,l=this._nActiveBindings;for(let t=0;t!==l;++t)o[t].apply(a);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(n){const i=this._actions,t=n.uuid,r=this._actionsByClip,s=r[t];if(void 0!==s){const n=s.knownActions;for(let e=0,t=n.length;e!==t;++e){const r=n[e];this._deactivateAction(r);const s=r._cacheIndex,t=i[i.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,t._cacheIndex=s,i[s]=t,i.pop(),this._removeInactiveBindingsForAction(r)}delete r[t]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Uc.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Gc{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Gc(void 0===this.value.clone?this.value:this.value.clone())}}function kc(t,e,n){gs.call(this,t,e),this.meshPerAttribute=n||1}function Vc(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function Wc(t,e,n=0,i=1/0){this.ray=new Zt(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new oe,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function jc(t,e){return t.distance-e.distance}function qc(t,n,i,r){if(t.layers.test(n.layers)&&t.raycast(n,i),!0===r){const r=t.children;for(let t=0,e=r.length;t<e;t++)qc(r[t],n,i,!0)}}kc.prototype=Object.assign(Object.create(gs.prototype),{constructor:kc,isInstancedInterleavedBuffer:!0,copy:function(t){return gs.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=gs.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=gs.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Vc.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Vc.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Wc.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e=!1,n=[]){return qc(t,this,n,e),n.sort(jc),n},intersectObjects:function(n,i=!1,r=[]){for(let t=0,e=n.length;t<e;t++)qc(n[t],this,r,i);return r.sort(jc),r}});const Xc=new Pt;class Yc{constructor(t=new Pt(1/0,1/0),e=new Pt(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(n){this.makeEmpty();for(let t=0,e=n.length;t<e;t++)this.expandByPoint(n[t]);return this}setFromCenterAndSize(t,e){const n=Xc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Pt),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Pt),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Pt),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Pt),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Xc.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Yc.prototype.isBox2=!0;const Zc=new It,Jc=new It;class Qc{constructor(t=new It,e=new It){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new It),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new It),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new It),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Zc.subVectors(t,this.start),Jc.subVectors(this.end,this.start);const n=Jc.dot(Jc);let i=Jc.dot(Zc)/n;return e&&(i=Ct.clamp(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new It),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}function Kc(t){be.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Kc.prototype=Object.create(be.prototype),Kc.prototype.constructor=Kc,Kc.prototype.isImmediateRenderObject=!0;const $c=new It;const th=new It,eh=new Jt,nh=new Jt;class ih extends la{constructor(t){const e=rh(t),n=new vn,i=[],r=[],s=new je(0,0,1),a=new je(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new sn(i,3)),n.setAttribute("color",new sn(r,3));super(n,new $s({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const i=this.bones,e=this.geometry,r=e.getAttribute("position");nh.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<i.length;e++){const t=i[e];t.parent&&t.parent.isBone&&(eh.multiplyMatrices(nh,t.matrixWorld),th.setFromMatrixPosition(eh),r.setXYZ(n,th.x,th.y,th.z),eh.multiplyMatrices(nh,t.parent.matrixWorld),th.setFromMatrixPosition(eh),r.setXYZ(n+1,th.x,th.y,th.z),n+=2)}e.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function rh(e){const n=[];e&&e.isBone&&n.push(e);for(let t=0;t<e.children.length;t++)n.push.apply(n,rh(e.children[t]));return n}const sh=new It,ah=new je,oh=new je;class lh extends la{constructor(t=10,i=10,r=4473924,s=8947848){r=new je(r),s=new je(s);const a=i/2,o=t/i,l=t/2,c=[],h=[];for(let t=0,e=0,n=-l;t<=i;t++,n+=o){c.push(-l,0,n,l,0,n),c.push(n,0,-l,n,0,l);const i=t===a?r:s;i.toArray(h,e),e+=3,i.toArray(h,e),e+=3,i.toArray(h,e),e+=3,i.toArray(h,e),e+=3}const e=new vn;e.setAttribute("position",new sn(c,3)),e.setAttribute("color",new sn(h,3));super(e,new $s({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const ch=new It,hh=new It,uh=new It;const dh=new It,ph=new kn;function fh(n,t,e,i,r,s,a){dh.set(r,s,a).unproject(i);const o=t[n];if(void 0!==o){const n=e.getAttribute("position");for(let t=0,e=o.length;t<e;t++)n.setXYZ(o[t],dh.x,dh.y,dh.z)}}const mh=new pt;class gh extends la{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new vn;r.setIndex(new Ze(n,1)),r.setAttribute("position",new Ze(i,3)),super(r,new $s({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&mh.setFromObject(this.object),mh.isEmpty())return;const e=mh.min,n=mh.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return la.prototype.copy.call(this,t),this.object=t.object,this}}const vh=new It;let yh,xh;class _h extends la{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new vn;n.setAttribute("position",new sn(e,3)),n.setAttribute("color",new sn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new $s({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const bh=new Float32Array(1),wh=new Int32Array(bh.buffer),Mh={toHalfFloat:function(t){bh[0]=t;const e=wh[0];let n=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?n:r>142?(n|=31744,n|=(255==r?0:1)&&8388607&e,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=1&i,n)}},Sh=Math.pow(2,8),Th=[.125,.215,.35,.446,.526,.582],Eh=5+Th.length,Ah=20,Lh={[Rt]:0,[M]:1,[R]:2,[C]:3,[P]:4,[D]:5,[L]:6},Rh=new qe({side:1,depthWrite:!1,depthTest:!1}),Ch=new Bn(new zn,Rh),Ph=new Gl,{_lodPlanes:Dh,_sizeLods:Ih,_sigmas:Nh}=kh(),Bh=new je;let Oh=null;const zh=(1+Math.sqrt(5))/2,Fh=1/zh,Hh=[new It(1,1,1),new It(-1,1,1),new It(1,1,-1),new It(-1,1,-1),new It(0,zh,Fh),new It(0,zh,-Fh),new It(Fh,0,zh),new It(-Fh,0,zh),new It(zh,Fh,0),new It(-zh,Fh,0)];function Uh(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);t.multiplyScalar(Math.pow(2,-n));return(n+128)/255}function Gh(t){return void 0!==t&&t.type===Tt&&(t.encoding===Rt||t.encoding===M||t.encoding===L)}function kh(){const g=[],v=[],y=[];let x=8;for(let m=0;m<Eh;m++){const t=Math.pow(2,x);v.push(t);let e=1/t;m>4?e=Th[m-8+4-1]:0==m&&(e=0),y.push(e);const n=1/(t-1),i=-n/2,r=1+n/2,s=[i,i,r,i,r,r,i,i,r,r,i,r],a=6,o=6,l=3,c=2,h=1,u=new Float32Array(l*o*a),d=new Float32Array(c*o*a),p=new Float32Array(h*o*a);for(let e=0;e<a;e++){const v=e%3*2/3-1,y=e>2?0:-1,x=[v,y,0,v+2/3,y,0,v+2/3,y+1,0,v,y,0,v+2/3,y+1,0,v,y+1,0];u.set(x,l*o*e),d.set(s,c*o*e);const t=[e,e,e,e,e,e];p.set(t,h*o*e)}const f=new vn;f.setAttribute("position",new Ze(u,l)),f.setAttribute("uv",new Ze(d,c)),f.setAttribute("faceIndex",new Ze(p,h)),g.push(f),x>4&&x--}return{_lodPlanes:g,_sizeLods:v,_sigmas:y}}function Vh(t){const e=new lt(3*Sh,3*Sh,t);return e.texture.mapping=E,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Wh(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function jh(){const t=new Pt(1,1);return new Mo({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Lh[3e3]},outputEncoding:{value:Lh[3e3]}},vertexShader:Xh(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${Yh()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function qh(){return new Mo({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Lh[3e3]},outputEncoding:{value:Lh[3e3]}},vertexShader:Xh(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${Yh()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function Xh(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Yh(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}sl.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(sl.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},El.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},lh.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},ih.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Qo.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Zl.extractUrlBase(t)},Qo.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Yc.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Yc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Yc.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Yc.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},pt.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},pt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},pt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},pt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},pt.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Gt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Qn.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Qc.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Ct.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},Ct.nearestPowerOfTwo=function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ct.floorPowerOfTwo(t)},Ct.nextPowerOfTwo=function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ct.ceilPowerOfTwo(t)},nt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},nt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},nt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},nt.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Jt.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Jt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Jt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new It).setFromMatrixColumn(this,3)},Jt.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Jt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Jt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Jt.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Jt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Jt.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Jt.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Jt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Jt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Jt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Jt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Jt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Jt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Jt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Jt.prototype.makeFrustum=function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)},Jt.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Te.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},ht.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},ht.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Zt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Zt.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Zt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Oe.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Oe.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Oe.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Oe.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Oe.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Oe.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Oe.getBarycoord(t,e,n,i,r)},Oe.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Oe.getNormal(t,e,n,i)},Al.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Al.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new so(this,t)},Al.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new po(this,t)},Pt.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Pt.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},Pt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},It.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},It.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},It.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},It.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},It.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},It.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},It.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},It.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},It.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Dt.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Dt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},be.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},be.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},be.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},be.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},be.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(be.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Bn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Bn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Vs.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(sl.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),Vn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Ll.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ze.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===B},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(B)}}}),Ze.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?B:N),this},Ze.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ze.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},vn.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},vn.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ze(arguments[1],arguments[2])))},vn.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},vn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},vn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},vn.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},vn.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(vn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Jl.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Wc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(gs.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===B},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),gs.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?B:N),this},gs.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},so.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},so.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},so.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ms.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Gc.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Fe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new je}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(To.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(Gn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),us.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},us.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},us.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},us.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},us.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},us.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},us.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},us.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},us.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},us.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},us.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},us.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},us.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},us.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},us.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},us.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},us.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},us.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},us.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},us.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},us.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},us.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},us.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},us.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},us.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(us.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?M:Rt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ns.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(lt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),xc.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new lc).load(t,function(t){e.setBuffer(t)}),this},Sc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},jn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},jn.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)},rt.crossOrigin=void 0,rt.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new rl;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},rt.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new nl;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},rt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},rt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Zh={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:e}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=e),t.ACESFilmicToneMapping=4,t.AddEquation=W,t.AddOperation=2,t.AdditiveAnimationBlendMode=w,t.AdditiveBlending=2,t.AlphaFormat=1021,t.AlwaysDepth=1,t.AlwaysStencilFunc=519,t.AmbientLight=Wl,t.AmbientLightProbe=hc,t.AnimationClip=qo,t.AnimationLoader=class extends Qo{constructor(t){super(t)}load(e,n,t,i){const r=this,s=new $o(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(t){try{n(r.parse(JSON.parse(t)))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}},t,i)}parse(n){const i=[];for(let e=0;e<n.length;e++){const t=qo.parse(n[e]);i.push(t)}return i}},t.AnimationMixer=Uc,t.AnimationObjectGroup=Fc,t.AnimationUtils=Io,t.ArcCurve=ol,t.ArrayCamera=as,t.ArrowHelper=class extends be{constructor(t=new It(0,0,1),e=new It(0,0,0),n=1,i=16776960,r=.2*n,s=.2*r){super(),this.type="ArrowHelper",void 0===yh&&(yh=new vn,yh.setAttribute("position",new sn([0,0,0,0,1,0],3)),xh=new wa(0,.5,1,5,1),xh.translate(0,-.5,0)),this.position.copy(e),this.line=new sa(yh,new $s({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Bn(xh,new qe({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{vh.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(vh,t)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}},t.Audio=xc,t.AudioAnalyser=Sc,t.AudioContext=oc,t.AudioListener=class extends be{constructor(){super(),this.type="AudioListener",this.context=oc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new pc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(mc,gc,vc),yc.set(0,0,-1).applyQuaternion(gc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(mc.x,t),e.positionY.linearRampToValueAtTime(mc.y,t),e.positionZ.linearRampToValueAtTime(mc.z,t),e.forwardX.linearRampToValueAtTime(yc.x,t),e.forwardY.linearRampToValueAtTime(yc.y,t),e.forwardZ.linearRampToValueAtTime(yc.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(mc.x,mc.y,mc.z),e.setOrientation(yc.x,yc.y,yc.z,n.x,n.y,n.z)}},t.AudioLoader=lc,t.AxesHelper=_h,t.AxisHelper=function(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new _h(t)},t.BackSide=1,t.BasicDepthPacking=3200,t.BasicShadowMap=0,t.BinaryTextureLoader=function(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new il(t)},t.Bone=Ws,t.BooleanKeyframeTrack=Ho,t.BoundingBoxHelper=function(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new gh(t,e)},t.Box2=Yc,t.Box3=pt,t.Box3Helper=class extends la{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new vn;i.setIndex(new Ze(n,1)),i.setAttribute("position",new sn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new $s({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}},t.BoxBufferGeometry=zn,t.BoxGeometry=zn,t.BoxHelper=gh,t.BufferAttribute=Ze,t.BufferGeometry=vn,t.BufferGeometryLoader=Kl,t.ByteType=1010,t.Cache=Yo,t.Camera=kn,t.CameraHelper=class extends la{constructor(t){const e=new vn,n=new $s({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={},a=new je(16755200),o=new je(16711680),l=new je(43775),c=new je(16777215),h=new je(3355443);function u(t,e,n){d(t,n),d(e,n)}function d(t,e){i.push(0,0,0),r.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(i.length/3-1)}u("n1","n2",a),u("n2","n4",a),u("n4","n3",a),u("n3","n1",a),u("f1","f2",a),u("f2","f4",a),u("f4","f3",a),u("f3","f1",a),u("n1","f1",a),u("n2","f2",a),u("n3","f3",a),u("n4","f4",a),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),e.setAttribute("position",new sn(i,3)),e.setAttribute("color",new sn(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const t=this.geometry,e=this.pointMap;ph.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),fh("c",e,t,ph,0,0,-1),fh("t",e,t,ph,0,0,1),fh("n1",e,t,ph,-1,-1,-1),fh("n2",e,t,ph,1,-1,-1),fh("n3",e,t,ph,-1,1,-1),fh("n4",e,t,ph,1,1,-1),fh("f1",e,t,ph,-1,-1,1),fh("f2",e,t,ph,1,-1,1),fh("f3",e,t,ph,-1,1,1),fh("f4",e,t,ph,1,1,1),fh("u1",e,t,ph,.7,1.1,-1),fh("u2",e,t,ph,-.7,1.1,-1),fh("u3",e,t,ph,0,2,-1),fh("cf1",e,t,ph,-1,0,1),fh("cf2",e,t,ph,1,0,1),fh("cf3",e,t,ph,0,-1,1),fh("cf4",e,t,ph,0,1,1),fh("cn1",e,t,ph,-1,0,-1),fh("cn2",e,t,ph,1,0,-1),fh("cn3",e,t,ph,0,-1,-1),fh("cn4",e,t,ph,0,1,-1),t.getAttribute("position").needsUpdate=!0}},t.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},t.CanvasTexture=xa,t.CatmullRomCurve3=pl,t.CineonToneMapping=3,t.CircleBufferGeometry=ba,t.CircleGeometry=ba,t.ClampToEdgeWrapping=U,t.Clock=pc,t.Color=je,t.ColorKeyframeTrack=Uo,t.CompressedTexture=ya,t.CompressedTextureLoader=tl,t.ConeBufferGeometry=Ma,t.ConeGeometry=Ma,t.CubeCamera=jn,t.CubeReflectionMapping=S,t.CubeRefractionMapping=T,t.CubeTexture=qn,t.CubeTextureLoader=nl,t.CubeUVReflectionMapping=E,t.CubeUVRefractionMapping=A,t.CubicBezierCurve=vl,t.CubicBezierCurve3=yl,t.CubicInterpolant=Bo,t.CullFaceBack=1,t.CullFaceFront=2,t.CullFaceFrontBack=3,t.CullFaceNone=0,t.Curve=sl,t.CurvePath=Tl,t.CustomBlending=5,t.CustomToneMapping=5,t.CylinderBufferGeometry=wa,t.CylinderGeometry=wa,t.Cylindrical=class{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}},t.DataTexture=Yn,t.DataTexture2DArray=yi,t.DataTexture3D=xi,t.DataTextureLoader=il,t.DataUtils=Mh,t.DecrementStencilOp=7683,t.DecrementWrapStencilOp=34056,t.DefaultLoadingManager=Jo,t.DepthFormat=$,t.DepthStencilFormat=tt,t.DepthTexture=_a,t.DirectionalLight=Vl,t.DirectionalLightHelper=class extends be{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let i=new vn;i.setAttribute("position",new sn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new $s({fog:!1,toneMapped:!1});this.lightPlane=new sa(i,r),this.add(this.lightPlane),i=new vn,i.setAttribute("position",new sn([0,0,0,0,0,1],3)),this.targetLine=new sa(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ch.setFromMatrixPosition(this.light.matrixWorld),hh.setFromMatrixPosition(this.light.target.matrixWorld),uh.subVectors(hh,ch),this.lightPlane.lookAt(hh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hh),this.targetLine.scale.z=uh.length()}},t.DiscreteInterpolant=zo,t.DodecahedronBufferGeometry=Ta,t.DodecahedronGeometry=Ta,t.DoubleSide=2,t.DstAlphaFactor=206,t.DstColorFactor=208,t.DynamicBufferAttribute=function(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ze(t,e).setUsage(B)},t.DynamicCopyUsage=35050,t.DynamicDrawUsage=B,t.DynamicReadUsage=35049,t.EdgesGeometry=Ca,t.EdgesHelper=function(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new la(new Ca(t.geometry),new $s({color:void 0!==e?e:16777215}))},t.EllipseCurve=al,t.EqualDepth=4,t.EqualStencilFunc=514,t.EquirectangularReflectionMapping=a,t.EquirectangularRefractionMapping=o,t.Euler=ae,t.EventDispatcher=z,t.ExtrudeBufferGeometry=so,t.ExtrudeGeometry=so,t.FaceColors=1,t.FileLoader=$o,t.FlatShading=1,t.Float16BufferAttribute=rn,t.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new sn(t,e)},t.Float32BufferAttribute=sn,t.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new an(t,e)},t.Float64BufferAttribute=an,t.FloatType=Et,t.Fog=fs,t.FogExp2=ps,t.Font=rc,t.FontLoader=class extends Qo{constructor(t){super(t)}load(t,i,e,n){const r=this,s=new $o(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(e){let n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}const t=r.parse(n);i&&i(t)},e,n)}parse(t){return new rc(t)}},t.FrontSide=0,t.Frustum=Qn,t.GLBufferAttribute=Vc,t.GLSL1="100",t.GLSL3=O,t.GammaEncoding=L,t.GreaterDepth=6,t.GreaterEqualDepth=5,t.GreaterEqualStencilFunc=518,t.GreaterStencilFunc=516,t.GridHelper=lh,t.Group=os,t.HalfFloatType=At,t.HemisphereLight=Rl,t.HemisphereLightHelper=class extends be{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new co(e);i.rotateY(.5*Math.PI),this.material=new qe({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),s=new Float32Array(3*r.count);i.setAttribute("color",new Ze(s,3)),this.add(new Bn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const i=t.geometry.getAttribute("color");ah.copy(this.light.color),oh.copy(this.light.groundColor);for(let e=0,n=i.count;e<n;e++){const t=e<n/2?ah:oh;i.setXYZ(e,t.r,t.g,t.b)}i.needsUpdate=!0}t.lookAt(sh.setFromMatrixPosition(this.light.matrixWorld).negate())}},t.HemisphereLightProbe=cc,t.IcosahedronBufferGeometry=oo,t.IcosahedronGeometry=oo,t.ImageBitmapLoader=nc,t.ImageLoader=el,t.ImageUtils=rt,t.ImmediateRenderObject=Kc,t.IncrementStencilOp=7682,t.IncrementWrapStencilOp=34055,t.InstancedBufferAttribute=Ql,t.InstancedBufferGeometry=Jl,t.InstancedInterleavedBuffer=kc,t.InstancedMesh=Ks,t.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new $e(t,e)},t.Int16BufferAttribute=$e,t.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new en(t,e)},t.Int32BufferAttribute=en,t.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Je(t,e)},t.Int8BufferAttribute=Je,t.IntType=1013,t.InterleavedBuffer=gs,t.InterleavedBufferAttribute=ys,t.Interpolant=No,t.InterpolateDiscrete=i,t.InterpolateLinear=g,t.InterpolateSmooth=v,t.InvertStencilOp=5386,t.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},t.KeepStencilOp=I,t.KeyframeTrack=Fo,t.LOD=zs,t.LatheBufferGeometry=lo,t.LatheGeometry=lo,t.Layers=oe,t.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},t.LessDepth=2,t.LessEqualDepth=3,t.LessEqualStencilFunc=515,t.LessStencilFunc=513,t.Light=Ll,t.LightProbe=Xl,t.Line=sa,t.Line3=Qc,t.LineBasicMaterial=$s,t.LineCurve=xl,t.LineCurve3=_l,t.LineDashedMaterial=Po,t.LineLoop=ca,t.LinePieces=1,t.LineSegments=la,t.LineStrip=0,t.LinearEncoding=Rt,t.LinearFilter=q,t.LinearInterpolant=Oo,t.LinearMipMapLinearFilter=1008,t.LinearMipMapNearestFilter=1007,t.LinearMipmapLinearFilter=Y,t.LinearMipmapNearestFilter=X,t.LinearToneMapping=1,t.Loader=Qo,t.LoaderUtils=Zl,t.LoadingManager=Zo,t.LogLuvEncoding=3003,t.LoopOnce=2200,t.LoopPingPong=2202,t.LoopRepeat=2201,t.LuminanceAlphaFormat=1025,t.LuminanceFormat=1024,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},t.Material=Fe,t.MaterialLoader=Yl,t.Math=Ct,t.MathUtils=Ct,t.Matrix3=nt,t.Matrix4=Jt,t.MaxEquation=104,t.Mesh=Bn,t.MeshBasicMaterial=qe,t.MeshDepthMaterial=ts,t.MeshDistanceMaterial=es,t.MeshFaceMaterial=function(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t},t.MeshLambertMaterial=Ro,t.MeshMatcapMaterial=Co,t.MeshNormalMaterial=Lo,t.MeshPhongMaterial=Eo,t.MeshPhysicalMaterial=To,t.MeshStandardMaterial=So,t.MeshToonMaterial=Ao,t.MinEquation=103,t.MirroredRepeatWrapping=G,t.MixOperation=1,t.MultiMaterial=function(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},t.MultiplyBlending=4,t.MultiplyOperation=0,t.NearestFilter=k,t.NearestMipMapLinearFilter=1005,t.NearestMipMapNearestFilter=1004,t.NearestMipmapLinearFilter=j,t.NearestMipmapNearestFilter=V,t.NeverDepth=0,t.NeverStencilFunc=512,t.NoBlending=0,t.NoColors=0,t.NoToneMapping=0,t.NormalAnimationBlendMode=b,t.NormalBlending=1,t.NotEqualDepth=7,t.NotEqualStencilFunc=517,t.NumberKeyframeTrack=Go,t.Object3D=be,t.ObjectLoader=class extends Qo{constructor(t){super(t)}load(i,r,t,s){const a=this,e=""===this.path?Zl.extractUrlBase(i):this.path;this.resourcePath=this.resourcePath||e;const n=new $o(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(i,function(t){let e=null;try{e=JSON.parse(t)}catch(t){return void 0!==s&&s(t),void console.error("THREE:ObjectLoader: Can't parse "+i+".",t.message)}const n=e.metadata;void 0!==n&&void 0!==n.type&&"geometry"!==n.type.toLowerCase()?a.parse(e,r):console.error("THREE.ObjectLoader: Can't load "+i)},t,s)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,function(){void 0!==e&&e(l)}),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,r,o,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in s)if(s[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}parseShapes(n){const i={};if(void 0!==n)for(let e=0,t=n.length;e<t;e++){const t=(new Al).fromJSON(n[e]);i[t.uuid]=t}return i}parseSkeletons(n,t){const i={},r={};if(t.traverse(function(t){t.isBone&&(r[t.uuid]=t)}),void 0!==n)for(let e=0,t=n.length;e<t;e++){const t=(new Xs).fromJSON(n[e],r);i[t.uuid]=t}return i}parseGeometries(r,s){const a={};let o;if(void 0!==r){const i=new Kl;for(let e=0,t=r.length;e<t;e++){let t;const n=r[e];switch(n.type){case"PlaneGeometry":case"PlaneBufferGeometry":t=new bo[n.type](n.width,n.height,n.widthSegments,n.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":t=new bo[n.type](n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":t=new bo[n.type](n.radius,n.segments,n.thetaStart,n.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":t=new bo[n.type](n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":t=new bo[n.type](n.radius,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":t=new bo[n.type](n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":t=new bo[n.type](n.radius,n.detail);break;case"RingGeometry":case"RingBufferGeometry":t=new bo[n.type](n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":t=new bo[n.type](n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":t=new bo[n.type](n.radius,n.tube,n.tubularSegments,n.radialSegments,n.p,n.q);break;case"TubeGeometry":case"TubeBufferGeometry":t=new bo[n.type]((new Sl[n.path.type]).fromJSON(n.path),n.tubularSegments,n.radius,n.radialSegments,n.closed);break;case"LatheGeometry":case"LatheBufferGeometry":t=new bo[n.type](n.points,n.segments,n.phiStart,n.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":t=new bo[n.type](n.vertices,n.indices,n.radius,n.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":o=[];for(let t=0,e=n.shapes.length;t<e;t++){const a=s[n.shapes[t]];o.push(a)}t=new bo[n.type](o,n.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":o=[];for(let t=0,e=n.shapes.length;t<e;t++){const a=s[n.shapes[t]];o.push(a)}const r=n.options.extrudePath;void 0!==r&&(n.options.extrudePath=(new Sl[r.type]).fromJSON(r)),t=new bo[n.type](o,n.options);break;case"BufferGeometry":case"InstancedBufferGeometry":t=i.parse(n);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+n.type+'"');continue}t.uuid=n.uuid,void 0!==n.name&&(t.name=n.name),!0===t.isBufferGeometry&&void 0!==n.userData&&(t.userData=n.userData),a[n.uuid]=t}}return a}parseMaterials(i,t){const r={},s={};if(void 0!==i){const n=new Yl;n.setTextures(t);for(let t=0,e=i.length;t<e;t++){const e=i[t];if("MultiMaterial"===e.type){const i=[];for(let t=0;t<e.materials.length;t++){const s=e.materials[t];void 0===r[s.uuid]&&(r[s.uuid]=n.parse(s)),i.push(r[s.uuid])}s[e.uuid]=i}else void 0===r[e.uuid]&&(r[e.uuid]=n.parse(e)),s[e.uuid]=r[e.uuid]}}return s}parseAnimations(i){const r={};if(void 0!==i)for(let n=0;n<i.length;n++){const t=i[n],e=qo.parse(t);r[e.uuid]=e}return r}parseImages(n,i){const r=this,s={};let a;function o(e){if("string"==typeof e){const t=e;return function(t){return r.manager.itemStart(t),a.load(t,function(){r.manager.itemEnd(t)},void 0,function(){r.manager.itemError(t),r.manager.itemEnd(t)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:r.resourcePath+t)}return e.data?{data:cn(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==n&&n.length>0){const r=new Zo(i);a=new el(r),a.setCrossOrigin(this.crossOrigin);for(let t=0,e=n.length;t<e;t++){const r=n[t],a=r.url;if(Array.isArray(a)){s[r.uuid]=[];for(let t=0,e=a.length;t<e;t++){const i=o(a[t]);null!==i&&(i instanceof HTMLImageElement?s[r.uuid].push(i):s[r.uuid].push(new Yn(i.data,i.width,i.height)))}}else{const n=o(r.url);null!==n&&(s[r.uuid]=n)}}}return s}parseTextures(r,s){function a(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const o={};if(void 0!==r)for(let i=0,t=r.length;i<t;i++){const t=r[i];let e;void 0===t.image&&console.warn('THREE.ObjectLoader: No "image" specified for',t.uuid),void 0===s[t.image]&&console.warn("THREE.ObjectLoader: Undefined image",t.image);const n=s[t.image];Array.isArray(n)?(e=new qn(n),6===n.length&&(e.needsUpdate=!0)):(e=n&&n.data?new Yn(n.data,n.width,n.height):new at(n),n&&(e.needsUpdate=!0)),e.uuid=t.uuid,void 0!==t.name&&(e.name=t.name),void 0!==t.mapping&&(e.mapping=a(t.mapping,$l)),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.repeat&&e.repeat.fromArray(t.repeat),void 0!==t.center&&e.center.fromArray(t.center),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.wrap&&(e.wrapS=a(t.wrap[0],tc),e.wrapT=a(t.wrap[1],tc)),void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.encoding&&(e.encoding=t.encoding),void 0!==t.minFilter&&(e.minFilter=a(t.minFilter,ec)),void 0!==t.magFilter&&(e.magFilter=a(t.magFilter,ec)),void 0!==t.anisotropy&&(e.anisotropy=t.anisotropy),void 0!==t.flipY&&(e.flipY=t.flipY),void 0!==t.premultiplyAlpha&&(e.premultiplyAlpha=t.premultiplyAlpha),void 0!==t.unpackAlignment&&(e.unpackAlignment=t.unpackAlignment),o[t.uuid]=e}return o}parseObject(t,e,r,n){let i,s,a;function o(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function l(i){if(void 0!==i){if(Array.isArray(i)){const n=[];for(let e=0,t=i.length;e<t;e++){const t=i[e];void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n.push(r[t])}return n}return void 0===r[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),r[i]}}switch(t.type){case"Scene":i=new ms,void 0!==t.background&&Number.isInteger(t.background)&&(i.background=new je(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?i.fog=new fs(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(i.fog=new ps(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Vn(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(i.focus=t.focus),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.filmGauge&&(i.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(i.filmOffset=t.filmOffset),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Gl(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new Wl(t.color,t.intensity);break;case"DirectionalLight":i=new Vl(t.color,t.intensity);break;case"PointLight":i=new Ul(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new jl(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Bl(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new Rl(t.color,t.groundColor,t.intensity);break;case"LightProbe":i=(new Xl).fromJSON(t);break;case"SkinnedMesh":s=o(t.geometry),a=l(t.material),i=new Vs(s,a),void 0!==t.bindMode&&(i.bindMode=t.bindMode),void 0!==t.bindMatrix&&i.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(i.skeleton=t.skeleton);break;case"Mesh":s=o(t.geometry),a=l(t.material),i=new Bn(s,a);break;case"InstancedMesh":s=o(t.geometry),a=l(t.material);const e=t.count,r=t.instanceMatrix,n=t.instanceColor;i=new Ks(s,a,e),i.instanceMatrix=new Ze(new Float32Array(r.array),16),void 0!==n&&(i.instanceColor=new Ze(new Float32Array(n.array),n.itemSize));break;case"LOD":i=new zs;break;case"Line":i=new sa(o(t.geometry),l(t.material));break;case"LineLoop":i=new ca(o(t.geometry),l(t.material));break;case"LineSegments":i=new la(o(t.geometry),l(t.material));break;case"PointCloud":case"Points":i=new ma(o(t.geometry),l(t.material));break;case"Sprite":i=new Is(l(t.material));break;case"Group":i=new os;break;case"Bone":i=new Ws;break;default:i=new be}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(i.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.quaternion&&i.quaternion.fromArray(t.quaternion),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.castShadow&&(i.castShadow=t.castShadow),void 0!==t.receiveShadow&&(i.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(i.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(i.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(i.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&i.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(i.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.frustumCulled&&(i.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(i.renderOrder=t.renderOrder),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.layers&&(i.layers.mask=t.layers),void 0!==t.children){const s=t.children;for(let t=0;t<s.length;t++)i.add(this.parseObject(s[t],e,r,n))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const r=e[t];i.animations.push(n[r])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(i.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const r=e[t],n=i.getObjectByProperty("uuid",r.object);void 0!==n&&i.addLevel(n,r.distance)}}return i}bindSkeletons(t,n){0!==Object.keys(n).length&&t.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const t=n[e.skeleton];void 0===t?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix)}})}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}},t.ObjectSpaceNormalMap=1,t.OctahedronBufferGeometry=co,t.OctahedronGeometry=co,t.OneFactor=201,t.OneMinusDstAlphaFactor=207,t.OneMinusDstColorFactor=209,t.OneMinusSrcAlphaFactor=205,t.OneMinusSrcColorFactor=203,t.OrthographicCamera=Gl,t.PCFShadowMap=1,t.PCFSoftShadowMap=2,t.PMREMGenerator=class{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new It(0,1,0);return new Mo({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Lh[3e3]},outputEncoding:{value:Lh[3e3]}},vertexShader:Xh(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${Yh()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}(Ah),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Oh=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=qh(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=jh(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Dh.length;t++)Dh[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Oh),t.scissorTest=!1,Wh(t,0,0,t.width,t.height)}_fromTexture(t){Oh=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:k,minFilter:k,generateMipmaps:!1,type:Tt,format:1023,encoding:Gh(t)?t.encoding:R,depthBuffer:!1},n=Vh(e);return n.depthBuffer=!t,this._pingPongRenderTarget=Vh(e),n}_compileMaterial(t){const e=new Bn(Dh[0],t);this._renderer.compile(e,Ph)}_sceneToCubeUV(e,t,n,i){const r=new Vn(90,1,t,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.outputEncoding,h=o.toneMapping;o.getClearColor(Bh),o.toneMapping=0,o.outputEncoding=Rt,o.autoClear=!1;let u=!1;const d=e.background;if(d){if(d.isColor){Rh.color.copy(d).convertSRGBToLinear(),e.background=null;const t=Uh(Rh.color);Rh.opacity=t,u=!0}}else{Rh.color.copy(Bh).convertSRGBToLinear();const e=Uh(Rh.color);Rh.opacity=e,u=!0}for(let t=0;t<6;t++){const n=t%3;0==n?(r.up.set(0,s[t],0),r.lookAt(a[t],0,0)):1==n?(r.up.set(0,0,s[t]),r.lookAt(0,a[t],0)):(r.up.set(0,s[t],0),r.lookAt(0,0,a[t])),Wh(i,n*Sh,t>2?Sh:0,Sh,Sh),o.setRenderTarget(i),u&&o.render(Ch,r),o.render(e,r)}o.toneMapping=h,o.outputEncoding=c,o.autoClear=l}_textureToCubeUV(t,e){const n=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=qh()):null==this._equirectShader&&(this._equirectShader=jh());const i=t.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Bn(Dh[0],i),s=i.uniforms;s.envMap.value=t,t.isCubeTexture||s.texelSize.value.set(1/t.image.width,1/t.image.height),s.inputEncoding.value=Lh[t.encoding],s.outputEncoding.value=Lh[e.texture.encoding],Wh(e,0,0,3*Sh,2*Sh),n.setRenderTarget(e),n.render(r,Ph)}_applyPMREM(n){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let e=1;e<Eh;e++){const i=Math.sqrt(Nh[e]*Nh[e]-Nh[e-1]*Nh[e-1]),t=Hh[(e-1)%Hh.length];this._blur(n,e-1,e,i,t)}t.autoClear=i}_blur(t,e,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,i,"latitudinal",r),this._halfBlur(s,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Bn(Dh[i],l),h=l.uniforms,u=Ih[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):Ah;f>Ah&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<Ah;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0==t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===s,a&&(h.poleAxis.value=a),h.dTheta.value=d,h.mipInt.value=8-n,h.inputEncoding.value=Lh[t.texture.encoding],h.outputEncoding.value=Lh[t.texture.encoding];const v=Ih[i];Wh(e,3*Math.max(0,Sh-2*v),(0===i?0:2*Sh)+2*v*(i>4?i-8+4:0),3*v,2*v),o.setRenderTarget(e),o.render(c,Ph)}},t.ParametricBufferGeometry=ho,t.ParametricGeometry=ho,t.Particle=function(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Is(t)},t.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new ha(t)},t.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ma(t,e)},t.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new ha(t)},t.Path=El,t.PerspectiveCamera=Vn,t.Plane=Te,t.PlaneBufferGeometry=ti,t.PlaneGeometry=ti,t.PlaneHelper=class extends sa{constructor(t,e=1,n=16776960){const i=n,r=new vn;r.setAttribute("position",new sn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new $s({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new vn;s.setAttribute("position",new sn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Bn(s,new qe({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}},t.PointCloud=function(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ma(t,e)},t.PointCloudMaterial=function(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new ha(t)},t.PointLight=Ul,t.PointLightHelper=class extends Bn{constructor(t,e,n){super(new fo(e,4,2),new qe({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},t.Points=ma,t.PointsMaterial=ha,t.PolarGridHelper=class extends la{constructor(i=10,r=16,e=8,s=64,a=4473924,o=8947848){a=new je(a),o=new je(o);const l=[],c=[];for(let n=0;n<=r;n++){const s=n/r*(2*Math.PI),h=Math.sin(s)*i,t=Math.cos(s)*i;l.push(0,0,0),l.push(h,0,t);const e=1&n?a:o;c.push(e.r,e.g,e.b),c.push(e.r,e.g,e.b)}for(let t=0;t<=e;t++){const h=1&t?a:o,r=i-i/e*t;for(let i=0;i<s;i++){let t=i/s*(2*Math.PI),e=Math.sin(t)*r,n=Math.cos(t)*r;l.push(e,0,n),c.push(h.r,h.g,h.b),t=(i+1)/s*(2*Math.PI),e=Math.sin(t)*r,n=Math.cos(t)*r,l.push(e,0,n),c.push(h.r,h.g,h.b)}}const h=new vn;h.setAttribute("position",new sn(l,3)),h.setAttribute("color",new sn(c,3));super(h,new $s({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}},t.PolyhedronBufferGeometry=Sa,t.PolyhedronGeometry=Sa,t.PositionalAudio=class extends xc{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_c,bc,wc),Mc.set(0,0,1).applyQuaternion(bc);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(_c.x,t),e.positionY.linearRampToValueAtTime(_c.y,t),e.positionZ.linearRampToValueAtTime(_c.z,t),e.orientationX.linearRampToValueAtTime(Mc.x,t),e.orientationY.linearRampToValueAtTime(Mc.y,t),e.orientationZ.linearRampToValueAtTime(Mc.z,t)}else e.setPosition(_c.x,_c.y,_c.z),e.setOrientation(Mc.x,Mc.y,Mc.z)}},t.PropertyBinding=zc,t.PropertyMixer=Tc,t.QuadraticBezierCurve=bl,t.QuadraticBezierCurve3=wl,t.Quaternion=ht,t.QuaternionKeyframeTrack=Vo,t.QuaternionLinearInterpolant=ko,t.REVISION=e,t.RGBADepthPacking=3201,t.RGBAFormat=Lt,t.RGBAIntegerFormat=1033,t.RGBA_ASTC_10x10_Format=37819,t.RGBA_ASTC_10x5_Format=37816,t.RGBA_ASTC_10x6_Format=37817,t.RGBA_ASTC_10x8_Format=37818,t.RGBA_ASTC_12x10_Format=37820,t.RGBA_ASTC_12x12_Format=37821,t.RGBA_ASTC_4x4_Format=37808,t.RGBA_ASTC_5x4_Format=37809,t.RGBA_ASTC_5x5_Format=37810,t.RGBA_ASTC_6x5_Format=37811,t.RGBA_ASTC_6x6_Format=37812,t.RGBA_ASTC_8x5_Format=37813,t.RGBA_ASTC_8x6_Format=37814,t.RGBA_ASTC_8x8_Format=37815,t.RGBA_BPTC_Format=36492,t.RGBA_ETC2_EAC_Format=m,t.RGBA_PVRTC_2BPPV1_Format=p,t.RGBA_PVRTC_4BPPV1_Format=d,t.RGBA_S3TC_DXT1_Format=s,t.RGBA_S3TC_DXT3_Format=l,t.RGBA_S3TC_DXT5_Format=c,t.RGBDEncoding=D,t.RGBEEncoding=R,t.RGBEFormat=1023,t.RGBFormat=K,t.RGBIntegerFormat=1032,t.RGBM16Encoding=P,t.RGBM7Encoding=C,t.RGB_ETC1_Format=36196,t.RGB_ETC2_Format=f,t.RGB_PVRTC_2BPPV1_Format=u,t.RGB_PVRTC_4BPPV1_Format=h,t.RGB_S3TC_DXT1_Format=r,t.RGFormat=1030,t.RGIntegerFormat=1031,t.RawShaderMaterial=Mo,t.Ray=Zt,t.Raycaster=Wc,t.RectAreaLight=jl,t.RedFormat=1028,t.RedIntegerFormat=1029,t.ReinhardToneMapping=2,t.RepeatWrapping=H,t.ReplaceStencilOp=7681,t.ReverseSubtractEquation=102,t.RingBufferGeometry=uo,t.RingGeometry=uo,t.SRGB8_ALPHA8_ASTC_10x10_Format=37851,t.SRGB8_ALPHA8_ASTC_10x5_Format=37848,t.SRGB8_ALPHA8_ASTC_10x6_Format=37849,t.SRGB8_ALPHA8_ASTC_10x8_Format=37850,t.SRGB8_ALPHA8_ASTC_12x10_Format=37852,t.SRGB8_ALPHA8_ASTC_12x12_Format=37853,t.SRGB8_ALPHA8_ASTC_4x4_Format=37840,t.SRGB8_ALPHA8_ASTC_5x4_Format=37841,t.SRGB8_ALPHA8_ASTC_5x5_Format=37842,t.SRGB8_ALPHA8_ASTC_6x5_Format=37843,t.SRGB8_ALPHA8_ASTC_6x6_Format=37844,t.SRGB8_ALPHA8_ASTC_8x5_Format=37845,t.SRGB8_ALPHA8_ASTC_8x6_Format=37846,t.SRGB8_ALPHA8_ASTC_8x8_Format=37847,t.Scene=ms,t.SceneUtils=Zh,t.ShaderChunk=ei,t.ShaderLib=ii,t.ShaderMaterial=Gn,t.ShadowMaterial=wo,t.Shape=Al,t.ShapeBufferGeometry=po,t.ShapeGeometry=po,t.ShapePath=ic,t.ShapeUtils=no,t.ShortType=1011,t.Skeleton=Xs,t.SkeletonHelper=ih,t.SkinnedMesh=Vs,t.SmoothShading=2,t.Sphere=Gt,t.SphereBufferGeometry=fo,t.SphereGeometry=fo,t.Spherical=class{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Ct.clamp(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},t.SphericalHarmonics3=ql,t.SplineCurve=Ml,t.SpotLight=Bl,t.SpotLightHelper=class extends be{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new vn,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,n=1,i=32;e<i;e++,n++){const s=e/i*Math.PI*2,t=n/i*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(t),Math.sin(t),1)}n.setAttribute("position",new sn(r,3));const s=new $s({fog:!1,toneMapped:!1});this.cone=new la(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),$c.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt($c),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},t.Sprite=Is,t.SpriteMaterial=xs,t.SrcAlphaFactor=204,t.SrcAlphaSaturateFactor=210,t.SrcColorFactor=202,t.StaticCopyUsage=35046,t.StaticDrawUsage=N,t.StaticReadUsage=35045,t.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Vn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Vn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(a){const o=this._cache;if(o.focus!==a.focus||o.fov!==a.fov||o.aspect!==a.aspect*this.aspect||o.near!==a.near||o.far!==a.far||o.zoom!==a.zoom||o.eyeSep!==this.eyeSep){o.focus=a.focus,o.fov=a.fov,o.aspect=a.aspect*this.aspect,o.near=a.near,o.far=a.far,o.zoom=a.zoom,o.eyeSep=this.eyeSep;const t=a.projectionMatrix.clone(),e=o.eyeSep/2,n=e*o.near/o.focus,i=o.near*Math.tan(Ct.DEG2RAD*o.fov*.5)/o.zoom;let r,s;dc.elements[12]=-e,uc.elements[12]=e,r=-i*o.aspect+n,s=i*o.aspect+n,t.elements[0]=2*o.near/(s-r),t.elements[8]=(s+r)/(s-r),this.cameraL.projectionMatrix.copy(t),r=-i*o.aspect-n,s=i*o.aspect-n,t.elements[0]=2*o.near/(s-r),t.elements[8]=(s+r)/(s-r),this.cameraR.projectionMatrix.copy(t)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(dc),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(uc)}},t.StreamCopyUsage=35042,t.StreamDrawUsage=35040,t.StreamReadUsage=35041,t.StringKeyframeTrack=Wo,t.SubtractEquation=101,t.SubtractiveBlending=3,t.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},t.TangentSpaceNormalMap=0,t.TetrahedronBufferGeometry=mo,t.TetrahedronGeometry=mo,t.TextBufferGeometry=go,t.TextGeometry=go,t.Texture=at,t.TextureLoader=rl,t.TorusBufferGeometry=vo,t.TorusGeometry=vo,t.TorusKnotBufferGeometry=yo,t.TorusKnotGeometry=yo,t.Triangle=Oe,t.TriangleFanDrawMode=2,t.TriangleStripDrawMode=1,t.TrianglesDrawMode=0,t.TubeBufferGeometry=xo,t.TubeGeometry=xo,t.UVMapping=n,t.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new tn(t,e)},t.Uint16BufferAttribute=tn,t.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new nn(t,e)},t.Uint32BufferAttribute=nn,t.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Qe(t,e)},t.Uint8BufferAttribute=Qe,t.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Ke(t,e)},t.Uint8ClampedBufferAttribute=Ke,t.Uniform=Gc,t.UniformsLib=ni,t.UniformsUtils=Un,t.UnsignedByteType=Tt,t.UnsignedInt248Type=Q,t.UnsignedIntType=J,t.UnsignedShort4444Type=1017,t.UnsignedShort5551Type=1018,t.UnsignedShort565Type=1019,t.UnsignedShortType=Z,t.VSMShadowMap=3,t.Vector2=Pt,t.Vector3=It,t.Vector4=Dt,t.VectorKeyframeTrack=jo,t.Vertex=function(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new It(t,e,n)},t.VertexColors=2,t.VideoTexture=va,t.WebGL1Renderer=ds,t.WebGLCubeRenderTarget=Xn,t.WebGLMultisampleRenderTarget=ct,t.WebGLRenderTarget=lt,t.WebGLRenderTargetCube=function(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Xn(t,n)},t.WebGLRenderer=us,t.WebGLUtils=ss,t.WireframeGeometry=_o,t.WireframeHelper=function(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new la(new _o(t.geometry),new $s({color:void 0!==e?e:16777215}))},t.WrapAroundEnding=_,t.XHRLoader=function(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new $o(t)},t.ZeroCurvatureEnding=y,t.ZeroFactor=200,t.ZeroSlopeEnding=x,t.ZeroStencilOp=0,t.sRGBEncoding=M,Object.defineProperty(t,"__esModule",{value:!0})});